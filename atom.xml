<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michael&#39;s blog</title>
  
  <subtitle>Life-long Learning</subtitle>
  <link href="http://mikelhsia.github.io/atom.xml" rel="self"/>
  
  <link href="http://mikelhsia.github.io/"/>
  <updated>2021-10-12T12:30:22.633Z</updated>
  <id>http://mikelhsia.github.io/</id>
  
  <author>
    <name>Michael Hsia</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Pair Trading】Part 3. The strategy that helps minimize your portfolio risk</title>
    <link href="http://mikelhsia.github.io/2021/09/30/2021-10-05-pair-trading-market-neutral/"/>
    <id>http://mikelhsia.github.io/2021/09/30/2021-10-05-pair-trading-market-neutral/</id>
    <published>2021-09-30T07:45:52.000Z</published>
    <updated>2021-10-12T12:30:22.633Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/cover.png" class="" width="800"><blockquote><p>Previous reading:</p><ul><li><a href="https://medium.com/@mikelhsia/pair-trading-introduction-to-pair-trading-strategy-c97a1d0897ff">【Pair Trading】Introduction to pair trading strategy</a></li><li><a href="https://medium.com/@mikelhsia/after-knowing-what-the-pair-trading-strategy-is-about-from-the-previous-post-were-going-to-use-98e41ef3ea5">【Pair Trading】In-depth analysis of 5 distance approach strategies in pair trading</a></li></ul></blockquote><p>In the previous post <a href="https://medium.com/@mikelhsia/after-knowing-what-the-pair-trading-strategy-is-about-from-the-previous-post-were-going-to-use-98e41ef3ea5">【Pair Trading】In-depth analysis of 5 distance approach strategies in pair trading</a>, we have conducted various research against each variation of distance approaches in pair trading strategy. Despite the research has given us probable insights whether there is an <strong>$\alpha$</strong> exists in the strategy we constructed, we still haven’t established our portfolio construction strategy. Here we introduce a concept called the “long-short equity (LSE)” strategy.</p><p>Therefore, the objectives of this post are consists of three:</p><ol><li>What is the long-short equity (LSE) strategy</li><li>Review our backtest results to see the impact of adopting the long-short strategy</li><li>What are the advanced strategies that we can explore</li></ol><a id="more"></a><h1 id="The-Long-short-equity-LSE-strategy"><a href="#The-Long-short-equity-LSE-strategy" class="headerlink" title="The Long-short equity (LSE) strategy"></a>The Long-short equity (LSE) strategy</h1><p>The long-short equity (LSE) strategy is an extension of the pair strategy which takes long positions in stocks that are expected to appreciate and takes short positions in stocks that are expected to depreciate. It’s a classic hedge fund investment strategy that is able to generate relatively higher risk-adjusted returns with lower volatility and smaller market-specific exposure compared to the traditional long-only portfolio.</p><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/long-short.jpg" class="" width="400"><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Long-short strategy</i></p><h1 id="Backtest-against-the-distance-approaches-selected"><a href="#Backtest-against-the-distance-approaches-selected" class="headerlink" title="Backtest against the distance approaches selected"></a>Backtest against the distance approaches selected</h1><p>Here we’re going to run backtests against the approaches we have spoken about in the previous post:</p><ul><li>Basic distance</li><li>High variance</li><li>Zero crossing</li><li>Pearson correlation</li></ul><p>In this series of backtests, we will adopt the <strong>long-only strategy</strong> (<em>buy the stocks that are most likely to rise</em>) against each of the four pair-trading approaches. In the meantime, we’re going to adopt the <strong>long-short strategy</strong> (<em>long the stocks that are expected to appreciate, and short other stocks that are expected to depreciate</em>) to backtest each pair-trading approach under the same conditions. By doing these, we can compare and see the impact of applying the long-short strategy.</p><h2 id="Strategy"><a href="#Strategy" class="headerlink" title="Strategy"></a>Strategy</h2><p>There are other setups including:</p><h3 id="1-Platform"><a href="#1-Platform" class="headerlink" title="1. Platform"></a>1. Platform</h3><p><a href="https://www.quantconnect.com/">QuantConnect</a></p><h3 id="2-Universe-selection"><a href="#2-Universe-selection" class="headerlink" title="2. Universe selection"></a>2. Universe selection</h3><ol><li>Rank all the stocks by <code>DollarVolume</code></li><li>Choose stocks that are in NASDAQ and NYSE</li><li>Filter out the stocks that are listed less than 180 days (3 months)</li><li>Filter out the companies whose market capitalization are less than 500 million dollars</li></ol><h3 id="3-Rebalancing-strategy"><a href="#3-Rebalancing-strategy" class="headerlink" title="3. Rebalancing strategy"></a>3. Rebalancing strategy</h3><ol><li>For the long-only strategy scenario, we buy 20 stocks that are most likely to rise.</li><li>For the long-short strategy scenario, we long 20 stocks that are most likely to rise and short 20 stocks that are most likely to drop.</li><li>We assign even weight to each position.</li><li>We don’t adjust the weight of the portfolio while we hold our positions.</li></ol><h3 id="4-Long-Short-signal-generation"><a href="#4-Long-Short-signal-generation" class="headerlink" title="4. Long/Short signal generation"></a>4. Long/Short signal generation</h3><p>We have all the details regarding how to trigger the long or short signals in <a href="https://medium.com/@mikelhsia/after-knowing-what-the-pair-trading-strategy-is-about-from-the-previous-post-were-going-to-use-98e41ef3ea5">this post here</a>. For those who haven’t read this post, the critical details have been summarized below:</p><ol><li>For basic distance, high variance, and zero-crossing methods, we use $\pm 1.5 \times std\ of\ spread$ as the upper bound and lower bound to trigger the buy/sell signals. Then we close the positions when the spread reverts back to the zero-line.</li></ol><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/threshold.png" class="" width="600"><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Open when above the upper bound and below the lower bound, and close when reverting back to the zero-line.</i></p><ol><li>For the Pearson Correlation method, we construct a benchmark portfolio for each stock by picking the 50 most correlated stocks. We long the stocks that its stock price movement deviated from its benchmark portfolio movement, and spread of the stock movement is negative. Vice versa, we short the stocks that the spread of the stock movement is positive against the benchmark portfolio movement.</li></ol><h2 id="Backtest-results"><a href="#Backtest-results" class="headerlink" title="Backtest results"></a>Backtest results</h2><h3 id="Backtest-of-basic-distance"><a href="#Backtest-of-basic-distance" class="headerlink" title="Backtest of basic distance"></a>Backtest of basic distance</h3><div class="table-container"><table><thead><tr><th></th><th>LO-BD</th><th>LS-BD</th><th>Impact</th></tr></thead><tbody><tr><td>Diagram</td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-LO-BD-2y.png" class="" width="600"></td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-MN-BD-2y.png" class="" width="600"></td><td></td></tr><tr><td>No. of trade</td><td>172</td><td>428</td><td><font color="red">+256</font></td></tr><tr><td>Return</td><td>67.45%</td><td>18.98%</td><td><font color="red">-48.47%</font></td></tr><tr><td>Annual Return</td><td>35.393%</td><td>10.754%</td><td><font color="red">-24.639%</font></td></tr><tr><td>Annual Standard Deviation</td><td>0.304</td><td>0.134</td><td><font color="green">-0.17</font></td></tr><tr><td>Max D.D.</td><td>38.4%</td><td>13.9%</td><td><font color="green">-24.5%</font></td></tr><tr><td>Beta</td><td>-0.161</td><td><font color="green">0.036</font></td><td></td></tr><tr><td>Alpha</td><td>0.381</td><td>0.09</td><td><font color="red">-0.372</font></td></tr><tr><td>Sharpe Ratio</td><td>1.136</td><td>0.731</td><td><font color="red">-0.405</font></td></tr></tbody></table></div><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>LO: Long-Only strategy, LS: Long-Short strategy, BD: Basic Distance</i></p><h3 id="Backtest-of-zero-crossing"><a href="#Backtest-of-zero-crossing" class="headerlink" title="Backtest of zero crossing"></a>Backtest of zero crossing</h3><div class="table-container"><table><thead><tr><th></th><th>LO-ZC</th><th>LS-ZC</th><th>Impact</th></tr></thead><tbody><tr><td>Diagram</td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-LO-ZC-2y.png" class="" width="600"></td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-MN-ZC-2y.png" class="" width="600"></td><td></td></tr><tr><td>No. of trade</td><td>102</td><td>216</td><td><font color="red">+114</font></td></tr><tr><td>Return</td><td>35.98%</td><td>8.27%</td><td><font color="red">-27.71%</font></td></tr><tr><td>Annual Return</td><td>19.8%</td><td>4.779%</td><td><font color="red">-15.021%</font></td></tr><tr><td>Annual Standard Deviation</td><td>0.303</td><td>0.093</td><td><font color="green">-0.21</font></td></tr><tr><td>Max D.D.</td><td>45.0%</td><td>8.3%</td><td><font color="green">-36.7%</font></td></tr><tr><td>Beta</td><td>-0.204</td><td><font color="green">0.014</font></td><td></td></tr><tr><td>Alpha</td><td>0.262</td><td>0.041</td><td><font color="red">-0.221</font></td></tr><tr><td>Sharpe Ratio</td><td>0.714</td><td>0.47</td><td><font color="red">-0.244</font></td></tr></tbody></table></div><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>LO: Long-Only strategy, LS: Long-Short strategy, ZC: Zero Crossing</i></p><h3 id="Backtest-of-high-variance"><a href="#Backtest-of-high-variance" class="headerlink" title="Backtest of high variance"></a>Backtest of high variance</h3><div class="table-container"><table><thead><tr><th></th><th>LO-HV</th><th>LS-HV</th><th>Impact</th></tr></thead><tbody><tr><td>Diagram</td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-LO-HV-2y.png" class="" width="600"></td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-MN-HV-2y.png" class="" width="600"></td><td></td></tr><tr><td>No. of trade</td><td>75</td><td>186</td><td><font color="red">+111</font></td></tr><tr><td>Return</td><td>39.1%</td><td>10.66%</td><td><font color="red">-28.44%</font></td></tr><tr><td>Annual Return</td><td>21.446%</td><td>6.136%</td><td><font color="red">-15.31%</font></td></tr><tr><td>Annual Standard Deviation</td><td>0.27</td><td>0.079</td><td><font color="green">-0.191</font></td></tr><tr><td>Max D.D.</td><td>41.00%</td><td>6.200%</td><td><font color="green">-34.80%</font></td></tr><tr><td>Beta</td><td>-0.143</td><td><font color="green">0.037</font></td><td></td></tr><tr><td>Alpha</td><td>0.25</td><td>0.046</td><td><font color="red">-0.204</font></td></tr><tr><td>Sharpe Ratio</td><td>0.806</td><td>0.677</td><td><font color="red">-0.129</font></td></tr></tbody></table></div><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>LO: Long-Only strategy, LS: Long-Short strategy, HV: High Variance</i></p><h3 id="Backtest-of-Pearson-Correlation"><a href="#Backtest-of-Pearson-Correlation" class="headerlink" title="Backtest of Pearson Correlation"></a>Backtest of Pearson Correlation</h3><div class="table-container"><table><thead><tr><th></th><th>LO-PC</th><th>LS-PC</th><th>Impact</th></tr></thead><tbody><tr><td>Diagram</td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-LO-PC-2y.png" class="" width="600"></td><td><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/PT-C2-MN-PC-2y.png" class="" width="600"></td><td></td></tr><tr><td>No. of trade</td><td>72</td><td>1438</td><td><font color="red">+1366</font></td></tr><tr><td>Return</td><td>67.72%</td><td>3.9%</td><td><font color="red">-63.82%</font></td></tr><tr><td>Annual Return</td><td>35.522%</td><td>2.272%</td><td><font color="red">-33.25%</font></td></tr><tr><td>Annual Standard Deviation</td><td>0.406</td><td>0.197</td><td><font color="green">-0.209</font></td></tr><tr><td>Max D.D.</td><td>52.200%</td><td>33.90%</td><td><font color="green">-18.30%</font></td></tr><tr><td>Beta</td><td>-0.174</td><td><font color="green">-0.015</font></td><td>+0.159</td></tr><tr><td>Alpha</td><td>0.435</td><td>0.042</td><td><font color="red">-0.393</font></td></tr><tr><td>Sharpe Ratio</td><td>0.975</td><td>0.196</td><td><font color="red">-0.779</font></td></tr></tbody></table></div><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>LO: Long-Only strategy, LS: Long-Short strategy, PC: Pearson Correlation</i></p><h3 id="Summaries"><a href="#Summaries" class="headerlink" title="Summaries"></a>Summaries</h3><p>It’s quite clear to notice the impact after applying the long-short strategy. There are a few insights that we can extract from this series of backtests:</p><div class="table-container"><table><thead><tr><th></th><th>Summarized details</th></tr></thead><tbody><tr><td>Pros</td><td>1. As you short stocks while applying this strategy, you’re actually gaining and preserving more cash for your available cash pool. <br> 2. The volatility KPIs, such as annual standard deviation and max dropdown, are drastically decreased by a certain degree, making your portfolio less volatile.<br> 3. <strong><em>Beta</em></strong> is the indicator of whether your portfolio is highly related to the entire market. Your portfolio will be influenced less by the market fluctuation when the beta is close to 0. After applying the long-short strategy, you can tell that the beta has reduced to one-tenth in every scenario. Compare to the traditional long-only strategy, the long-short strategy suffers less influence during the recession, therefore your portfolio could rebound faster than the long-only strategy. <br><img data-src="/2021/09/30/2021-10-05-pair-trading-market-neutral/long-short-strategy.png" class="" width="400"> <p style="font-size: 0.8em; text-align:center; color: grey;"> <i>The opposite position would help hedge your losing positions, just like the dropdown happened in Apr. 2020 </i> </p></td></tr><tr><td>Cons</td><td>1. Despite it has the benefit of reducing the volatility of your portfolio, the long-short strategy would also hurt the return of your portfolio.<br> 2. How do we evaluate whether applying the long-short strategy brings us more goods than harms or vice versa? We can take a look at the KPI <strong><em>Sharpe ratio</em></strong>. Sharpe ratio indicates the ratio between the risk-free return and the volatility. The decrease in Sharpe ratios in all scenarios does tell us that the long-short strategy takes away more return that can’t be compensated by the ability to withstand the volatility it adds.<br> 3. As you can see in the previous backtest, that the number of transactions increased substantially afterwards in any scenario. The transactional cost of applying this strategy would increase compared to the traditional long-only strategy.</td></tr></tbody></table></div><h1 id="What-are-the-advanced-strategies-that-we-can-explore"><a href="#What-are-the-advanced-strategies-that-we-can-explore" class="headerlink" title="What are the advanced strategies that we can explore?"></a>What are the advanced strategies that we can explore?</h1><p>Ummmm…. It seems like the results we have above don’t really gonna make us enough money to pay our rent. Even though the pair trading strategy that we developed above will help us reduce the volatility of our portfolio return, but the reduced return would really annoy us as this strategy makes us less money. So what are the things we can do in order to optimize this strategy and make it a money-making strategy? Here are a few other variations that we can explore:</p><h2 id="Long-bias-strategy"><a href="#Long-bias-strategy" class="headerlink" title="Long-bias strategy"></a>Long-bias strategy</h2><p>The long-bias strategy would require holding 130% long positions of invested capital and 30% short positions, achieving 100% net in long positions. The benefit of this strategy is that you could obtain more capital (<em>30% more cash from the short position, plus the original 100% capital</em>) to leverage compared to the traditional long-only strategy, which can only leverage 100% of their capital.</p><h2 id="Market-neutral-strategy"><a href="#Market-neutral-strategy" class="headerlink" title="Market neutral strategy"></a>Market neutral strategy</h2><p>Market neutral strategy refers to a type of investment strategy where the investor aims to profit from both an increase and a decrease in paired stock prices. This strategy features zero $\beta$, which makes the portfolio return won’t be impacted by the market fluctuation by hedging the systematic risk.</p><p>The benefits of adopting this strategy are pretty similar to the observation we have above, that applying market neutral strategy will make our portfolio more resilient in combating the economic storm.</p><h2 id="Dollar-neutral-strategy"><a href="#Dollar-neutral-strategy" class="headerlink" title="Dollar neutral strategy"></a>Dollar neutral strategy</h2><p>Similar to market neutral strategy, dollar neutral strategy targets to long the same dollar amount in positions and to short the same dollar amount in positions, rendering leveraging a very little portion of your available cash. The benefit being, you can leverage your positive and negative insights to maximize your portfolio value with very little money needed to be invested.</p><h1 id="Final-words"><a href="#Final-words" class="headerlink" title="Final words"></a>Final words</h1><p>From the performed backtest, we get to know the outcomes of applying long-short strategies and how it impacts your portfolio performance. Long-short strategies and pair trading strategies are never a strategy that can bring you outstanding returns to brag about. However, it is a strategy that can become a gold mine that brings you money slowly and steadily over the long run.</p><hr><h1 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h1><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://corporatefinanceinstitute.com/resources/knowledge/strategy/market-neutral/">What is Market Neutral?</a></li><li><a href="https://www.investopedia.com/terms/l/long-shortequity.asp">Long-Short Equity by Investopedia</a></li><li><a href="https://www.investopedia.com/articles/investing/111313/multiple-strategies-hedge-funds.asp">Multiple hedge fund strategies</a></li><li><a href="https://www.investopedia.com/terms/m/marketneutral.asp">Market Neutral</a></li><li><a href="https://www.alliancebernstein.com/CmsObjectABD/PDF/Research_WhitePaper/MarketNeutralWhitepaper06.08.12.pdf">Market-Neutral Strategies: An All-Weather Investment Option</a></li><li><a href="https://www.eurekahedge.com/Research/News/785/13030-Funds-What-is-Behind-the-Commercial-Offensive">130/30 Funds: What is Behind the Commercial Offensive?</a></li></ul><h2 id="Attached-backtest-summarized-report"><a href="#Attached-backtest-summarized-report" class="headerlink" title="Attached backtest summarized report"></a>Attached backtest summarized report</h2><div class="table-container"><table><thead><tr><th><strong>Scenario</strong></th><th><strong>No. of trade</strong></th><th><strong>Return</strong></th><th><strong>Annual Return</strong></th><th><strong>Annual Standard Deviation</strong></th><th><strong>Max DD</strong></th><th><strong>Beta</strong></th><th><strong>Alpha</strong></th><th><strong>Sharpe Ratio</strong></th></tr></thead><tbody><tr><td>LO-BD</td><td>172</td><td>67.45%</td><td>35.393%</td><td>0.304</td><td>38.4%</td><td>-0.161</td><td>0.381</td><td>1.136</td></tr><tr><td>MN-BD</td><td>428</td><td>18.98%</td><td>10.754%</td><td>0.134</td><td>13.900%</td><td>0.036</td><td>0.09</td><td>0.731</td></tr><tr><td>LO-ZC</td><td>102</td><td>35.98%</td><td>19.8%</td><td>0.303</td><td>45.00%</td><td>-0.204</td><td>0.262</td><td>0.714</td></tr><tr><td>MN-ZC</td><td>216</td><td>8.27%</td><td>4.779%</td><td>0.093</td><td>8.3%</td><td>0.014</td><td>0.041</td><td>0.47</td></tr><tr><td>LO-HV</td><td>75</td><td>39.17%</td><td>21.446</td><td>0.27</td><td>41.00%</td><td>-0.143</td><td>0.25</td><td>0.806</td></tr><tr><td>MN-HV</td><td>186</td><td>10.66%</td><td>6.136%</td><td>0.079</td><td>6.200%</td><td>0.037</td><td>0.046</td><td>0.677</td></tr><tr><td>LO-PC</td><td>752</td><td>67.72%</td><td>35.522%</td><td>0.406</td><td>52.200%</td><td>-0.174</td><td>0.435</td><td>0.975</td></tr><tr><td>MN-PC</td><td>1438</td><td>3.9%</td><td>2.272%</td><td>0.197</td><td>33.900%</td><td>-0.015</td><td>0.042</td><td>0.196</td></tr></tbody></table></div><p><strong><em>Do tell me if you feel like this post helped you to some extent or not</em></strong></p>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/09/30/2021-10-05-pair-trading-market-neutral/cover.png&quot; class=&quot;&quot; width=&quot;800&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;Previous reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@mikelhsia/pair-trading-introduction-to-pair-trading-strategy-c97a1d0897ff&quot;&gt;【Pair Trading】Introduction to pair trading strategy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@mikelhsia/after-knowing-what-the-pair-trading-strategy-is-about-from-the-previous-post-were-going-to-use-98e41ef3ea5&quot;&gt;【Pair Trading】In-depth analysis of 5 distance approach strategies in pair trading&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the previous post &lt;a href=&quot;https://medium.com/@mikelhsia/after-knowing-what-the-pair-trading-strategy-is-about-from-the-previous-post-were-going-to-use-98e41ef3ea5&quot;&gt;【Pair Trading】In-depth analysis of 5 distance approach strategies in pair trading&lt;/a&gt;, we have conducted various research against each variation of distance approaches in pair trading strategy. Despite the research has given us probable insights whether there is an &lt;strong&gt;$\alpha$&lt;/strong&gt; exists in the strategy we constructed, we still haven’t established our portfolio construction strategy. Here we introduce a concept called the “long-short equity (LSE)” strategy.&lt;/p&gt;
&lt;p&gt;Therefore, the objectives of this post are consists of three:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What is the long-short equity (LSE) strategy&lt;/li&gt;
&lt;li&gt;Review our backtest results to see the impact of adopting the long-short strategy&lt;/li&gt;
&lt;li&gt;What are the advanced strategies that we can explore&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Quantitative Trading" scheme="http://mikelhsia.github.io/categories/Quantitative-Trading/"/>
    
    
    <category term="Strategy" scheme="http://mikelhsia.github.io/tags/Strategy/"/>
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
    <category term="Pair Trading" scheme="http://mikelhsia.github.io/tags/Pair-Trading/"/>
    
  </entry>
  
  <entry>
    <title>【Pair Trading】Part 2. 5 in-depth analysis of distance approach in pair trading</title>
    <link href="http://mikelhsia.github.io/2021/08/30/2021-08-30-pair-trading-distance-approach/"/>
    <id>http://mikelhsia.github.io/2021/08/30/2021-08-30-pair-trading-distance-approach/</id>
    <published>2021-08-30T07:50:39.000Z</published>
    <updated>2021-10-12T12:21:24.471Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/cover.jpg" class="" width="600"><p style="font-size: 0.8em; text-align:center; color: grey;">    <i></i></p><div class="table-container"><table><thead><tr><th style="text-align:left"><strong>Previous readings</strong></th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://mikelhsia.github.io/2021/08/02/2021-08-12-pair-trading/">【Pair Trading】Introduction to pair trading strategy</a></td></tr></tbody></table></div><p>After knowing what the pair trading strategy is about from the <a href="https://mikelhsia.github.io/2021/08/02/2021-08-12-pair-trading/">previous post</a>, we’re going to use the <a href="https://www.quantconnect.com/">QuantConnect platform</a> to research and validate each variation of the <strong><em>distance method</em></strong>. The agenda of this post would be:</p><ol><li><strong>Introduction</strong>: what is the distance approach and what are its variants</li><li><strong>Research methodology</strong>: the methodology we use to conduct this research</li><li><strong>Research and performance analysis</strong>: Implement each variation and compare</li></ol><p>Let’s get it started!</p><a id="more"></a><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/get_started.jpg" class="" width="150"><hr><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>The distance approach in pair trading was first popularized by Gatev, Goetzmann, and Rouwenhorst in their <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=141615">academic paper</a> in 2006. This was because of its effectiveness of selecting the paired stocks that track each other well back then. Along with the simplicity in calculating the distance which saves computation resources, this academic paper became the most cited paper of pair trading strategy and derived many different strategies to further discover the relationship between stocks in the stock pair.</p><h2 id="Basic-distance-approach"><a href="#Basic-distance-approach" class="headerlink" title="Basic distance approach"></a>Basic distance approach</h2><p>The basic idea of the distance approach is to use data in the formation period to calculate the <strong>Euclidean squared distances</strong> between each pair of normalized prices during the pair selection process. This <strong>Euclidean squared distance</strong> can be interpreted as the similarity of how do the stock normalized prices move in a defined period. The smaller the <strong>Euclidean squared distance</strong> of a stock pair is, the more similar movements these two assets have. Therefore, we’re going to pick the stock pair that has the smallest <strong>Euclidean squared distance</strong> as its spread should be stable enough to expect the spread will revert when rising to the peak or hitting the rock bottom.</p><script type="math/tex; mode=display">SSD (Sum\ of\ Squared\ Distance) = \sum \limits _{t=1} ^{N} ({P^1}_t - {P^2}_t)^2</script><p style="font-size: 0.8em; text-align:center; color: grey;">    <i><font >The formula of Euclidean squared distance</i></p><h2 id="Variants-of-distance-approach"><a href="#Variants-of-distance-approach" class="headerlink" title="Variants of distance approach"></a>Variants of distance approach</h2><p>Other than using <strong>Euclidean squared distance</strong> to evaluate how two assets are correlated, there are other methods evolving from the basic strategy such as Pearson’s correlation, distance correlation, angular distance, and so on. Also, there are other additional ideas added to the distance approach to discover what is the best-fit stock pair to be traded. The following methods were introduced in the below papers: <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=141615">Gatev et al. (2006): Pairs Trading: Performance of a Relative Value Arbitrage Rule</a>, <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=1707125">Do and Faff(2011): Are Pairs Trading Profits Robust to Trading Costs?</a>, <a href="https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.547.8922&amp;rep=rep1&amp;type=pdf">Do and Faff (2012): Does Simple Pairs Trading Still Work?</a>. These approaches are:</p><ol><li>Selecting pairs that are in the same industry group</li><li>Selecting pairs with a higher number of zero-crossings</li><li>Selecting pairs with a higher historical variance</li><li>Selecting pairs with a higher Pearson’s correlation</li></ol><h1 id="Research-methodology"><a href="#Research-methodology" class="headerlink" title="Research methodology"></a>Research methodology</h1><p>To find out which one is the most effective method among distance approach and its variants, we have to set up a few rules to make sure that all backtests we are going to perform are tested under the same controlled environment:</p><ol><li>Use the constituents of the S&amp;P 500 index as our universe, meaning we will consider only the stocks that are in the S&amp;P 500 index.</li><li>Take <strong>12+12</strong> months’ daily close price of each stock in our defined universe. Data from the first 12-month period was used to form/train our pair trading model, and then the following 12 months’ data were used to backtest the model against the real-world scenario.</li><li>Normalize price data before we train our pair trading model. Let’s say we have stock A price ranging from \$100 ~ \$180, stock B price sits around \$20.00, and stock C price is over \$1000. The distances between pair A-B and pair B-C won’t be comparable because they don’t share the same starting point. Therefore normalizing price data removes the differences between two stock prices in order to make all pairs comparable.</li><li>As there are <strong>121,771</strong> pairs been generated, we reserve the top 10% and drop the remaining 90% of the under-performed pair in order not to waste time to analyze the pairs that are not significantly correlated.</li><li>Rank the stocks by the possibility of getting a positive return the next day (from high to low). The way to decide the possibility is different in every variant.</li><li>We calculate and analyze the expected return from two different angles in order to evaluate which strategy is better:<br> 6.1. <strong>Stratified analysis</strong>: Separate the stock pairs into 8 groups in order to see whether a higher possibility would actually result in a higher positive return.<br> 6.2. <strong>Long strategy analysis</strong>: Take the first 20 stocks to calculate the expected return so that we won’t take in too many noises into our performance analysis.</li><li>Generate trading signals:<br> 7.1. If the spread value exceeds 1.5 times of the historical deviations of the spread ($1.5\sigma$), generate a sell signal.<br> 7.2. If the spread value drops below 1.5 times of the historical deviations of the spread ($1.5\sigma$), generate a buy signal<br> 7.3. Close the open position when spread crosses over above or below the zero-line of the historical deviation.</li></ol><blockquote><p>Tips:</p><ol><li><code>itertools.combinations()</code> is a good util tool to create combinations contain two different symbols, for example <code>(&#39;AAPL&#39;,&#39;AMZN&#39;)</code></li><li>Normalization formula: $P_{Normalized} = \frac{P - min(P)}{max(P) - min(P)}$.</li><li>$min(P)$ and $max(P)$ are extracted from the formation period, and apply to the price data in backtest period</li></ol></blockquote><h1 id="Research-and-performance-analysis"><a href="#Research-and-performance-analysis" class="headerlink" title="Research and performance analysis"></a>Research and performance analysis</h1><p>Here we’re going to quickly talk about them and then we’ll conduct research and backtest against the basic distance approach and its variants.</p><h2 id="Basic-distance-approach-1"><a href="#Basic-distance-approach-1" class="headerlink" title="Basic distance approach"></a>Basic distance approach</h2><h3 id="Approach-description"><a href="#Approach-description" class="headerlink" title="Approach description"></a>Approach description</h3><p>We calculate the SSD of each pair and take the top 10% pairs which have the smallest SSD to conduct the performance analysis.</p><h3 id="Stratified-analysis"><a href="#Stratified-analysis" class="headerlink" title="Stratified analysis"></a>Stratified analysis</h3><p>Among 8 groups, group 1 contains the pairs that have the smallest SSD, and group 8 contains the pairs that have the biggest SSD. However, group 1 doesn’t seem to generate a positive expected return and group 8 doesn’t induce the relative huge loss as expected. The magnitude of SSD doesn’t seem to positively correlate to the expected return as we expect.</p><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/basic_stratified.png" class="" width="600"><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Basic distance approach stratified analysis</i></p><h3 id="Long-strategy-performance-analysis"><a href="#Long-strategy-performance-analysis" class="headerlink" title="Long strategy performance analysis"></a>Long strategy performance analysis</h3><p>If we long 20 the most stable stock pair by picking the pairs that have the smallest SSD, the portfolio still doesn’t generate a positive portfolio return over 12 months.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/basic_top.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Basic distance approach long strategy analysis (Top 20 stocks)</i></p><h2 id="Selecting-pairs-that-are-in-the-same-industry-group"><a href="#Selecting-pairs-that-are-in-the-same-industry-group" class="headerlink" title="Selecting pairs that are in the same industry group"></a>Selecting pairs that are in the same industry group</h2><p>This method holds an assumption that the paired stocks that are in the same industry are more likely to move together. So the idea here is to categorize each company by <a href="https://www.equitieslab.com/wiki/admin/morningstar-sector">Morning Star sector code</a> and pair the stocks within the same sector/industry group. Once we have these pairs from the same industry prepared, then we do exactly the same as the basic distance approach in order to analyze the portfolio performance.</p><h3 id="Stratified-analysis-1"><a href="#Stratified-analysis-1" class="headerlink" title="Stratified analysis"></a>Stratified analysis</h3><p>It’s still a mess. Our group 1 that suppose to make the most profit actually incurred the most loss. The lines that represented the accumulated return of each group tangled tightly instead of staying apart from each other.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/same_industry_stratified.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Same industry distance approach stratified analysis</i></p><h3 id="Stratified-analysis-by-sector"><a href="#Stratified-analysis-by-sector" class="headerlink" title="Stratified analysis by sector"></a>Stratified analysis by sector</h3><p>One more analysis we can do is to see which sector performs the worst. The sectors that perform the worst are <code>101</code> and <code>206</code>, which are the <code>Material</code> and the <code>Health care</code> sectors. Therefore by conducting the stratified analysis by sector, we could potentially initiate another strategy by removing the sectors that perform worse in the first place.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/same_industry_return_by_sector.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Expected return by sector</i></p><h3 id="Long-strategy-performance-analysis-1"><a href="#Long-strategy-performance-analysis-1" class="headerlink" title="Long strategy performance analysis"></a>Long strategy performance analysis</h3><p>It’s quite interesting to tell the line is very similar to the expected return above, meaning the top 20 pairs we picked could highly resemble the top 20 pairs in the basic distance approach. In terms of return, nothing gets improved. But one thing to be noticed is that by creating pairs within the same industry, we reduce the total pair from <strong>121,771</strong> pairs to <strong>13,207</strong> pairs and greatly reduce the time needed for the calculation.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/same_industry_top.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Same industry distance approach long strategy analysis (Top 20 stocks)</i></p><h2 id="Selecting-pairs-with-a-higher-number-of-zero-crossings"><a href="#Selecting-pairs-with-a-higher-number-of-zero-crossings" class="headerlink" title="Selecting pairs with a higher number of zero-crossings"></a>Selecting pairs with a higher number of zero-crossings</h2><p>It’s a good sign that the spread of the paired stocks is stable enough. However, if the spread of a certain pair is way too stable, there will be no chance for the traders to step in and make a profit. Therefore in this variant, among the top 10% pairs that have the smallest <strong>Euclidean squared distance</strong>, we further pick the pairs that had the highest number of crossing the zero-spread line. A high number of zero-crossing gives this pair enough energy to swing up and down, but without losing the ability to maintain its stability and come back to the zero-spread line.</p><p>Here’s a tip to share with you, that it’s fairly simple to calculate the number of zero-crossing if you have your spread in proper time-series format.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Both price_a and price_b are nd.array or pd.Series objects</span></span><br><span class="line">spread = pd.Series((price_a - price_b).reshape(<span class="number">-1</span>))</span><br><span class="line">num_of_zero_crossing = ((spread * spread.shift())&lt;<span class="number">0</span>).sum()</span><br></pre></td></tr></table></figure></p><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/zero-crossing.png" class="" width="500"><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Why the number of zero-crossing matters</i></p><h3 id="Stratified-analysis-2"><a href="#Stratified-analysis-2" class="headerlink" title="Stratified analysis"></a>Stratified analysis</h3><p>Now we do see the differences by adding the zero-crossing criteria. The first two groups that have the highest number of zero-crossing did stand out in the accumulated performance. However, the expected return of low zero-crossing pairs doesn’t tell us that we can count on this to form a market-neutral strategy. Maybe a long-only strategy would be better off.</p><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/zerocrossing_stratified.png" class="" width="600"><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Zero-crossing distance approach stratified analysis</i></p><h3 id="Long-strategy-performance-analysis-2"><a href="#Long-strategy-performance-analysis-2" class="headerlink" title="Long strategy performance analysis"></a>Long strategy performance analysis</h3><p>It does! THe long-only strategy definitely helps gradually accumulate our portfolio return. This diagram kind of proving our assumption that the high value of zero-crossing would single out the pairs that are more resilient and are capable of reverting back to the normal spread level.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/zerocrossing_top.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Zero-crossing distance approach long strategy analysis (Top 20 stocks)</i></p><h2 id="Selecting-pairs-with-higher-historical-variance"><a href="#Selecting-pairs-with-higher-historical-variance" class="headerlink" title="Selecting pairs with higher historical variance"></a>Selecting pairs with higher historical variance</h2><p>This variant actually used the same idea as above <code>Selecting pairs with a higher number of zero-crossings</code>. Instead of using the number of zero-crossings, this method takes the high variance as the sign of the spread between the paired stocks being fluctuated enough to be traded.</p><h3 id="Stratified-analysis-3"><a href="#Stratified-analysis-3" class="headerlink" title="Stratified analysis"></a>Stratified analysis</h3><p>Um…. Don’t even bother talking about this diagram. This result obviously tells us that this variant is not a fit for market neutral strategy.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/high_variance_stratified.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>High variance distance approach stratified analysis</i></p><h3 id="Long-strategy-performance-analysis-3"><a href="#Long-strategy-performance-analysis-3" class="headerlink" title="Long strategy performance analysis"></a>Long strategy performance analysis</h3><p>Even though the accumulated return looks weaker than the return from the high zero-crossing long strategy, we still can expect this long-only strategy to perform well.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/high_variance_top.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>High variance distance approach long strategy analysis (Top 20 stocks)</i></p><h2 id="Selecting-pairs-with-higher-Pearson’s-correlation"><a href="#Selecting-pairs-with-higher-Pearson’s-correlation" class="headerlink" title="Selecting pairs with higher Pearson’s correlation"></a>Selecting pairs with higher <a href="https://en.wikipedia.org/wiki/Pearson_correlation_coefficient">Pearson’s correlation</a></h2><p>This method is relatively more complex than the above methods. This variant is mentioned in the paper <a href="http://www.pbcsf.tsinghua.edu.cn/research/chenzhuo/paper/Empirical%20Investigation%20of%20an%20Equity%20Pairs%20Trading%20Strategy.pdf">Chen et al. (2012): Empirical Investigation of an Equity Pairs Trading Strategy</a>, and the paper <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3608896">Christopher Krauss (2015): Statistical arbitrage pairs trading strategies: Review and outlook</a>.</p><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/one_track_many.jpeg" class="" width="400"><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>One tracks a group of assets instead of tracking just one</i></p><p>The idea of this method is that we’re going to use the composition of 50 stocks as the benchmark to calculate the spread against the target asset. In this way, we’ll be able to diversify the specific risk by comparing it to a basket of stocks. To do this, we will need to use Pearson’s correlation to pick out the 50 most related assets to construct the benchmark portfolio of the target asset. Then instead of using historical deviation ($1.5 \sigma$) as the threshold to trigger our trading signals, we use <strong><a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html">linear regression</a></strong> to construct the relation between two stocks and then use calculated $\alpha$ and $\beta$ to calculate the deviation. The higher the number of the deviation, the more likely deviation will revert.</p><script type="math/tex; mode=display">Deviation = R_{jt} - \alpha\ +\ \beta \times R_{it}</script><p>$where$</p><p>$R_{jt}$ is the return of the pairs portfolio</p><p>$R_{it}$ is the stock return</p><h3 id="Stratified-analysis-4"><a href="#Stratified-analysis-4" class="headerlink" title="Stratified analysis"></a>Stratified analysis</h3><p>This time we do something easier. We pick the top 20 stocks that deviate the most from its benchmark portfolio and long them and pick the bottom 20 pairs that deviate least and short them.</p><p>This would be the perfect variant to formulate both the market-neutral strategy and the long-only strategy. The return of the stocks we long go straight up and the return of the stocks we short go down. In the meantime, both lines are negatively correlated. When the green line drop below the bottom and break through the zero lines, the red line (the return of the stocks we short) revert and recover the loss from the green line. By longing the top 20 and shorting the bottom 20, we perfectly form the market-neutral strategy that still makes a positive return over 12 months including the bear market.<br><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/pearson_correlation.png" class="" width="600"></p><p style="font-size: 0.8em; text-align:center; color: grey;">    <i>Pearson's correlation distance approach market neutral strategy</i></p><p><br></p><p><br><div style="border: 2pt solid lightgrey;border-radius: 4pt;box-shadow: 7px 7px lightgrey;padding: 1.3em;width:50%;margin:auto;"><i><b style="font-size:1.3em;padding: 1.3em;color:grey;">"Home Run!"</b></i><img data-src="/2021/08/30/2021-08-30-pair-trading-distance-approach/homerun.jpg" class="" width="300"></div><br></p><h1 id="Final-words-and-next-step"><a href="#Final-words-and-next-step" class="headerlink" title="Final words and next step"></a>Final words and next step</h1><p>Through the above researches, you can tell that the pair trading strategy is consist of four parts:</p><ol><li>Pair selection</li><li>Model formation (to form $\sigma$ or benchmark return in Pearson’s correlation variant)</li><li>Monitoring the current stats</li><li>Generate trading signals against the trained model</li></ol><p>The most important part I believe would be the pair selection part as I believe it’s crucial to find the pair/stock that does bounce back when the spread/price hit the ceiling and the floor. So essentially it’s still considered a mean reversion strategy.</p><p>Even though we have found our perfect strategy among these five variants, there are many things that we haven’t looked at such as:</p><ol><li>Should we use the rolling window to constantly update our model?</li><li>Should we trade more than 20 stocks at a time?</li><li>Should we find some other formulas to replace the Pearson’s correlation in order to find the more correlated paired stocks?</li><li>Should we expand the <strong>whole</strong> universe instead of only looking at the stocks in S&amp;P 500?</li></ol><p>These can be the potential improvements that can be experimented with. Also, make sure you run the proper backtest using the backtesting platform as <a href="https://www.quantconnect.com/">QuantConnect</a> or <a href="https://www.joinquant.com/">JointQaunt</a> to make sure you validate your algorithm against the real-world scenario.</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://opencodecom.net/post/2021-04-30-pairs-trading-replicating-gatev-goetzmann-and-rouwenhorst-2006/">Pairs Trading: Replicating Gatev, Goetzmann and Rouwenhorst (2006)</a></li><li><a href="https://hudsonthames.org/research/">Hudson &amp; Thames Official website</a></li><li><a href="https://www.youtube.com/channel/UC8hI87gt0dmTAIEupEcsckA">Hudson &amp; Thames Youtube channel</a></li><li><a href="http://www.pbcsf.tsinghua.edu.cn/research/chenzhuo/paper/Empirical%20Investigation%20of%20an%20Equity%20Pairs%20Trading%20Strategy.pdf">Empirical Investigation of an Equity Pairs Trading Strategy</a></li><li><a href="https://www.quantconnect.com/tutorials/strategy-library/pairs-trading-with-stocks">QuantConnect Tutorials - Pair trading with stocks</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/08/30/2021-08-30-pair-trading-distance-approach/cover.jpg&quot; class=&quot;&quot; width=&quot;600&quot;&gt;
&lt;p style=&quot;font-size: 0.8em; text-align:center; color: grey;&quot;&gt;
    &lt;i&gt;&lt;/i&gt;
&lt;/p&gt;

&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;&lt;strong&gt;Previous readings&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&lt;a href=&quot;https://mikelhsia.github.io/2021/08/02/2021-08-12-pair-trading/&quot;&gt;【Pair Trading】Introduction to pair trading strategy&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;After knowing what the pair trading strategy is about from the &lt;a href=&quot;https://mikelhsia.github.io/2021/08/02/2021-08-12-pair-trading/&quot;&gt;previous post&lt;/a&gt;, we’re going to use the &lt;a href=&quot;https://www.quantconnect.com/&quot;&gt;QuantConnect platform&lt;/a&gt; to research and validate each variation of the &lt;strong&gt;&lt;em&gt;distance method&lt;/em&gt;&lt;/strong&gt;. The agenda of this post would be:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Introduction&lt;/strong&gt;: what is the distance approach and what are its variants&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Research methodology&lt;/strong&gt;: the methodology we use to conduct this research&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Research and performance analysis&lt;/strong&gt;: Implement each variation and compare&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let’s get it started!&lt;/p&gt;</summary>
    
    
    
    <category term="Quantitative Trading" scheme="http://mikelhsia.github.io/categories/Quantitative-Trading/"/>
    
    
    <category term="Strategy" scheme="http://mikelhsia.github.io/tags/Strategy/"/>
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
    <category term="Pair Trading" scheme="http://mikelhsia.github.io/tags/Pair-Trading/"/>
    
  </entry>
  
  <entry>
    <title>【Pair Trading】Part 1. Introduction to pair trading strategy</title>
    <link href="http://mikelhsia.github.io/2021/08/02/2021-08-12-pair-trading/"/>
    <id>http://mikelhsia.github.io/2021/08/02/2021-08-12-pair-trading/</id>
    <published>2021-08-02T07:02:21.000Z</published>
    <updated>2021-10-12T12:21:24.470Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/08/02/2021-08-12-pair-trading/cover.jpg" class="" width="600"><p style="text-align:center; color: grey;">    <i>Pair trading is just like a man leashing a dog. They never apart too far away.</i></p><p>New Column started! In this new column, we’re going to start by introducing the idea and principle behind this famous strategy. In the later posts, we’ll do research using different famous methods in pair trading. Hopefully, we’ll cover the fundamental knowledge of pair trading as much as possible.</p><p>Pairs trading is among the most popular trading strategies in many markets. This particular strategy involves simultaneous taking two correlated assets in different directions, using one asset in the pair to hedge the risk of the other one. Essentially, it is a market-neutral strategy.</p><a id="more"></a><h1 id="What-is-the-pair-strategy"><a href="#What-is-the-pair-strategy" class="headerlink" title="What is the pair strategy?"></a>What is the pair strategy?</h1><p>Imagine this, if there are two convenience stores (A &amp; B) opened in one area. They import their ingredients from the same farm and sell the same meat product at the same price <code>$10</code>. Both stores are making a good profit. As the product price of both stores tracks closely to each other, it’s expected that there won’t be a big difference in prices.</p><img data-src="/2021/08/02/2021-08-12-pair-trading/stores.png" class="" width="600"><p style="text-align:center; color: grey;">  <i>Store A and store B</i></p><p>One day, the farm raises the price of the ingredient, causing the owner of store A to decide to raise the price to <code>$12</code> to spread the cost to his customers. Unfortunately, the owner of store B was out of town so the price in store B stays at <code>$10</code>. According to our past experience, we expect the price difference to converge after the owner of store B comes back to town. As a clever consumer, what you should do to get benefits from this opportunity?</p><p>Should we buy more products from store B and store them in our warehouse at a cheaper price? Nah…. What if the farm again drops the price so that the product price would incline to drop as well. Our stock in the warehouse would be considered overpriced. The risk of taking either asset in one direction would be considered tremendous.</p><p>…</p><p>I believe as clever as you have already come up with the plan. We can buy the lower-priced product from store B, and sell it to the customers who want to buy the higher-priced product from store A. By doing that, there will be a <code>$2</code> profit <strong>per trade</strong>. We treat the price in store A and the price in store B as a pair. Whenever a price difference expands to certain degree, we could leverage the same strategy to buy the cheap one and sell the other expensive one. This can be exploited over and over again as long as the relationship between the price in store A and the price in store B doesn’t go away.</p><p>And, that is the pair trading strategy.</p><h1 id="History-of-pair-strategy"><a href="#History-of-pair-strategy" class="headerlink" title="History of pair strategy"></a>History of pair strategy</h1><p>Pair trading is a methodology and practice that derive from statistical arbitrage trading. It first appeared in the theory developed by Australian investor and hedge fund manager Alfred Winslow Jones in the 1950s. However, due to the nature of the pair trading strategy, these strategies were not made possible until the 1980s when computers gradually become popular.</p><p>In 1987, Morgan Stanley disclosed the fact that they have made over 50 million dollars on pair trading strategy. The money at that time was like 10 times more valuable than the same amount today. Therefore you could imagine the amount of money they have made with a single strategy. Even the details of this strategy were revealed over time, the pair strategy is still the most popular market-neutral strategy these days.</p><p>I learn from <a href="https://blog.pairtradefinder.com/best-trading-strategy-ever/">here</a> that pair strategy has been identified as the trading strategy used by <a href="https://en.wikipedia.org/wiki/Jim_Simons_(mathematician"><strong><em>Jim Simons</em></strong></a>), the most successful and smart hedge fund manager. He has publicly stated that the strategy his hedge fund adopting is contrarian: <code>often buying stocks (that) recently out of favor, and selling those recently in favor</code>.</p><p><div><iframe width='300' src="https://www.youtube.com/embed/lnSGgfv7Fv0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div></p><p style="text-align:center; color: grey;">  <i>The Founder and President of Renaissance Technologies had to say publicly in Congressional testimony</i></p><p><br><div style="border: 2pt solid lightgrey;border-radius: 4pt;box-shadow: 7px 7px lightgrey;padding: 1.3em;width:80%;margin:auto;"><i><b style="font-size:1.3em;padding: 1.3em;color:grey;">"We often buying stocks (that) recently out of favor, and selling those recently in favor"</b></i></div><br></p><h1 id="The-principle-of-pair-trading"><a href="#The-principle-of-pair-trading" class="headerlink" title="The principle of pair trading"></a>The principle of pair trading</h1><p>Even though with all these talks and examples to explain what pair trading is, the principle of the pair trading is actually surprisingly simple. First we need to find out the right pair that the price movements of two assets follow a pattern. Let’s take the stock pair <code>KEY-RF</code> for example.</p><img data-src="/2021/08/02/2021-08-12-pair-trading/step1.png" class="" width="500"><p style="text-align:center; color: grey;">  <i>The correlation between KEY and RF is fairly high</i></p><p>The price movements of <strong>KeyCorp(<a href="https://finance.yahoo.com/quote/KEY/">KEY</a>)</strong> and <strong>Regions Financial Corporation(<a href="https://finance.yahoo.com/quote/RF/">RF</a>)</strong> are very similar. But how similar they are? One way to do it is to check the price difference between their prices, which is called the <code>spread</code>. Therefore in the second step, we create a diagram of the spread to monitor the historic spread movement. To better understand the movement of spread, we marked the mean of the spread with the black dotted line, marked the threshold <code>mean + 1.5 * STD</code> and <code>mean - 1.5 * STD</code> to denote the area above and under the threshold are anomalies. As long as the spread breaks through the upper threshold, then we consider this a long signal. Once the movement drops to the mean of the spread, we consider the movement has restored to the normal level, so close the related positions.</p><img data-src="/2021/08/02/2021-08-12-pair-trading/step2.png" class="" width="500"><p style="text-align:center; color: grey;">  <i>The price spread between `KEY` and `RF`, and the green triangle denotes the long signal.</i></p><p>The last rule we need to follow is, we long the cheaper asset and short the more expensive asset in the pair. Again taking the <code>KEY-RF</code> pair for example, if we follow the trigger generated in the above diagram, we gain $\$19 - \$9 = \$10.0$ from the <code>KEY</code> we short, and we lost $\$15.8 - \$8 = \$7.8$ from the <code>RF</code> we long. Combining the P&amp;L of these paired assets, we actually earned $\$10.0 - \$7.8 = \$2.2$ in this trade. In short, the profit earned from the pair trading strategy is not from the movement of the stock’s intrinsic value, but from the anticipation of the shrinkage of the price spread.</p><img data-src="/2021/08/02/2021-08-12-pair-trading/step3.png" class="" width="500"><p style="text-align:center; color: grey;">  <i>KEY has recovered more return than what RF lost</i></p><p>To summarize everything in very simple words, there are only three steps to implement and execute the pair trading strategy:</p><ol><li>Find the target paired assets and how they are correlated</li><li>Monitor the movement to see when to generate the trading signals</li><li>Long the cheaper and short the more expensive when we see the trading signals.</li></ol><h1 id="How-to-find-the-pair-that-works"><a href="#How-to-find-the-pair-that-works" class="headerlink" title="How to find the pair that works?"></a>How to find the pair that works?</h1><p>So it all comes down to the question of how to find the right pair to trade. If two assets in your selected pair are not correlated or if they are correlated but the spread will not converge, then they are not the right pair to trade. Here are three methods you can use to try finding the right pair.</p><h2 id="According-to-business-models"><a href="#According-to-business-models" class="headerlink" title="According to business models"></a>According to business models</h2><p>We can choose two assets that are similar in their business model because they are suffering the same environmental risk, business risk, infrastructure risk, …, as well as external opportunities. As a result, their price movement has the inclination to move in the same direction with the same magnitude. A potentially good pair could be <code>UBER</code> v.s. <code>LYFT</code>, or <code>CCL</code> v.s. <code>RCL</code>.</p><img data-src="/2021/08/02/2021-08-12-pair-trading/cclvsrcl.png" class="" width="500"><p style="text-align:center; color: grey;">  <i>CCL vs RCL in normalized price movement</i></p><h2 id="According-to-the-professional-knowledge"><a href="#According-to-the-professional-knowledge" class="headerlink" title="According to the professional knowledge"></a>According to the professional knowledge</h2><p>As the business models are the public information that is accessed by you and tens of thousands of people/institutions, the profit generated from this type of trading pair can fade away very quickly as so many parties are exploiting the same opportunity. To gain an edge competing with others, you need to study and work harder to keep yourself from competing with others in the red ocean.</p><p>If you understand the business models in a bigger picture, you can put all the small pieces of information together to solve the puzzles. For example, you get to learn that company B is the sole supplier of company A. So if company A makes a good profit in the fiscal year, then you can expect company B will make a good profits as well. If not, there might be a chance for arbitrages. Or, if you find out that an ETF was tracking with a stock index like S&amp;P 500, you can trade when the spread between the ETF and the index expends and close this trade when the spread converges. You can spot more and more opportunities like this when you understand the assets or the market more,</p><h2 id="According-to-the-pair-correlation-and-cointegration"><a href="#According-to-the-pair-correlation-and-cointegration" class="headerlink" title="According to the pair correlation and cointegration"></a>According to the pair correlation and cointegration</h2><p>This method is more of a mathematical way to find the right pair of assets. This post is already long enough, so you can check out this <a href="https://www.quora.com/What-is-the-difference-between-correlation-and-cointegration-Is-cointegration-a-good-measure-of-risk">Quora thread</a> before we get to this topic in the following post.</p><h1 id="Pair-trading-methods"><a href="#Pair-trading-methods" class="headerlink" title="Pair trading methods"></a>Pair trading methods</h1><p>Christopher Krauss has summarized various pair trading methods in his dissertation on <a href="https://www.econstor.eu/bitstream/10419/116783/1/833997289.pdf">Statistical arbitrage pairs trading strategies</a>. The methods are:</p><img data-src="/2021/08/02/2021-08-12-pair-trading/methods.png" class="" width="600"><p style="text-align:center; color: grey;">  <i>Extracted from <a href='https://www.youtube.com/watch?v=gd009r7QUuM&list=PLfv9eTYgatm3oz8uq8G17-50ed_s-n5ds&index=2&t=238s'>Pairs Trading: The Distance Approach</a> by <a href='https://www.youtube.com/channel/UC8hI87gt0dmTAIEupEcsckA'>Hudson & Thames</a></i></p><p>We will cover these methods one by one in the following series.</p><h1 id="Pair-trading-resources"><a href="#Pair-trading-resources" class="headerlink" title="Pair trading resources"></a>Pair trading resources</h1><ul><li><a href="https://hudsonthames.org/">Hudson &amp; Thames</a><ul><li>It’s a research institution that puts a lot of effort into working on pair trading strategies. It also has a dedicated python library for people who are interested in working with pair trading strategies. Check out <a href="https://hudsonthames.org/research/">their blog here</a> for more articles related to what they are doing.</li></ul></li><li><a href="https://blog.pairtradefinder.com/">Pair Trading Finder</a> is a blog that publishes its research regularly. Other than telling you their latest research results, they even share the best pair of stocks of the month to be traded.</li></ul><p>In the next post, we’ll start looking at how to build our first pair trading strategy using the distance approach.</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://www.newtraderu.com/2017/06/05/nature-pair-stock-trading-history/">The Nature of Pair Stock Trading History</a></li><li><a href="https://en.wikipedia.org/wiki/Pairs_trade">Pairs trade from Wikipedia</a></li><li><a href="https://www.investopedia.com/terms/p/pairstrade.asp">Pairs trade from investopedia</a></li><li><a href="https://blog.pairtradefinder.com/best-trading-strategy-ever/">The Best Trading Strategy Ever? The Results Speak for Themselves…</a></li><li><a href="https://algotrading101.com/learn/pairs-trading-guide/">Pairs Trading – A Real-World Guide</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/08/02/2021-08-12-pair-trading/cover.jpg&quot; class=&quot;&quot; width=&quot;600&quot;&gt;
&lt;p style=&quot;text-align:center; color: grey;&quot;&gt;
    &lt;i&gt;Pair trading is just like a man leashing a dog. They never apart too far away.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;New Column started! In this new column, we’re going to start by introducing the idea and principle behind this famous strategy. In the later posts, we’ll do research using different famous methods in pair trading. Hopefully, we’ll cover the fundamental knowledge of pair trading as much as possible.&lt;/p&gt;
&lt;p&gt;Pairs trading is among the most popular trading strategies in many markets. This particular strategy involves simultaneous taking two correlated assets in different directions, using one asset in the pair to hedge the risk of the other one. Essentially, it is a market-neutral strategy.&lt;/p&gt;</summary>
    
    
    
    <category term="Quantitative Trading" scheme="http://mikelhsia.github.io/categories/Quantitative-Trading/"/>
    
    
    <category term="Strategy" scheme="http://mikelhsia.github.io/tags/Strategy/"/>
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
    <category term="Pair Trading" scheme="http://mikelhsia.github.io/tags/Pair-Trading/"/>
    
  </entry>
  
  <entry>
    <title>Optimize your MACD strategies with advanced indicators</title>
    <link href="http://mikelhsia.github.io/2021/07/19/2021-07-20-advanced-macd-strategy/"/>
    <id>http://mikelhsia.github.io/2021/07/19/2021-07-20-advanced-macd-strategy/</id>
    <published>2021-07-18T18:35:44.000Z</published>
    <updated>2021-10-08T09:42:19.032Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/cover.png" class="" width="600"><style>.foo table th:nth-of-type(1){width: 5%;}.foo table th:nth-of-type(2){width: 10%;}.foo table th:nth-of-type(3){width: 10%;}.foo table th:nth-of-type(4){width: 45%;}.foo table th:nth-of-type(5){width: 30%;}</style><p><br><br>In the post <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/">How to save your silver bullets with MACD strategy?</a>, we have backtested the strategy of MACD and the other six different momentum indicators. In the end, the combination of MACD and the awesome oscillator is the better and seemingly profitable one among all six combinations. But, we won’t stop right there. In order to raise our portfolio win rate and return, we will discuss a few variants of MACD and Awesome Oscillator to derive different buy and sell signals.</p><a id="more"></a><hr><h1 id="Objective"><a href="#Objective" class="headerlink" title="Objective"></a>Objective</h1><p>How to calculate the MACD and awesome oscillator and the others have been introduced in <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/">How to save your silver bullets with MACD strategy?</a>, so we’re skipping all the entry-level knowledge. Instead, we’re going to touch on how to utilize the generated indicators to put together the strategies that are profitable.</p><p>I have found three different ways to generate MACD trading signals and four to generate awesome oscillator trading signals. Therefore, we will conduct $3 * 4 = 12$ backtest to see which combination would bring us more profits.</p><hr><h1 id="About-the-trading-strategy"><a href="#About-the-trading-strategy" class="headerlink" title="About the trading strategy"></a>About the trading strategy</h1><h2 id="Platform"><a href="#Platform" class="headerlink" title="Platform"></a>Platform</h2><p>As said in the previous post, Quantopian has already retired from the market. So I need to migrate the original trading script from Quantopian to <a href="https://www.quantconnect.com/">QuantConnect</a>. To know more details about QuantConnect, you can check out the post <a href="https://mikelhsia.github.io/2021/07/18/2021-07-05-pros-cons-of-quantconnect/">Step up your game in Quant trading - Backtest platforms QuantConnect v.s. Quantopian review</a></p><h2 id="Universe"><a href="#Universe" class="headerlink" title="Universe"></a>Universe</h2><p>Universe stands for a group of specific securities that are traded in the market. We are not going to put all the tradable securities in our basket because:</p><ul><li>Save memory and time while running our trading script.</li><li>Not all securities in the market work well with the momentum strategy.</li><li>Remove market noise by selecting the best fitting securities and put them into our universe.</li></ul><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/decidophobia.png" class="" width="600"><p style="text-align:center; color: grey;">    <i>Universe could help you focus on the securities that best-fit your strategy</i></p><p>So picking our universe would be an essential step to avoid decidophobia in selecting the numerous securities in the market.</p><p>Here my assumption is that the securities in the <code>technology</code> sector would be influenced by the momentum factor the most. So we’re picking the technology stocks and sort them by <code>pbRatio</code>, <code>EPS</code>, <code>ROE</code>.</p><h2 id="Prepping-MACD-and-Awesome-Oscillator-indicators"><a href="#Prepping-MACD-and-Awesome-Oscillator-indicators" class="headerlink" title="Prepping MACD and Awesome Oscillator indicators"></a>Prepping MACD and Awesome Oscillator indicators</h2><p>We are using the traditional MACD and awesome oscillator setup and no additional twist.</p><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/indicators.png" class="" width="500"><p style="text-align:center; color: grey;">    <i>MACD and Awesome Oscillator indicators setup</i></p><h2 id="MACD-and-Awesome-Oscillator-signals"><a href="#MACD-and-Awesome-Oscillator-signals" class="headerlink" title="MACD and Awesome Oscillator signals"></a>MACD and Awesome Oscillator signals</h2><p>To follow the mindset of our previous strategy setup, we need both MACD and awesome oscillator trading signals to be true in order to trigger buy or sell actions. Here we extend our strategy and use three different ways to generate trading signals using MACD indicators:</p><blockquote><p>I. Simple MACD: We set our MACD trading signal to <code>True</code> when MACD is greater than 0, and to <code>False</code> when MACD is lower than 0.</p></blockquote><p>By the definition of <code>Talib</code> python package, MACD indicates $EMA_{short\ term} - EMA_{long\ term}$. So the <code>True</code> trading signal essentially telling you that the target stock price rising speed is faster than before.</p><blockquote><p>II. Signal MACD: We set our MACD trading signal to <code>True</code> when our MACD signal is over MACD, and set to <code>False</code> when MACD signal is below MACD.</p></blockquote><p>MACD signal passing above MACD shows the start of the up-trending momentum.</p><blockquote><p>III. Historic MACD: Set MACD trading signal to <code>True</code> when Hist[n] &gt; 0 and Hist[n-1] &lt; 0 and Hist[n-2] &lt; 0, while n is the current date.</p></blockquote><p>This strategy is meant to capture the scenarios when the momentum is about to revert. So we are going to buy when the MACD histogram bar turns from red to green, and to sell when the bar turns from green to red in order to capture the movement between peak and bottom. See the below illustration for the exact trading timing.</p><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/macd_hist.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>MACD histogram stands for the beginning of a upward/downward trend</i></p><p>In the meantime, there are four different ways to generate trading signals using awesome indicators:</p><blockquote><p>I. Simple AO: We set our AO trading signal to <code>True</code> when the value of AO is greater than 0.</p></blockquote><p>By the definition of the AO indicator, we will execute the buy and sell action only when</p><script type="math/tex; mode=display">SMA(\frac{(High - Low)}{2},\ 5\ periods) > SMA(\frac{(High - Low)}{2},\ 34\ periods)</script><p>, which shows a strong up/down trending momentum in the recent five days.</p><blockquote><p>II. Historic AO: We set our AO trading signal to <code>True</code> when AO[n-2], AO[n-1] &lt; 0, AO[n] &gt; 0 where n is the current date.</p></blockquote><p>The disadvantage of the previous method is that we couldn’t judge whether the signal was triggered at the beginning or at the end of the up-trend. To be able to do that, we can add a queue to store the AO values of the previous day. So we can advance our strategy to <code>Turn green light when we have a green bar after we received two consecutive red bars</code>.</p><blockquote><p>III. AO Saucer</p></blockquote><p>This is a traditional AO strategy. We set our buy signal to <code>True</code> when the AO is above the zero-line and the AO histogram having two consecutive red bars where the second red bar is smaller than the first red one and the third bar of the histogram is green. On the contrary, we’ll launch a sell signal when the opposite signals were triggered.</p><blockquote><p>IV. Lame Oscillator</p></blockquote><p>This is an alternative AO strategy that I found in <a href="https://medium.com/swlh/creating-a-profitable-version-of-the-macd-oscillator-trading-differently-ae3da2fe9728">this post</a>. The Lame Oscillator is the mirror view image of the Awesome Oscillator, where</p><script type="math/tex; mode=display">Lame Oscillator = - Awesome Oscillator = - (EMA_{short\ term} - EMA_{long\ term})</script><p>And with <code>go long (buy) whenever the bars change to green</code>, you actually turning a momentum indicator (<em>awesome oscillator</em>) into a mean-reversion indicator (<em>lame oscillator</em>).</p><h2 id="Backtest-setup"><a href="#Backtest-setup" class="headerlink" title="Backtest setup"></a>Backtest setup</h2><h3 id="Duration"><a href="#Duration" class="headerlink" title="Duration"></a>Duration</h3><p>We started our backtest from 2020/01/03 to 2021/06/30.</p><p>During this backtest period, there are events that caused the market to be very volatile, such as:</p><ol><li>COVID-19 caused the market to plummet at the beginning of 2020</li><li>US oil prices turned negative for the first time in history on April 20th, 2020.</li><li>Tesla stock price rocket high since added into S&amp;P 500 on Dec 21st, 2020.</li><li>Nasdaq and S&amp;P 500 to record high on June 22nd, 2021.</li></ol><p>This process of gradually recovering from the great landslide is an excellent case to validate whether our portfolio outgrows the other securities.</p><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/spy.png" class="" width="600"><p style="text-align:center; color: grey;">    <i>SPY benchmark return from 2020/01/03 to 2021/06/30</i></p><h3 id="Capacity"><a href="#Capacity" class="headerlink" title="Capacity"></a>Capacity</h3><p>The maximum number of positions in our portfolio is <code>20</code>. This is a number that I feel comfortable with and enough to diversify the risk. Also keeping the capacity at 20 won’t generate too much transaction cost to reduce our profit earned.</p><h3 id="Benchmark-equity"><a href="#Benchmark-equity" class="headerlink" title="Benchmark equity"></a>Benchmark equity</h3><p><code>SPDR S&amp;P 500 (SPY)</code></p><hr><h1 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h1><p>As instructed in <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/">How to save your silver bullets with MACD strategy?</a>, we combined our MACD indicator with secondary indicator, awesome indicator, and place buy/sell order only when both signals are <code>True</code>. By having three types of MACD trading signals and four types of awesome oscillator trading signals, we’re going to conduct backtest against each combination in order to find valuable insights:</p><table><thead><tr style='background: lightgrey;'><th>No.</th><th>MACD</th><th>AO</th><th>PSR</th><th>Unrealized</th><th>Fee</th><th>Net profit</th><th>Return</th><th>Total Trades</th><th>Sharpe</th><th>Average Win</th><th>Average Loss</th><th>Compounding annual return</th><th>Profit-loss ratio</th><th>Win rate</th><th>Alpha</th><th>Beta</th><th>Annual STD</th><th>Information ratio</th><th>Treynor ratio</th></tr></thead><tbody><tr><td style='background: green; color: white;'>1</td><td style='background: green; color: white;'>simple</td><td style='background: green; color: white;'>simple</td><td>63.632%</td><td>12580.06</td><td>-901.77</td><td>66572.85</td><td>78.28%</td><td>386</td><td>1.53</td><td>0.57%</td><td>-0.42%</td><td>47.336%</td><td>1.34</td><td>71%</td><td>0.479</td><td>-0.194</td><td>0.284</td><td>0.505</td><td>-2.246</td></tr><tr><td style='background: green; color: white;'>2</td><td style='background: green; color: white;'>simple</td><td style='background: green; color: white;'>history</td><td>34.555$</td><td>5468.21</td><td>-602.82</td><td>81386.32</td><td>86.30%</td><td>235</td><td>1.024</td><td>1.09%</td><td>-0.62%</td><td>51.747%</td><td>1.76</td><td>71%</td><td>0.75</td><td>-0.141</td><td>0.702</td><td>0.65</td><td>-5.101</td></tr><tr><td style='background: green; color: white;'>3</td><td style='background: green; color: white;'>simple</td><td style='background: green; color: white;'>saucer</td><td>85.070%</td><td style='background: red; color: white;'>77031.19</td><td>-67.35</td><td>10746.71</td><td>87.77%</td><td style='background: red; color: white;'>30</td><td>2.152</td><td>2.66%</td><td>-0.28%</td><td>52.547%</td><td>9.68</td><td>80%</td><td>0.457</td><td>-0.037</td><td>0.208</td><td>0.659</td><td>-12.102</td></tr><tr><td style='background: green; color: white;'>4</td><td style='background: green; color: white;'>simple</td><td style='background: green; color: white;'>lame</td><td>77.616%</td><td style='background: red; color: white;'>89100.19</td><td>-626.11</td><td>34429.91</td><td>122.96%</td><td>310</td><td>2.038</td><td>1.10%</td><td>-0.55%</td><td>71.163%</td><td>1.98</td><td style='background: red; color: white;'>46%</td><td>0.667</td><td>-0.133</td><td>0.313</td><td>0.966</td><td>-4.8</td></tr><tr><td style='background: green; color: white;'>5</td><td style='background: green; color: white;'>signal</td><td style='background: green; color: white;'>simple</td><td>62.294%</td><td>2891.42</td><td>-1552.71</td><td>81655.38</td><td>77.26%</td><td>784</td><td>1.504</td><td>0.39%</td><td>-0.55%</td><td>46.771%</td><td>0.72</td><td>75%</td><td>0.474</td><td>-0.192</td><td>0.287</td><td>0.494</td><td>-2.247</td></tr><tr><td style='background: green; color: white;'>6</td><td style='background: green; color: white;'>signal</td><td style='background: green; color: white;'>history</td><td>64.655%</td><td>18826.02</td><td>-865.60</td><td>80217.01</td><td>98.23%</td><td>370</td><td>1.613</td><td>0.78%</td><td>-0.81%</td><td>58.193%</td><td>0.96</td><td>74%</td><td>0.595</td><td>-0.21</td><td>0.34</td><td>0.705</td><td>-2.606</td></tr><tr><td style='background: green; color: white;'>7</td><td style='background: green; color: white;'>signal</td><td style='background: green; color: white;'>saucer</td><td>58.717%</td><td>9274.61</td><td>-498.98</td><td>60188.65</td><td>69.03%</td><td>210</td><td>1.386</td><td>0.93%</td><td>-1.01%</td><td>42.165%</td><td>0.92</td><td>78%</td><td>0.427</td><td>-0.152</td><td>0.283</td><td>0.41</td><td>-2.588</td></tr><tr><td style='background: green; color: white;'>8</td><td style='background: green; color: white;'>signal</td><td style='background: green; color: white;'>lame</td><td>45.533%</td><td>3227.54</td><td>-1648.22</td><td>45332.09</td><td style='background: red; color: white;'>46.94%</td><td>842</td><td>1.038</td><td>0.46%</td><td>-0.42%</td><td>29.427%</td><td>1.08</td><td style='background: red; color: white;'>58%</td><td>0.326</td><td>-0.178</td><td>0.275</td><td>0.15</td><td>-1.602</td></tr><tr><td style='background: green; color: white;'>9</td><td style='background: green; color: white;'>history</td><td style='background: green; color: white;'>simple</td><td>61.309%</td><td>2243.49</td><td>-1079.29</td><td>69660.57</td><td>70.87%</td><td>393</td><td>1.449</td><td>0.64%</td><td>-0.46%</td><td>43.203%</td><td>1.39</td><td>67%</td><td>0.436</td><td>-0.173</td><td>0.274</td><td>0.425</td><td>-2.3</td></tr><tr><td style='background: green; color: white;'>10</td><td style='background: green; color: white;'>history</td><td style='background: green; color: white;'>history</td><td>61.450%</td><td>2289.94</td><td>-1098.91</td><td>70060.83</td><td>71.30%</td><td>336</td><td>1.453</td><td>0.64%</td><td>-0.45%</td><td>43.442%</td><td>1.41</td><td>67%</td><td>0.438</td><td>-0.173</td><td>0.275</td><td>0.429</td><td>-2.307</td></tr><tr><td style='background: green; color: white;'>11</td><td style='background: green; color: white;'>history</td><td style='background: green; color: white;'>saucer</td><td>90.552%</td><td style='background: red; color: white;'>83437.15</td><td>-85.20</td><td>39405.77</td><td>122.79%</td><td style='background: red; color: white;'>34</td><td>2.53</td><td>4.46%</td><td>-1.29%</td><td>71.079%</td><td>3.46</td><td>89%</td><td>0.616</td><td>-0.057</td><td>0.238</td><td>1.044</td><td>-10.545</td></tr><tr><td style='background: green; color: white;'>12</td><td style='background: green; color: white;'>history</td><td style='background: green; color: white;'>lame</td><td>47.657%</td><td>20467.80</td><td>-164.71</td><td>31814.14</td><td>52.15%</td><td>88</td><td>1.098</td><td>1.97%</td><td>-0.77%</td><td>32.488%</td><td>2.57</td><td style='background: red; color: white;'>59%</td><td>0.345</td><td>-0.135</td><td>0.287</td><td>0.221</td><td>-2.332</td></tr></tbody></table><p>I believe it is a good practice to set up some baselines before starting to look at the line chart of our portfolio return over time. These basic guidelines stand for the limitations and capabilities of the strategy to our own knowledge. In our backtest results, we marked anomaly numbers from the summarized table above in <strong><i style="color: red;">RED</i></strong> color.</p><ol><li>First of all, we drop the backtests that have little <code>trades (number of transactions)</code>. Our strategy aims to capture the momentum between the buy signals and sell signals, so 30 trades generated in one and a half years doesn’t mean our strategy is ineffective. We simply wouldn’t be able to judge whether our strategy is consistently profitable over years with this little in samples.</li><li>The same logic applies to <code>Unrealized (return)</code>. We consider trades to be successful when we buy security, hold for a period, and then sell to close the position. Without closing the positions, we won’t be able to test the profit-taking ability of our strategy. Therefore we wouldn’t prefer these scenarios.</li><li>Other factors like the <code>winning rate</code> and the <code>total portfolio return</code> are also things for us to decide whether it’s a good strategy or not. Here we ruled out the strategies that have a low winning rate or total return.</li></ol><p>Once we have our baselines in place, let’s summarize our comments in the below table.</p><div class='foo'><div class="table-container"><table><thead><tr><th>No.</th><th>MACD</th><th>AO</th><th>Diagram</th><th>Comment</th></tr></thead><tbody><tr><td>1</td><td>simple</td><td>simple</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/simple-simple.png" class="" width="400"></td><td>This is a great example of our desired strategy. <br>Even though our total return plummets during the COVID-19 event, our portfolio managed to grow steadily and to grow in the spread between total return and the benchmark return. Compounding annual rate 47.336% is good enough to be a quant strategy to trade on daily basis.</td></tr><tr><td>2</td><td>simple</td><td>history</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/simple-history.png" class="" width="400"></td><td>Even though we have an attractive portfolio return, you’ll notice that our portfolio return has no difference from the benchmark return the 90% of the time. Our only profit gain started in a spike in Feb 2021. As our aim is to find a strategy that can create consistent profit, I wouldn’t say this strategy is appropriate and meet our goal.</td></tr><tr><td>3</td><td>simple</td><td>saucer</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/simple-saucer.png" class="" width="400"></td><td>At first glance, this seems to be the perfect strategy as we don’t see a drastic drop during COVID-19, and the portfolio return outgrows steadily compared to benchmark return. However, this test scenario is against the guidelines that the number of trades is too little for us to confirm this signal as valid.</td></tr><tr><td>4</td><td>simple</td><td>lame</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/simple-lame.png" class="" width="400"></td><td>Apparently the <code>Lame</code> indicator would be able to help us locate the good-quality stock, but couldn’t close the position under our exit strategy. This would be a good strategy if we can improve the exit strategy of this scenario.</td></tr><tr><td>5</td><td>signal</td><td>simple</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/signal-simple.png" class="" width="400"></td><td>This strategy is not impressive as it took too long to recover from the pandemic collapse.</td></tr><tr><td>6</td><td>signal</td><td>history</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/signal-history.png" class="" width="400"></td><td>Same as above</td></tr><tr><td>7</td><td>signal</td><td>saucer</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/signal-saucer.png" class="" width="400"></td><td>Same as above</td></tr><tr><td>8</td><td>signal</td><td>lame</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/signal-lame.png" class="" width="400"></td><td>Same as above</td></tr><tr><td>9</td><td>history</td><td>simple</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/history-simple.png" class="" width="400"></td><td>Same as the strategies in 5, 6, 7, 8, that this strategy took too long to surpass the benchmark return.</td></tr><tr><td>10</td><td>history</td><td>history</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/history-history.png" class="" width="400"></td><td>Same as the strategies in 5, 6, 7, 8, that this strategy took too long to surpass the benchmark return.</td></tr><tr><td>11</td><td>history</td><td>saucer</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/history-saucer.png" class="" width="400"></td><td>Same as scenario 3, the positions were built up too slowly as there were too few trading signals triggered. Could be a profitable strategy, but we need more signals and valid trades to justify whether this is a valid strategy.</td></tr><tr><td>12</td><td>history</td><td>lame</td><td><img data-src="/2021/07/19/2021-07-20-advanced-macd-strategy/history-lame.png" class="" width="400"></td><td>Same as the strategies in 5, 6, 7, 8, that this strategy took too long to surpass the benchmark return.</td></tr></tbody></table></div></div><hr><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Unfortunately, the new methods to generate trading signals didn’t really help to improve the quality of our MACD trading strategy. The <code>Signal MACD</code> and the <code>Historic MACD</code> based scenarios didn’t produce a better performance at all. So once again we can confirm that our original MACD strategy with <code>Simple MACD</code> and <code>Simple AO</code> is a good enough strategy for now. But in the meantime, we have discovered two more possible optional strategies with <code>AO Saucer</code> indicators in backtesting 3 and 11. As long as we can generate more samples, we can justify our backtest results to see whether these newly generated samples are still giving the edge to make a consistent profit.</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://medium.com/swlh/creating-a-profitable-version-of-the-macd-oscillator-trading-differently-ae3da2fe9728">Creating a profitable MACD strategy</a></li><li><a href="https://medium.com/codex/bitcoin-trade-automation-with-awesome-oscillator-in-python-51f2c52c5b25">Bitcoin trade automation with awesome oscillator</a></li><li><a href="https://medium.com/pi-capital-union/awesome-oscillator-f1f58d99a155">Advanced strategy in awesome oscillator</a></li><li><a href="https://medium.com/@voltzuk/using-the-awesome-oscillator-to-find-bitcoin-buy-and-sell-signals-46dedcd9eb22">Using the awesome oscillator to find bitcoin buy and sell signals</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/07/19/2021-07-20-advanced-macd-strategy/cover.png&quot; class=&quot;&quot; width=&quot;600&quot;&gt;
&lt;style&gt;
.foo table th:nth-of-type(1){
width: 5%;
}
.foo table th:nth-of-type(2){
width: 10%
;
}
.foo table th:nth-of-type(3){
width: 10%;
}
.foo table th:nth-of-type(4){
width: 45%;
}
.foo table th:nth-of-type(5){
width: 30%;
}
&lt;/style&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;In the post &lt;a href=&quot;https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/&quot;&gt;How to save your silver bullets with MACD strategy?&lt;/a&gt;, we have backtested the strategy of MACD and the other six different momentum indicators. In the end, the combination of MACD and the awesome oscillator is the better and seemingly profitable one among all six combinations. But, we won’t stop right there. In order to raise our portfolio win rate and return, we will discuss a few variants of MACD and Awesome Oscillator to derive different buy and sell signals.&lt;/p&gt;</summary>
    
    
    
    <category term="Quantitative Trading" scheme="http://mikelhsia.github.io/categories/Quantitative-Trading/"/>
    
    
    <category term="Momentum" scheme="http://mikelhsia.github.io/tags/Momentum/"/>
    
    <category term="Strategy" scheme="http://mikelhsia.github.io/tags/Strategy/"/>
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>Step up your game in Quant trading - Backtest platforms QuantConnect v.s. Quantopian  review</title>
    <link href="http://mikelhsia.github.io/2021/07/18/2021-07-05-pros-cons-of-quantconnect/"/>
    <id>http://mikelhsia.github.io/2021/07/18/2021-07-05-pros-cons-of-quantconnect/</id>
    <published>2021-07-18T08:49:16.000Z</published>
    <updated>2021-09-15T06:26:10.946Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/07/18/2021-07-05-pros-cons-of-quantconnect/cover.png" class="" width="400"><p>Backtesting is the most important stage of testing and verifying the result of your trading strategy. You can either build your own backtesting script or use a python package such as <code>backtrader</code> to simulate your portfolio return with downloaded stock prices CSV files. Either way would require you to download the stock price in minute or day bar beforehand. Also, you need to deal with the stock market events such as stock splitting, ticker name changing, or delisting. So effectively using an existing online tool like <a href="https://www.quantconnect.com/">QuantConnect</a> could save you a lot of time dealing with edge cases yourself.</p><p>I’ve been spending my time learning how to work with QuantConnect platform and its features in the past month. So in this post, I’m going to introduce the web-based backtest platform by finding out the common things between Quantopian and QuantConnect. Then I’ll talk about the good and bad I found in trying out these two platforms. Hopefully, the experience that I shared in this post can better help people who are looking for a solution of validating their trading ideas.</p><a id="more"></a><hr><h1 id="Quantopian-and-QuantConnect-in-common"><a href="#Quantopian-and-QuantConnect-in-common" class="headerlink" title="Quantopian and QuantConnect in common"></a>Quantopian and QuantConnect in common</h1><p>Since <strong>Quantopian</strong> has announced its retirement on Nov 14th, 2020, I’ve been struggling to find a substitution for backtesting the strategy. <a href="https://www.quantconnect.com/">QuantConnect</a> is a seemingly promising one that I can find so far. Both Quantopian and <a href="https://www.quantconnect.com/">QuantConnect</a> are <strong>web-based backtest platforms</strong> that allow you to use code to construct your trading strategy with the tools provided. In their <strong>built-in IDE</strong>, you can decide your target universe and work on the indicators that trigger the buy-in or sell-off instructions. After you put together your trading strategy, it simply costs you one click to <strong>backtest</strong> your strategy with historic data. The visualized portfolio performance and key stats are the things for you to evaluate whether you have constructed a high-alpha strategy or not.</p><p>So basically, Quantopian and <a href="https://www.quantconnect.com/">QuantConnect</a> are quite similar in terms of their functionalities to fulfill a quant’s basic needs.</p><h1 id="Quantopian-and-QuantConnect-in-different"><a href="#Quantopian-and-QuantConnect-in-different" class="headerlink" title="Quantopian and QuantConnect in different"></a>Quantopian and QuantConnect in different</h1><p>While constructing a trading strategy, I’ve encountered a few concepts and features that are a bit hard for me to grasp in the first place. Here I bring them up so that you can pay more attention to when you start working with <a href="https://www.quantconnect.com/">QuantConnect</a> platform.</p><ul><li>Built-in IDE</li><li>Fewer helper functions in QuantConnect</li><li>Community and forum</li><li>Platform stability</li><li>Differences in data structure and concepts between two platforms</li></ul><h2 id="Built-in-IDE"><a href="#Built-in-IDE" class="headerlink" title="Built-in IDE"></a>Built-in IDE</h2><p>From the experience of being a former product/project manager in the software industry, I’ve learned that the UI/UX of your product will set the tone and draw a particular group of your product audience. So we can try to identify the target audience of Quantopian and <a href="https://www.quantconnect.com/">QuantConnect</a> by looking at their most important page: <strong>built-in IDE</strong>.</p><div class="table-container"><table><thead><tr><th>Quantopian</th><th>QuantConnect</th></tr></thead><tbody><tr><td><img data-src="/2021/07/18/2021-07-05-pros-cons-of-quantconnect/quantopian.png" class="" width="300"><br><p style="text-align:center; color: grey;"> <i>Quantopian research IDE</i> </p></td><td><img data-src="/2021/07/18/2021-07-05-pros-cons-of-quantconnect/quantconnect.png" class="" width="300"><br><p style="text-align:center; color: grey;"> <i>QuantConnect research IDE</i> </p></td></tr></tbody></table></div><p>Quantopian’s IDE is designed to be elevating the users’ speed to develop profitable strategies. There are two types of backtesting you can execute: quick performance backtesting and deep analysis backtesting. If you are constructing your alpha strategy from the scratch, you can code in the left area and run a quick performance backtest to see the result on the right. This result contains only the portfolio return graph and other crucial KPIs which take less time to generate. When you feel confident with your trading strategy, you can run a deep analysis backtest to see details such as the exact order you have submitted and what is your sector-specific exposure. Personally, I like this design as I can quickly try and error to build the strategy with the performance backtest and spent less time to see how it worked out and fine-tune the strategy while running a deep analysis backtest to print out a log message every time will be wasting time and resources.</p><p>On the other hand, <a href="https://www.quantconnect.com/">QuantConnect</a> seems taking a different route to approach their end-users. <a href="https://www.quantconnect.com/">QuantConnect</a> provides only one type of backtesting with analysis and separates their IDE from their backtest result into two different tabs. Therefore, even with the tiniest change in your code, you are obligated to rebuild your code and run a full-fledged backtest that might not necessary. However, unlike Quantopian who treats every trading strategy as a script, <a href="https://www.quantconnect.com/">QuantConnect</a> does treat each trading strategy as an individual project. The IDE inspects and monitors how many times you have run backtest against this specific strategy, how many parameters you have used in it, and how much time you have been spending on this script. These are all deemed as indicators to be referenced while you’re doubting the level of <a href="https://www.quantconnect.com/docs/key-concepts/research-guide#Research-Guide-Algorithm-Parameters">over-fitting</a> of your trading strategy.</p><h2 id="Fewer-helper-functions-in-QuantConnect"><a href="#Fewer-helper-functions-in-QuantConnect" class="headerlink" title="Fewer helper functions in QuantConnect"></a>Fewer helper functions in QuantConnect</h2><p>Helper functions are like small gadgets that make you complete your work much easier. Quantopian provides a lot of helper functions, such as <code>get_open_orders()</code>, <code>set_slippage()</code>, and <code>get_calendar()</code>, that help you focus more on constructing your trading strategy and less on spending time on the underlying data structure.</p><p>On the other hand, <a href="https://www.quantconnect.com/">QuantConnect</a> encapsulates the data needed in important objects such as <code>portfolio</code> and <code>securities</code>. Instead of providing helper functions, <a href="https://www.quantconnect.com/">QuantConnect</a> decides to expose these properties to calculate what they want when they need to.</p><p>Personally speaking, I prefer the Quantopian way as having more helper functions could help users pay more attention to the most essential things, building the trading strategy.</p><h2 id="Community-and-forum"><a href="#Community-and-forum" class="headerlink" title="Community and forum"></a>Community and forum</h2><p>Quantopian no doubt used to have the most active open community in the quantitative trading industry. All the members actively exchange their ideas and thoughts, and the staffs are also very involved in each crucial topic to provide assistants when needed. But, the <a href="https://www.quantconnect.com/forum">QuantConnect community</a> somehow looks to me missing the engagement between quant traders and thriving atmosphere.</p><h2 id="Platform-stability"><a href="#Platform-stability" class="headerlink" title="Platform stability"></a>Platform stability</h2><p>I still remember the first time when I tried to work with QuantConnect, I’ve been trying to run my first backtest several times yet no successful result. My backtest has been hung in one of the steps for hours and then got logged out for unknown reasons. Then, I was having issues logging back in to the platform. I was so frustrated so I moved on to another substitution.</p><p>Thankfully, everything went pretty smoothly this time. Also, if you want to know the stability of QuantConnect server, there’s another tool that you can utilize: <a href="http://status.quantconnect.com/">QuantConnect Status Monitor</a>.</p><p>During my time using Quantopian, everything went well.</p><h2 id="Differences-in-data-structure-and-concepts-between-two-platforms"><a href="#Differences-in-data-structure-and-concepts-between-two-platforms" class="headerlink" title="Differences in data structure and concepts between two platforms"></a>Differences in data structure and concepts between two platforms</h2><p>There are still a lot of differences between these two platforms. I’m not going to bother you with these details. Instead, I put these at the <a href="#anchor">end of this post</a> so that you can refer to them whenever you need them.</p><hr><h1 id="Advanced-features-that-QuantConnect-provides"><a href="#Advanced-features-that-QuantConnect-provides" class="headerlink" title="Advanced features that QuantConnect provides"></a>Advanced features that QuantConnect provides</h1><p>Below is a list of features that <a href="https://www.quantconnect.com/">QuantConnect</a> does well and is beneficial to the users:</p><ul><li>The built-in debugger in IDE</li><li>Live trading support</li><li>Algorithm Framework</li><li>Alpha streams</li></ul><h2 id="The-built-in-debugger-in-IDE"><a href="#The-built-in-debugger-in-IDE" class="headerlink" title="The built-in debugger in IDE"></a>The built-in debugger in IDE</h2><p>Debugging accounts for a crucial part while building your trading strategy. We usually use an IDE-built-in debugger or python package <code>pdb</code> to help us debug local scripts. Yet, it’s really interesting to see a built-in debugger in this web-based IDE. If you have a variable that you want to monitor in each iteration, this debugger would definitely come in handy.</p><h2 id="Live-trading-support"><a href="#Live-trading-support" class="headerlink" title="Live trading support"></a>Live trading support</h2><p>Live trading would be the last piece of the puzzle to activate your trading strategy. Once you complete the backtest and decide to throw this trading strategy into the live market, live trading support would make sure you can seamlessly connect your trading strategy to the brokers.</p><p>Quantopian collaborates with <a href="https://www.ibkr.hk/cn/index.php?f=36942">Interactive Brokers</a> so that you can connect your strategy to your own IB accounts to start trading live.</p><p><a href="https://www.quantconnect.com/">QuantConnect</a> supports even more live trading brokers such as IB, Oanda, Coinbase, Bloomberg, …etc. This feature is quite attractive as you’re able to run multiple strategies under the same QuantConnect account as long as you have accounts under each broker.<br><img data-src="/2021/07/18/2021-07-05-pros-cons-of-quantconnect/live.png" class="" width="600"></p><p style="text-align:center; color: grey;">    <i>Brokers supported on QuantConnect</i></p><h2 id="Algorithm-Framework"><a href="#Algorithm-Framework" class="headerlink" title="Algorithm Framework"></a>Algorithm Framework</h2><p>Unlike Quantopian who treats every trading strategy as an individual script, <a href="https://www.quantconnect.com/">QuantConnect</a> separates a trading strategy into five unique models: universe selection, Alpha, portfolio construction, risk, and execution. Each of them is responsible for a unique task:</p><ul><li><strong>Universe selection model</strong> is responsible for filtering the target securities and add to your target universe.</li><li><strong>Alpha model</strong> processes the data and emits the trading insights according to the trading directions.</li><li><strong>Portfolio construction model</strong> takes the insights from Alpha model and decides how much money you would like to allocate to each security.</li><li><strong>Risk model</strong> monitors the performance of your portfolio and drops certain securities when a downside trend appears.</li><li><strong>Execution model</strong> control how each order gets executed.</li></ul><img data-src="/2021/07/18/2021-07-05-pros-cons-of-quantconnect/datain.png" class="" width="500"><p style="text-align:center; color: grey;">    <i>Data flow in QuantConnect</i></p><p>By splitting the responsibilities into each model, you can focus on build one model that can be reused in another strategy in the future.</p><h2 id="Alpha-Streams"><a href="#Alpha-Streams" class="headerlink" title="Alpha Streams"></a>Alpha Streams</h2><p>Quantopian held competitions to have quants to share and compete for their strategies. Once your strategy is outstanding and lucrative enough, Quantopian would allocate a part of their asset to construct a fund with the strategy you designed. The profit would be shared together between you and Quantopian. This is also the business model of Quantopian who acts as a supervisor and hand-pick the best strategy within the organization.</p><p>On the other hand, QuantConnect acts as a broker between quants and organizational investors. The quant can construct his/her own strategy and run backtest through certain years. Once the organizational investors have scouted your strategy and believe that your strategy is fitting their needs and profitable enough, they can pay you the money to subscribe to your strategy in order to receive the trading signals that your strategy produced. QuantConnect will charge 30% of your subscription fee as the cost of hosting your code and everything.</p><p>Essentially, these are the differences between their business models. We won’t be able to judge which model is better than the other, but knowing the fact that you might have a chance to make money by writing strategy is a plus for QuantConnect users.</p><hr><h1 id="Last-but-not-least"><a href="#Last-but-not-least" class="headerlink" title="Last but not least"></a>Last but not least</h1><p>This post is not a short summary of either Quantopian or QuantConnect is better, but is more of personal learning tracks and feelings of what QuantConnect can do better in the future. For those who are interested in utilizing their personal skills to make money and in learning investors’ mentalities and behaviors by reading the market, QuantConnect could be a tool that is worth your time to learn and a community to join.</p><hr><p><a name="anchor"></a></p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Q-amp-A-and-tips"><a href="#Q-amp-A-and-tips" class="headerlink" title="Q&amp;A and tips"></a>Q&amp;A and tips</h2><blockquote><ol><li>Definition of <code>self.portfolio</code> is different</li></ol></blockquote><p><strong>Quantopian</strong>: It’s a list of objects of your invested positions<br><strong>QuantConnect</strong>: It’s a dictionary of your monitored universe</p><p><strong><em>Comment</em></strong>:<br>The term <code>portfolio</code> has different meanings in these two platforms. In Quantopian, the portfolio means a group of securities you currently hold. In QuantConnect, the term indicates the stock universe that is on your watchlist, no matter you have bought this stock or not. <br><br> The way that QuantConnect defines <code>portfolio</code> could lead to confusion and extra work when inspecting the status of your portfolio.</p><blockquote><ol><li>How to subscribe data you needed</li></ol></blockquote><p><strong>Quantopian</strong>: You subscribe to the data you need by telling <code>def make_pipeline()</code> the data specification, such as what stocks you would like to include, what fundamental data you need, and what indicator you would like to see. In the end, you’ll get a huge piece of dataframe as the output from the daily pipeline data processing.<br><strong>QuantConnect</strong>: You first need to register the security you would like to add to your watchlist with <code>self.AddEquity(symbol)</code>. You’ll receive all the data of the securities on your watchlist every trading day. What about the indicators? You need to calculate and update yourself.</p><p><strong><em>Comment</em></strong>:<br>The way that Quantopian deals with the data subscription is quite straightforward. You simply need to use your code to describe how you want the data to be like, and then you’ll get a big sheet for you to play with. Yet, data from QuantConnect requires more works from you in order to stitch the data into the form you would like them to be.</p><blockquote><ol><li>QuantConnect introduced the concept of <code>Symbol</code>, Quantopian identify securities by <code>ticker</code></li></ol></blockquote><p><strong>Quantopian</strong>: You need to specify security using string. However, it’s not quite clear to me how Quantopian deals with the events of changing ticker or delist.<br><strong>QuantConnect</strong>: QuantConnect uses<code>self.AddEquity(symbol)</code> to transform a string-like ticker into an object that QuantConnect understands. Therefore, it doesn’t matter whether the ticker of security has been changed or delisted.</p><p><strong><em>Comment</em></strong>:<br>It is a very good concept that waives the users’ concerns of dealing with these events. However, by looking at the API documentation of QuantConnect, the APIs were not consistent regarding using either a symbol object or a ticker string. Therefore this increases further difficulties for users to learn how to use their APIs.</p>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/07/18/2021-07-05-pros-cons-of-quantconnect/cover.png&quot; class=&quot;&quot; width=&quot;400&quot;&gt;
&lt;p&gt;Backtesting is the most important stage of testing and verifying the result of your trading strategy. You can either build your own backtesting script or use a python package such as &lt;code&gt;backtrader&lt;/code&gt; to simulate your portfolio return with downloaded stock prices CSV files. Either way would require you to download the stock price in minute or day bar beforehand. Also, you need to deal with the stock market events such as stock splitting, ticker name changing, or delisting. So effectively using an existing online tool like &lt;a href=&quot;https://www.quantconnect.com/&quot;&gt;QuantConnect&lt;/a&gt; could save you a lot of time dealing with edge cases yourself.&lt;/p&gt;
&lt;p&gt;I’ve been spending my time learning how to work with QuantConnect platform and its features in the past month. So in this post, I’m going to introduce the web-based backtest platform by finding out the common things between Quantopian and QuantConnect. Then I’ll talk about the good and bad I found in trying out these two platforms. Hopefully, the experience that I shared in this post can better help people who are looking for a solution of validating their trading ideas.&lt;/p&gt;</summary>
    
    
    
    <category term="Readings" scheme="http://mikelhsia.github.io/categories/Readings/"/>
    
    
    <category term="Backtesting" scheme="http://mikelhsia.github.io/tags/Backtesting/"/>
    
  </entry>
  
  <entry>
    <title>【Machine Learning】 Part III - 5 myths about practicing quant trading with machine learning</title>
    <link href="http://mikelhsia.github.io/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/"/>
    <id>http://mikelhsia.github.io/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/</id>
    <published>2021-06-14T06:44:49.000Z</published>
    <updated>2021-06-18T09:54:10.648Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/cover.jpg" class="" width="600"><p>In the post <a href="https://mikelhsia.github.io/2021/05/10/2021-05-14-machine-learning-prototype/">【Machine Learning】 Part II - How to build a machine learning boilerplate?</a>, we have successfully built our machine learning boilerplate. By having this template, we can develop an advanced machine learning trading strategy upon. However, even with the strategy result that looks profoundly profitable, we still won’t be able to know how much money we can make by looking at the accuracy rate of our machine learning trading algorithm.</p><p>In order to better understand whether the results from the output of our model are really concerning our portfolio return, I put together a rather simple strategy and run several backtests with different parameters. In the end, we’re going to answer several frequently asked questions in order to decrypt the myths of machine learning trading algorithms.</p><a id="more"></a><p>Here I introduced the <a href="https://www.joinquant.com/">JoinQuant platform</a> into our toolset in order to backtest our strategy. After several times of tuning and research to further advance our preliminary machine learning boilerplate, I’ve executed 108 backtest on the JoinQuant platform to see how well the strategy could perform if we launch this machine learning strategy to the stock market. By summarizing the results from these 108 backtest, there are a few things that are interesting for beginners of quant trading to learn before developing their own machine learning quantitative trading strategies.</p><h1 id="Setup-before-we-start"><a href="#Setup-before-we-start" class="headerlink" title="Setup before we start"></a>Setup before we start</h1><h2 id="Quick-introduction-of-the-machine-learning-models"><a href="#Quick-introduction-of-the-machine-learning-models" class="headerlink" title="Quick introduction of the machine learning models"></a>Quick introduction of the machine learning models</h2><p>I picked three different machine learning models to see whether different models will greatly impact the outcome of the strategy. Three models are: <code>Logistic regression</code>, <code>SVM</code> with Gaussian kernel, and <code>XGBoost</code>. I’m not going to cover the theory of each model as our focus in this article is to extract some valuable insights from the backtest results.</p><h3 id="Logistic-Regression"><a href="#Logistic-Regression" class="headerlink" title="Logistic Regression"></a>Logistic Regression</h3><p><code>Logistic regression</code> is one of the most commonly used algorithms in the field. Similar to the theory of linear regression as we explain <strong>Supervised Learning</strong> <a href="https://mikelhsia.github.io/2021/04/22/2021-04-22-machine-learning-intro/">here</a>, the input data will be fed into the pipeline to produce a final score. Logistic regression simply applies the <strong><a href="https://en.wikipedia.org/wiki/Sigmoid_function">Sigmoid function</a></strong> to convert the final score into either 0 or 1. We’re going to get an array of [1, 0, 0, 1, …, 0] as the outcome from the logistic regression, which we can reinterpret the array into [True, False, False, True, …, False] as our final results.</p><p>In other words, we’re trying to find the exact line to separate the 0’s and the 1’s.<br><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/LR.png" class="" width="500"></p><p style="text-align:center; color: grey;">    <i>The classic linear regression model</i></p><h3 id="SVM-Support-Vector-Machine"><a href="#SVM-Support-Vector-Machine" class="headerlink" title="SVM (Support Vector Machine)"></a>SVM (Support Vector Machine)</h3><p><code>SVM</code> is a variant of <code>logistic regression</code>. Instead of finding the exact line to separate all the 0’s and the 1’s, we’re adding a buffer parameter (the penalty term <em>C</em> in the diagram) into the model. By adding this buffer, the model would be much more resilient to the test data.</p><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/SVM.png" class="" width="500"><p style="text-align:center; color: grey;">    <i>SVM is a more flexible classification model</i></p><h3 id="XGBoost"><a href="#XGBoost" class="headerlink" title="XGBoost"></a>XGBoost</h3><p>XGBoost is a tree-like classification model. By inputting data into the tree-like trained model, the model will generate relative scores in each end leaf. After adding up all the scores presented in the leaves and applying the <strong>sigmoid function</strong>, we will have our final prediction for that specific test data. Essentially, it’s a different technique than the previous two algorithms.<br><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/XGBoost.png" class="" width="500"></p><p style="text-align:center; color: grey;">    <i>XGBoost is essentially a type of decision tree</i></p><h2 id="Data-and-factors"><a href="#Data-and-factors" class="headerlink" title="Data and factors"></a>Data and factors</h2><p>Below are the data and factors that I used to train the model. You can reference <a href="https://www.joinquant.com/help/api/help#name:factor_values">here</a> to know what these factors stand for.<br><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/data.png" class="" width="200"></p><p style="text-align:center; color: grey;">    <i>Factor data</i></p><p>Also, I neutralized the data against the industry category and market capitalization, and winsorized the data to mitigate the extreme data as standard steps to process the data.</p><h2 id="How-to-train-the-model"><a href="#How-to-train-the-model" class="headerlink" title="How to train the model"></a>How to train the model</h2><p>I’m going to train the data as we said in <a href="https://mikelhsia.github.io/2021/05/10/2021-05-14-machine-learning-prototype/">this article</a>. I didn’t split the CV data from the original data, as our purpose is to train the model constantly with the latest data instead of using the same batch of data over and over again. Standardization and Principal Component Analysis (PCA) were also applied to the data before training the model.</p><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/training.png" class="" width="500"><p style="text-align:center; color: grey;">    <i>Rolling over the data to include new data and exclude old data</i></p><h2 id="Our-strategy"><a href="#Our-strategy" class="headerlink" title="Our strategy"></a>Our strategy</h2><p>Let’s quickly put together our trade strategy to be used in this backtest experiment:</p><ol><li>Collect and adjust our portfolio on monthly basis.</li><li>Label the stocks that have the top 30% daily return as +ve data, and the stocks that have the bottom 30% as -ve data. This label is what we used in the <code>y_data</code> to train our model.</li><li>Portfolio capacity set to be 20, meaning we can hold at most 20 stocks at the same time.</li><li>There are two variants regarding how to pick the stocks we’re going to buy:<br>4.1. Buy the top 20 stocks that have the highest probabilities to be +ve.<br>4.2. Buy the stocks that were predicted +ve.</li><li>We set our stop-gain point at 70%, and stop-loss point at 8%. 70% of stop gain would not stop us from gaining the margin of the top 30% stocks, and 8% would simply be my personal risk-aversion level.</li></ol><h1 id="Resolving-myths"><a href="#Resolving-myths" class="headerlink" title="Resolving myths"></a>Resolving myths</h1><p>These 108 backtest were conducted with the test data from 2019-09-29 to 2021-05-07. The parameters include: the types of machine learning algorithms, the length of training periods, the number of selected factors, when to place orders, … etc. The benchmark is the <a href="https://baike.baidu.com/item/%E4%B8%AD%E8%AF%81500%E6%8C%87%E6%95%B0/9192904?fromtitle=%E4%B8%AD%E8%AF%81500&amp;fromid=17200509&amp;fr=aladdin"><code>ZZ500 index</code></a>, and the benchmark return during the test period is <strong>28.74%</strong>.</p><p>To show you what the result would be like, I screenshot one of the backtest results:<br><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/sample.png" class="" width="500"></p><p style="text-align:center; color: grey;">    <i>Backtest results ran on JoinQuant</i></p><p>However, it’s still quite difficult to find out what is the best case that has all the parameters right simply by looking at the numbers and chart. Here I put all the data into one CSV sheet and visualized the data to extract a few insights from different angles. Hopefully, we can get an idea of what are the most crucial parameters that we need to consider before we throw this strategy into the market. They are:</p><ul><li>Which of the machine learning algorithms has better performance?</li><li>How many features we should use?</li><li>How much data we should use to train our model?</li><li>When should we trade our target stock?</li><li>Is AUC the indicator we use to evaluate our model?</li></ul><h2 id="Which-of-the-machine-learning-algorithms-has-better-performance"><a href="#Which-of-the-machine-learning-algorithms-has-better-performance" class="headerlink" title="Which of the machine learning algorithms has better performance?"></a>Which of the machine learning algorithms has better performance?</h2><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/excess_rtn.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>Excess return by machine learning models</i>    <br>    <small></small><i>The red dots indicate the excess return compares to the ZZ500 benchmark return of 28.74%</i></small></p><p>The <code>LogisticRegression</code> from sklearn.linear_model seems to have the most stable excess portfolio return ranging from ~15% to ~70%. <code>XGBoost</code> seems to be the best model as it gave us the best potential portfolio return ranging from 18% to 120%. As for the <code>svm.svc (support vector machine model)</code>, which has too much downside risk and could potentially cause us to lose money, would be the least desirable model to utilize at the first glance.</p><h2 id="How-many-features-we-should-use"><a href="#How-many-features-we-should-use" class="headerlink" title="How many features we should use?"></a>How many features we should use?</h2><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/n_features_vs_AUC.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>AUC v.s. number of features selected</i></p><p>I’ve run the backtest with 20, 30, 40 features using function <code>RFE (Recursive feature elimination)</code> in sklearn.feature_selection, which will analyze the features and then select the most relevant features. By looking at the diagram, you can tell that except for the <code>Logistic Regression</code> model, the higher AUC you will get if you picked more features to train your model. That might indicates that our model is capable of predicting more accurately if more features were accounted for.</p><blockquote><p>AUC: AUC is the model evaluation indicator ranging from 0 to 1, which is used to evaluate the accuracy of your classification model. When 0.5 &lt; AUC &lt; 1, you actually own a pretty good machine learning model that classifies True or False.</p></blockquote><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/n_features_vs_excess_rtn.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>Excess return by the number of features selected</i></p><p>There is no clear increase of excess return even though we have higher AUC when you look at the above diagram. The red dots of excess return are dispersed all over the chart. The distribution of red dots is even more separated if we picked 40 features. This phenomenon potentially tells us that our model is over-fitting with 40-feature data, rendering a lower ability to predict the future. On the other hand, if we look at the scenario of <code>XGBoost</code> model with 40 features, this is the scenario that gives us the highest excess return with tolerable variance. So this could be one of our parameter combinations to apply to our final model.</p><h2 id="How-much-data-we-should-use-to-train-our-model"><a href="#How-much-data-we-should-use-to-train-our-model" class="headerlink" title="How much data we should use to train our model?"></a>How much data we should use to train our model?</h2><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/relation_tperiod_AUC.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>Training periods v.s. AUC</i></p><p>Machine learning is an algorithm that aggregates historical data to form a pattern and further uses this pattern to predict the future. The more data you feed into the model, the algorithm will have much more ideas to decide whether a specific scenario will happen or not. However, this doesn’t 100% apply to the stock market as there are too many variables and events that cannot be quantified as inputs to feed into the model. Also, stock prices and indicators are time series that the recent data is more relevant than the data three years ago. The above diagram perfectly explains that the accuracy and AUC of the model won’t hugely increase even you have more data to train your model.</p><p>On the contrary, longer periods of training data seem to sabotage the accuracy and AUC. As presented in the below diagram, both excess return of <code>svm.svc</code> and excess return of <code>XGBoost</code> decrease when the training periods increase. Seems the <strong>‘freshness’</strong> of financial data will dissipate over time.</p><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/excess_rtn_by_tperiod.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>Excess return by training periods</i></p><h2 id="When-should-we-trade-our-target-stock"><a href="#When-should-we-trade-our-target-stock" class="headerlink" title="When should we trade our target stock?"></a>When should we trade our target stock?</h2><p>If you’re an algo trader who adjusts your portfolio on a daily/weekly/monthly basis, I believe you have the same question as I do: <strong><em>When should I place my order on the day I adjust my portfolio?</em></strong>. The stock prices fluctuate in one intraday. Therefore the timing we place our order could potentially impact our portfolio return.</p><p>Here I did a quick experiment by backtesting each scenario two times, one scenario places orders around 09:30 after the market is open, and the other places orders around 14:40 before the market closes. Interestingly, the second scenario has a 77.78% probability to win the first. Meaning, if we place our orders before the market closes, we will have a 77.78% of chance to generate more profit. See the below diagram for the distribution of return differences by models:</p><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/c_m_o.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>Return difference between placing orders after the market is opened and placing orders before the market closed</i></p><p>There are a few possible reasons I have in mind that might explain why this is happening:</p><ul><li>In the training process, I use close price to label the stocks instead of the open price. So, placing orders before the market closes will help me get closer to the trained model.</li><li>When there’s bad news happening, the stock prices incline to move a lot faster than any other time. Stock prices drop drastically in the pre-market, and will reach our stop -oss point right after the market opened. However, a movement like this tends to bounce back more or less on the same day in the afternoon. So placing orders in the afternoon would prevent us from stopping loss too early.</li><li>A lot of intraday traders and speculators tend to close their positions before the market closes as they have done their work exploiting insider news or any other news. When all the speculations have been digested by the market, the stock price will be much more reasonable and stable.</li></ul><h2 id="Is-AUC-the-indicator-we-use-to-evaluate-our-models"><a href="#Is-AUC-the-indicator-we-use-to-evaluate-our-models" class="headerlink" title="Is AUC the indicator we use to evaluate our models?"></a>Is AUC the indicator we use to evaluate our models?</h2><p>As explained in the above questions, AUC is the indicator to evaluate the accuracy of your classification model. But, does the AUC has a positive relationship with our portfolio return? Let’s first take a look at the regression plot between the AUC and the portfolio return of all our backtest below.</p><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/auc_vs_rtn.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>AUC v.s. return</i></p><p>The diagram above doesn’t imply a positive correlation between AUC and portfolio return. The regression slope is quite flat, indicating AUC has a close-to-zero connection with the portfolio return. So it almost is a random walk. No way!! How could weeks of work tell me that this model is useless!?</p><p>Calm down. Let me use another angle to diagnose this plot again. I’m adding another dimension to separate the dots by the model we use. Now let’s see how it looks like.</p><img data-src="/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/auc_vs_rtn_by_kernel.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>AUC v.s. return(by models)</i></p><p>Wow wow! Now it looks different. The diagram actually tells me that the <code>XGBoost</code> model and the <code>Logistic Regression</code> model contain a certain degree of positive correlation between AUC and portfolio return. This relationship will be buried if we look at each dot is from the identical model.</p><p>There are two possible reasons that why the first diagram can’t tell us there’s a potential positive correlation but the second one can:</p><ul><li>The regression was contaminated by the outlier examples lies in the bottom right quadrant.</li><li>We shouldn’t compare AUC across different models.</li></ul><h1 id="Before-we-close-this-topic"><a href="#Before-we-close-this-topic" class="headerlink" title="Before we close this topic"></a>Before we close this topic</h1><p>I believe that 108 backtests are actually not enough to help us cover every spectrum in order to answer these questions. However, I think this could be a starting point for you to understand how we can approach these types of questions in order to evaluate the effectiveness of our machine learning trading algorithm.</p><p>See you next time.</p>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/06/14/2021-06-14-N-insights-found-while-implementing-machine-learning-trading-algorithm/cover.jpg&quot; class=&quot;&quot; width=&quot;600&quot;&gt;
&lt;p&gt;In the post &lt;a href=&quot;https://mikelhsia.github.io/2021/05/10/2021-05-14-machine-learning-prototype/&quot;&gt;【Machine Learning】 Part II - How to build a machine learning boilerplate?&lt;/a&gt;, we have successfully built our machine learning boilerplate. By having this template, we can develop an advanced machine learning trading strategy upon. However, even with the strategy result that looks profoundly profitable, we still won’t be able to know how much money we can make by looking at the accuracy rate of our machine learning trading algorithm.&lt;/p&gt;
&lt;p&gt;In order to better understand whether the results from the output of our model are really concerning our portfolio return, I put together a rather simple strategy and run several backtests with different parameters. In the end, we’re going to answer several frequently asked questions in order to decrypt the myths of machine learning trading algorithms.&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://mikelhsia.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>【Machine Learning】 Part II - How to build a machine learning boilerplate?</title>
    <link href="http://mikelhsia.github.io/2021/05/10/2021-05-14-machine-learning-prototype/"/>
    <id>http://mikelhsia.github.io/2021/05/10/2021-05-14-machine-learning-prototype/</id>
    <published>2021-05-10T06:44:46.000Z</published>
    <updated>2021-06-18T09:54:10.648Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/05/10/2021-05-14-machine-learning-prototype/cover.jpg" class="" width="600"><p>To follow up on what we have learned in the last post, here we’re going to quickly demonstrate how to build your own machine learning boilerplate. We’re going to cover the steps that we introduced in the post:</p><ol><li>Data curating</li><li>Feature discover/analyze</li><li>Train the model</li><li>Predict the expected variable</li><li>Form the strategy and run backtest<a id="more"></a></li></ol><iframe src="https://nbviewer.jupyter.org/github/mikelhsia/Python/blob/master/jupyter_notebook_for_blogs/2021-05-14-machine-learning-prototype.ipynb" width="100%" height="1200" frameborder="0"></iframe>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/05/10/2021-05-14-machine-learning-prototype/cover.jpg&quot; class=&quot;&quot; width=&quot;600&quot;&gt;
&lt;p&gt;To follow up on what we have learned in the last post, here we’re going to quickly demonstrate how to build your own machine learning boilerplate. We’re going to cover the steps that we introduced in the post:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Data curating&lt;/li&gt;
&lt;li&gt;Feature discover/analyze&lt;/li&gt;
&lt;li&gt;Train the model&lt;/li&gt;
&lt;li&gt;Predict the expected variable&lt;/li&gt;
&lt;li&gt;Form the strategy and run backtest</summary>
    
    
    
    <category term="Machine Learning" scheme="http://mikelhsia.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Readings" scheme="http://mikelhsia.github.io/tags/Readings/"/>
    
  </entry>
  
  <entry>
    <title>【Machine Learning】 Part I - 10 minutes to learn what I know about machine learning in quantitative trading</title>
    <link href="http://mikelhsia.github.io/2021/04/22/2021-04-22-machine-learning-intro/"/>
    <id>http://mikelhsia.github.io/2021/04/22/2021-04-22-machine-learning-intro/</id>
    <published>2021-04-22T06:42:59.000Z</published>
    <updated>2021-06-18T09:54:10.647Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/04/22/2021-04-22-machine-learning-intro/cover.jpg" class="" width="600"><p>Machine learning has been a black box for most people. We have been told how powerful it is to address our questions with the terms such as CNN, LSTM, training data, modeling, …. Also, machine learning has been practicing in so many fields such as medical, finance, macroeconomic, marketing, …etc to address the most difficult and complex questions.</p><p>Using machine learning as a tool to beat the market would be our goal here. Therefore, I’ve put together a list of questions that I used to have and will address them one by one in this post, hoping this would help people who have the same questions as I did. The fundamental ideas and theories behind machine learning are all about math, which I’m not going to over in this article as it would take ages to explain them in a better way than all the other existing articles that you can find on the internet.</p><p>The questions are:</p><ul><li>What does Machine learning do in the finance world?</li><li>How does machine learning work?</li><li>What are the FAMQ (Frequently Asked Myself Questions)?</li><li>Postlogue: What is our ultimate goal of developing a quantitative investment strategy?<a id="more"></a></li></ul><h1 id="What-does-Machine-learning-do-in-the-finance-world"><a href="#What-does-Machine-learning-do-in-the-finance-world" class="headerlink" title="What does Machine learning do in the finance world?"></a>What does Machine learning do in the finance world?</h1><img data-src="/2021/04/22/2021-04-22-machine-learning-intro/category.png" class="" width="500"><p style="text-align:center; color: grey;">    <i>Machine learning category diagram</i></p><p>There are two kinds of machine learning algorithms: <code>supervised learning</code> v.s. <code>unsupervised learning</code>, which is used to address different types of questions.</p><h2 id="Supervised-learning"><a href="#Supervised-learning" class="headerlink" title="Supervised learning"></a>Supervised learning</h2><p><strong>Supervised learning</strong> is about using the existing data set to deduce a valid intrinsic pattern/relation between the data provided and the dependent variable. The term <code>supervised</code> indicates that the learning process is somewhat <code>monitored or instructed</code> by engineers telling the program what is the expected data while training the model. As explained in the article <a href="https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/">【Factor analysis】 Vol. 1. Introduction the idea of factor analysis</a>, the dependent variable is the target variable that you’re trying to predict, and usually is in linear scale or is labeled/assigned to an absolute number or string. When our dependent variable is in scale form (from 0~100, -10000~10000, …), this is the time to use a <strong>linear regression model</strong>. On the other hand, we’re trying to predict whether a red object with 10 cm height and 20 cm width is a tomato or an apple, this is the time to apply the <strong>classification model</strong>. Once we have decided what kind of question we’re trying to solve, we started with using the historic data to develop the equation to describe the relationship between an object and its attribute. In the end, we feed the data into this equation to produce the predicted dependent variable.</p><p><em>Linear regression sample data</em></p><div class="table-container"><table><thead><tr><th>No. of the citizen</th><th><strong>Degree of Happiness (0~100)</strong></th><th>Gender</th><th>Age</th><th>Occupation</th><th>Location</th><th>Income</th><th>Marital Status</th><th>Number of social gathering per week</th></tr></thead><tbody><tr><td>No. 1</td><td><strong>60</strong></td><td>male</td><td>28</td><td>miner</td><td>village A</td><td>$2,000</td><td>single</td><td>2</td></tr><tr><td>No. 2</td><td><strong>80</strong></td><td>female</td><td>32</td><td>housewife</td><td>village B</td><td>$100</td><td>married</td><td>5</td></tr><tr><td>No. 3</td><td><strong>77</strong></td><td>male</td><td>63</td><td>retired</td><td>village C</td><td>$500</td><td>divorced</td><td>12</td></tr><tr><td>No. 4</td><td><strong>58</strong></td><td>female</td><td>22</td><td>OL</td><td>village A</td><td>$1,300</td><td>in a relationship</td><td>7</td></tr><tr><td>No. 5</td><td><strong>? (Predict the value of happiness)</strong></td><td>male</td><td>33</td><td>miner</td><td>village C</td><td>$1,800</td><td>married</td><td>3</td></tr></tbody></table></div><p><em>Classification sample data</em></p><div class="table-container"><table><thead><tr><th>No. of the citizen</th><th><strong>Level of Happiness</strong></th><th>Gender</th><th>Age</th><th>Occupation</th><th>Location</th><th>Income</th><th>Marital Status</th><th>Number of social gathering per week</th></tr></thead><tbody><tr><td>No. 1</td><td><strong>Not happy</strong></td><td>male</td><td>28</td><td>miner</td><td>village A</td><td>$2,000</td><td>single</td><td>2</td></tr><tr><td>No. 2</td><td><strong>Happy</strong></td><td>female</td><td>32</td><td>housewife</td><td>village B</td><td>$100</td><td>married</td><td>5</td></tr><tr><td>No. 3</td><td><strong>Very happy</strong></td><td>male</td><td>63</td><td>retired</td><td>village C</td><td>$500</td><td>divorced</td><td>12</td></tr><tr><td>No. 4</td><td><strong>Not happy</strong></td><td>female</td><td>22</td><td>OL</td><td>village A</td><td>$1,300</td><td>in a relationship</td><td>7</td></tr><tr><td>No. 5</td><td><strong>? (Predict the level of happiness)</strong></td><td>male</td><td>33</td><td>miner</td><td>village C</td><td>$1,800</td><td>married</td><td>3</td></tr></tbody></table></div><p>Taking the example from that article, the <code>Degree of Happiness</code> would be the dependent variable that we’re trying to predict. By using the equation we developed based on the data feed of citizen No. 1 ~ No. 4, we can somewhat speculate the degree of happiness of citizen No. 5. To tell you the truth, it just feels like you’re taking a math exam, and there are a dozen of equations with answers were on the paper but not the last one. You were asked to check the equations listed and find the hidden pattern so that you can fill in the last blank square.</p><img data-src="/2021/04/22/2021-04-22-machine-learning-intro/math.jpg" class="" width="400"><p style="text-align:center; color: grey;">    <i>Machine learning is just like a program to solve this question</i></p><p>For more detail, you can check out this video from <code>Andrew Ng</code> for his Stanford University open courses to know more about supervised learning.</p><iframe src="//player.bilibili.com/player.html?aid=625601196&bvid=BV1gt4y117Fa&cid=188142998&page=3" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="Unsupervised-learning"><a href="#Unsupervised-learning" class="headerlink" title="Unsupervised learning"></a>Unsupervised learning</h2><p>Contrary to supervised learning, <strong>unsupervised learning</strong> indicates that the model can be trained without human intervention. The model would be able to classify and label the data into several different groups. But unsupervised learning wouldn’t be able to apply to the scenario if you would like to predict the exact value in linear scale as no reference values from human beings were provided.</p><img data-src="/2021/04/22/2021-04-22-machine-learning-intro/classifier.jpg" class="" width="400"><p style="text-align:center; color: grey;">    <i>Illustration of unsupervised learning plotting</i></p><p>You can see the dotted line in the above image as the trained unsupervised learning model. As soon as there are new input data plotted in this two-dimensional plane, the classifier would be able to identify this new point belongs to group green or group red. In the meantime, the dotted line itself will be adjusted according to the new added value by changing its shape.</p><p>Check the below video if you want to know more detail about unsupervised learning.</p><iframe src="//player.bilibili.com/player.html?aid=625601196&bvid=BV1gt4y117Fa&cid=188143030&page=4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width=50%> </iframe><h1 id="How-does-machine-learning-work"><a href="#How-does-machine-learning-work" class="headerlink" title="How does machine learning work?"></a>How does machine learning work?</h1><p>Since we have the big picture of what machine learning is about, there are certain steps to follow in order to build our own machine learning boilerplate.<br><img data-src="/2021/04/22/2021-04-22-machine-learning-intro/process.png" class="" width="400"></p><p style="text-align:center; color: grey;">    <i>Process of how machine learning works</i></p><h2 id="Data-Curating"><a href="#Data-Curating" class="headerlink" title="Data Curating"></a>Data Curating</h2><p>First of all, we need to collect all the data we need. In the article <a href="https://mikelhsia.github.io/2020/11/10/2020-11-08-macd-strategy-implementation/">【How 2】 Vol. 2. How to build an automated stock trading script</a>, there are several sources that we can get historic data from:</p><ul><li><a href="https://www.quandl.com/">Quandl</a></li><li><a href="https://pypi.org/project/yfinance/">yfinance</a></li><li><a href="https://iexcloud.io/">IEX Cloud</a></li><li><a href="https://api.tiingo.com/account/api/usage">Tiingo</a><br>After getting the raw historic data you need, the data still needs to be cleaned, indexed, sorted, and even adjusted to fit your needs. There’s a sentence that I read somewhere that really illustrate the importance of this stage:<blockquote><p><em>The data provided decide the celling of your strategy return, and implementation of your machine learning is how you approach this celling.</em></p></blockquote></li></ul><p>Therefore, making sure you have quality data is very crucial before proceeding to the next step.</p><h2 id="Feature-Discover-Analyze"><a href="#Feature-Discover-Analyze" class="headerlink" title="Feature Discover/Analyze"></a>Feature Discover/Analyze</h2><p>Features/factors are the meaningful signals/data that transformed from the raw data, such as historic open/close/high/low price of each stock, or EPS that processed from the numbers in the balance sheet. Here’s a quick introduction of factors that help you understand what factors are about: <a href="https://mikelhsia.github.io/2021/02/23/2021-02-11-factor-analysis-3/">【Factor analysis】 Vol. 3. Construct your own factor</a></p><h2 id="Training-the-model"><a href="#Training-the-model" class="headerlink" title="Training the model"></a>Training the model</h2><p>Simply put, we use the data that we acquired from the previous two steps and feed it into the program in order to deduce the equation that describes the relationship between dependent and independent variables. The deliverable of this stage is the trained model that will be carried into the next stage.</p><p>However, the reality is that the above scenario usually takes weeks and even months to complete. First of all, there are numerous models to choose from, depending on what kind of questions you’re trying to solve. Secondly, you also need to do research on what are the best parameters such as <code>learning rate</code>(<em>linear regression</em>) and <code>number of leaves</code>(<em>decision tree</em>) that best fit your model and dataset. By the time you finally find the right model and the parameters that give you the best training score, you were told that your model is <code>overfitted</code>, which means that your model is only valid in a very specific situation. Then again you need to go back to the beginning to strip off those restrictions that you put on the model.</p><p>Training the model is probably the most suffering and unbearable period for a data scientist in terms of time and the number of frustrations. But, the outcome would be rewarding as long as you’re able to produce a well-trained model that proved to be able to predict the outcome.</p><h2 id="Predicting-the-expected-variable"><a href="#Predicting-the-expected-variable" class="headerlink" title="Predicting the expected variable"></a>Predicting the expected variable</h2><p>This is the most critical but requires the least effort part among the entire processes. We generate the predicted value by feeding the latest factor data into the equation. In the <code>linear regression</code> type of models, we will get the exact numbers as our prediction, or we will get a label when applying <code>classification</code> type of models. Then we can generate buy/sell signals according to the outputs and further form our investment strategy.</p><h2 id="Forming-strategy-and-backtest"><a href="#Forming-strategy-and-backtest" class="headerlink" title="Forming strategy and backtest"></a>Forming strategy and backtest</h2><p>Lastly, we will need to put everything we have together to form the investment strategy. This investment strategy will include the buy/sell signals from the previous step so that we know when to add certain stocks to our portfolio or remove them. Then, we evaluate the profitability of this strategy based on the backtest results. Once we confirm that this strategy would bring us a high enough sharp ratio and low enough risk, then this strategy is good to go.</p><h1 id="What-are-the-FAMQs-Frequently-Asked-Myself-Questions"><a href="#What-are-the-FAMQs-Frequently-Asked-Myself-Questions" class="headerlink" title="What are the FAMQs (Frequently Asked Myself Questions)?"></a>What are the FAMQs (Frequently Asked Myself Questions)?</h1><p>Working on your quantitative research is a process of putting your thoughts together. In order to prove your strategy works and is profitable, you have to question each step in your research to make sure you’re logically bullet-proof. Survivor bias, look-ahead bias, and data snooping are the problems and biases that you need to discover and address before moving your strategy to the implementation stage. I found I asked the following questions to myself so many times and turned out these questions did help me spot the issues buried inside the codes.</p><h2 id="Are-we-using-yesterday’s-data-to-predict-tomorrow’s-return"><a href="#Are-we-using-yesterday’s-data-to-predict-tomorrow’s-return" class="headerlink" title="Are we using yesterday’s data to predict tomorrow’s return?"></a>Are we using yesterday’s data to predict tomorrow’s return?</h2><p>When training your model and predicting the future stock return, you need to make sure you’re using the data that is already publicly available on the day. For example, we have sample data that looks like below:</p><img data-src="/2021/04/22/2021-04-22-machine-learning-intro/rtn.png" class="" width="400"><p style="text-align:center; color: grey;">    <i>Sample data including close price in monthly frequency</i></p><p>In order to train our model correctly, we need to use currently available data to predict the future return. <code>VOL5</code>, <code>VOL60</code>, <code>ROC5</code> are the factors we use in the model training, which are only available <strong>AFTER the market is closed on the day</strong>. We use <code>data[&#39;close&#39;].pct_change()</code> to calculate the monthly return in <code>rtn</code> column. However, if you look at the <em>2015-03-31</em> row, you’ll find out actually using the after-market-close data to predict the price change of the same month (It requires a bit of imagination and the sense of time). This would give us a relatively high model score as the close price and the return we calculated are highly correlated. Therefore, we need to shift the <code>rtn</code> column to the previous month into <code>rtn_shifted</code> column, so that logically we will train our model with today’s available data against next month’s return.</p><p>This is the must-ask question before you start feeding your data into your training model. Also, this time-related relationship would change based on your data source and the sample period of your data. So do ask yourself this question every time after you processed your data and before you start training your model.</p><h2 id="Should-we-use-classifier-or-linear-regression-type-of-models"><a href="#Should-we-use-classifier-or-linear-regression-type-of-models" class="headerlink" title="Should we use classifier or linear regression type of models?"></a>Should we use <code>classifier</code> or <code>linear regression</code> type of models?</h2><p>As explained in the above section, there are two types of models for you to choose and you decide which one could better solve your question. We realize that the <code>classifier</code> type of model works better than the <code>linear regression</code> type of model from the past experience. The reason is that the stock return is fluctuated and is very easy to be influenced by extreme values caused by <em>black swan incidents</em>.</p><p>To mitigate the impact from the extreme values, we can label the records that we deem profitable to <strong>True</strong> and label the ones that we see as not profitable as <strong>False</strong>. So obviously, we reshape our question from <strong>predicting the exact future return</strong> to <strong>finding out the stocks that we think are profitable</strong>. Doesn’t this sound much more feasible for our program to find a boundary separating profitable and not profitable stocks than find the exact stock return? For example, we can label <code>True</code> to the stocks that have one month return is higher than 8% (including the commission fee that we need to pay and the slippage that happened when the stocks bought and sold), and label the rest to <code>False</code>.</p><p>Once we process our data this way, we can remove the noise to a certain extent and increase the accuracy of our machine learning model.</p><h2 id="What-is-the-best-size-for-the-data-when-training-the-model"><a href="#What-is-the-best-size-for-the-data-when-training-the-model" class="headerlink" title="What is the best size for the data when training the model?"></a>What is the best size for the data when training the model?</h2><p>Sometimes the data scientist found out that their machine learning wouldn’t converge while training their model because their model wouldn’t be able to find the optimal equation. Then one of the solutions is to acquire more data to be added into the training set so that the program will have enough data to judge when and where to converge and to find the optimal equation. However, this solution is not 100% true when applying the machine learning algorithm to quantitative investment.</p><p>Theoretically speaking, the stock prices were impacted by the most recent corporate news and facts. As time passes by, the magnitude of the impact will gradually fall off. If we use the trained model trained with data 10 years ago, the ability to predict the future price is weakening as the market would no longer recognize the corporate news and facts.</p><p>Hence, the size of your training data wouldn’t matter, but the immediacy of the data does. Historic data within two years (24 months) would be recommended to be used to training your model.</p><h1 id="Postlogue-What-is-our-ultimate-goal-of-developing-a-quantitative-investment-strategy"><a href="#Postlogue-What-is-our-ultimate-goal-of-developing-a-quantitative-investment-strategy" class="headerlink" title="Postlogue: What is our ultimate goal of developing a quantitative investment strategy?"></a>Postlogue: What is our ultimate goal of developing a quantitative investment strategy?</h1><p>After reading various articles regarding developing quantitative strategies and studying critical metrics that show how to better evaluate the strategy performance, I was convinced that pursuing high return and low risk of the strategy would be our mission. However, I read a quote from the book <code>Advances in Financial Machine Learning</code> by <code>Marcos Lopez De Pardo</code> that really inspired me.</p><blockquote><p><strong>Think it like running a business.</strong></p><p>Professionals develop methods to mass-produce strategies. The money is not in making a car, it is in making a car factory.</p><p>Therefore your goal is to run a research lab like a factory, where true discoveries are not born out of inspiration, but out of methodic hard work.</p></blockquote><p>By saying that, we should put more attention to building the processes and tools so that we can conduct the quantitative research in a faster and more accurate fashion, instead of dedicating indefinite time to <strong>PERFECT</strong> our high-return strategy. Any high-return strategy would eventually be retired one day as the macroeconomics shifts or as the regime changes. Or to say, there’s no such a strategy that keeps making profits without investor’s constant attention to adopting all the potential changes in their strategy variables.</p>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/04/22/2021-04-22-machine-learning-intro/cover.jpg&quot; class=&quot;&quot; width=&quot;600&quot;&gt;
&lt;p&gt;Machine learning has been a black box for most people. We have been told how powerful it is to address our questions with the terms such as CNN, LSTM, training data, modeling, …. Also, machine learning has been practicing in so many fields such as medical, finance, macroeconomic, marketing, …etc to address the most difficult and complex questions.&lt;/p&gt;
&lt;p&gt;Using machine learning as a tool to beat the market would be our goal here. Therefore, I’ve put together a list of questions that I used to have and will address them one by one in this post, hoping this would help people who have the same questions as I did. The fundamental ideas and theories behind machine learning are all about math, which I’m not going to over in this article as it would take ages to explain them in a better way than all the other existing articles that you can find on the internet.&lt;/p&gt;
&lt;p&gt;The questions are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What does Machine learning do in the finance world?&lt;/li&gt;
&lt;li&gt;How does machine learning work?&lt;/li&gt;
&lt;li&gt;What are the FAMQ (Frequently Asked Myself Questions)?&lt;/li&gt;
&lt;li&gt;Postlogue: What is our ultimate goal of developing a quantitative investment strategy?</summary>
    
    
    
    <category term="Machine Learning" scheme="http://mikelhsia.github.io/categories/Machine-Learning/"/>
    
    
    <category term="Readings" scheme="http://mikelhsia.github.io/tags/Readings/"/>
    
  </entry>
  
  <entry>
    <title>My 2020 Annual Transcript</title>
    <link href="http://mikelhsia.github.io/2021/04/20/2021-04-20-annual-summary/"/>
    <id>http://mikelhsia.github.io/2021/04/20/2021-04-20-annual-summary/</id>
    <published>2021-04-20T15:19:28.000Z</published>
    <updated>2021-06-18T09:54:10.646Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/04/20/2021-04-20-annual-summary/cover.jpg" class="" width="600"><p>It’s almost been a year I started working as a self-employed quant trader. I’ve been learning, researching, and coding most of the work time, then I invest to the rest of my time to taking care of families and tried to have quality time with them during this COVID year. Even though I broke my knee ligament while playing basketball and rest on the bed for almost two months, I’m still coding and refactoring my automatic trading framework in order to ready to dry run my next ready-to-go strategy.</p><p>However, I think I owe myself a transcript of the year to make sure I haven’t slacked off in this past year. Also, I need to set up a few goals in the new year.</p><a id="more"></a><h1 id="AI-for-trading-nano-degree-from-Udacity"><a href="#AI-for-trading-nano-degree-from-Udacity" class="headerlink" title="AI for trading nano degree from Udacity"></a>AI for trading nano degree from Udacity</h1><blockquote><p>May 2020 ~ Aug 2020</p></blockquote><img data-src="/2021/04/20/2021-04-20-annual-summary/cert.png" class="" width="300"><p>I have spent more than two months studying for this nano degree and tried to leverage this as a base stone to start this new career. Terms, jargon, techniques, financial knowledge, AI frameworks…, lots of information that have been studied. Now I recall, I’m still too green to dive in with one online session. But I’m glad I took the lessons as the knowledge I picked up is starting to make sense to me gradually day by day.</p><hr><h1 id="Blog-for-research-and-strategy"><a href="#Blog-for-research-and-strategy" class="headerlink" title="Blog for research and strategy"></a><a href="https://mikelhsia.github.io/">Blog for research and strategy</a></h1><blockquote><p>Nov 2020 ~ present</p></blockquote><p><a href="https://mikelhsia.github.io/">Michael’s blog</a></p><p>Reading <a href="https://medium.com/">Medium</a> has been one of my daily routines to absorb up-to-date knowledge. Soon I found out that people can actually make money by writing articles and publish on the platform. Then a thought stroke me, that maybe I can develop my second income stream other than my trading strategies by publishing what I have discovered and learned. Therefore, this blog was developed as a repository of the research articles and will start publishing to the platform later this year.</p><hr><h1 id="Tools-for-managing-projects-and-progress"><a href="#Tools-for-managing-projects-and-progress" class="headerlink" title="Tools for managing projects and progress"></a>Tools for managing projects and progress</h1><blockquote><p>Aug 2020 ~ present</p></blockquote><img data-src="/2021/04/20/2021-04-20-annual-summary/kanban.png" class="" width="600"><p>As a former project manager, I like my tasks to be well-described, well-thought, and visible when tasks are on the Kanban board. After all the tools that I have used in the past few years, Github is still one of the most easy-to-use tools for managing task progress.</p><p>There are two more extensions that I’m in love with while viewing source code:</p><ul><li><a href="https://about.sourcegraph.com/?utm_source=google&amp;utm_medium=cpc&amp;obility_id=111131150040&amp;utm_term=sourcegraph&amp;utm_content=463082265098&amp;utm_campaign=Brand|Short|AMER&amp;gclid=Cj0KCQjwyN-DBhCDARIsAFOELTnMY16SAIzXKmJu6a7PFmLF_o7qsQ4bd-AJwdnB_SJuJUg_JYGVGhcaAoA6EALw_wcB">Sourcegraph</a>: It’s a chrome extension specifically for Github. With this extension, viewing source code on Github would be much easier.</li><li><a href="https://github.com/conwnet/github1s">github1s</a>: This is also an extension for you to read the source code on Github in VS Code like interface. How cool is that!!</li></ul><hr><h1 id="The-researches-completed"><a href="#The-researches-completed" class="headerlink" title="The researches completed"></a>The researches completed</h1><blockquote><p>Sep 2020 ~ present</p></blockquote><p>These are the four strategies that I’ve been working on in the past year:</p><ul><li><a href="https://mikelhsia.github.io/2020/08/21/2020-08-21-magic-formula-vs-Acquirer-Multiples/">An investment strategy that takes you three days a year</a><ul><li>This strategy was my first strategy which is based on the magic formula developed by <em>Joel Greenblatt</em>, but the strategy duration was way too long to harvest. Therefore I decided not to run this on my one and only TD Ameritrade account.</li></ul></li><li><a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/">How to save your silver bullets with MACD strategy?</a><ul><li>This is the first momentum strategy and the only strategy that is running. I’ll disclose the result later.</li></ul></li><li><a href="https://mikelhsia.github.io/2020/12/26/2020-12-26-turtle-strategy/">Experiment of Turtle trading strategy</a><ul><li>This is more of an experiment on a traditional turtle strategy. The outcome didn’t look good on the stock market, so I leave it as a research result and will not run this strategy.</li></ul></li><li><a href="https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/">【Factor analysis】 Vol. 1. Introduction the idea of factor analysis</a><ul><li>This strategy turns out quite impressive. The return from the backtest grows very steady. I’ll start running this strategy on another stockbroker account.</li></ul></li></ul><p>After all these works, I found out that there are more tools that I need to build in order to pull off a more comprehensive research. Backtest, factor library, a visualized interface, … etc. Also, there is too much time spent on working on not profitable strategy. An insight that helps me to find out the inherent value of a strategy before investing time in it would be beneficial.</p><hr><h1 id="MACD-strategy-report-as-of-today-2020-11-16-2021-04-14"><a href="#MACD-strategy-report-as-of-today-2020-11-16-2021-04-14" class="headerlink" title="MACD strategy report as of today(2020/11/16 ~ 2021/04/14)"></a>MACD strategy report as of today(2020/11/16 ~ 2021/04/14)</h1><blockquote><p>Sep 2020 ~ Nov 2020<br>MACD strategy is the only up and running strategy that I have so far. Below is the pnl table since the strategy has been run since Nov 2020:</p></blockquote><div class="table-container"><table><thead><tr><th># of win trade</th><th># of lost trade</th><th># of opening position</th></tr></thead><tbody><tr><td>12</td><td>10</td><td>10</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>Overall return in %</th><th>Realized return</th><th>Unrealized return</th><th>Entry cost</th><th>Dividend &amp; interest</th></tr></thead><tbody><tr><td>9.12%</td><td>-$115.41</td><td>$3766.8</td><td>-$23.91</td><td>$83.82</td></tr></tbody></table></div><p>By looking at the table above, the realized return doesn’t seem to do well. Most of the profits are concentrating in the opening positions. But if you look at the line chart below, it’s easier to understand why:</p><img data-src="/2021/04/20/2021-04-20-annual-summary/pnl.png" class="" width="500"><p>The strategy actually went pretty ok in the beginning. We can even outperform the Nasdaq index for 2+ months. However, the big setback occurred when the MIME stock rising up and remove all the gain in March. Therefore, the hedge part of this strategy is not yet well-developed in this case. All in all, my plan is to run the <code>S&amp;P 500 premium</code> strategy that I stated in the article <a href="https://mikelhsia.github.io/2021/03/02/2021-03-03-factor-analysis-5/">here</a> and retire this MACD strategy. Apparently, this MACD strategy needs a closer look and then it’ll be ready to be released to the market again.</p><hr><h1 id="Future-plan"><a href="#Future-plan" class="headerlink" title="Future plan"></a>Future plan</h1><p>There are a couple of things that I would like to do in the next year:</p><h2 id="More-accounts-to-run-various-strategies"><a href="#More-accounts-to-run-various-strategies" class="headerlink" title="More accounts to run various strategies"></a>More accounts to run various strategies</h2><p>By far, I have only one account with me to run the strategy with. Here are a few brokers that are API supported: <a href="https://www.futunn.com/">futuniuniu</a>, and <a href="https://www.interactivebrokers.com/en/index.php?f=1338&amp;gclid=Cj0KCQjwyN-DBhCDARIsAFOELTnWbqB_TcmLesBymn3QMO1L_Ta7UZqtwzy9zEVThYkMKkME14xaz-saAhKsEALw_wcB">Interactive broker</a>. With more accounts, I would be able to run more strategies.</p><h2 id="Dig-in-to-option-strategy"><a href="#Dig-in-to-option-strategy" class="headerlink" title="Dig in to option strategy"></a>Dig in to option strategy</h2><p>Option would be the next realm that I would like to go into. Option seems to be a good choice if I want to do arbitrage trading. Also, if careful enough, option would also increase the leverage ratio for using cash.</p><h2 id="Start-applying-the-machine-learning-framework-to-research"><a href="#Start-applying-the-machine-learning-framework-to-research" class="headerlink" title="Start applying the machine learning framework to research"></a>Start applying the machine learning framework to research</h2><p>Machine learning is always the holy grail for quant traders. Quant traders not just use it to predict future stock prices, but can also be used for processing other complex data. It’s going to be very useful to get familiar with this technology.</p><h2 id="Read-more-books"><a href="#Read-more-books" class="headerlink" title="Read more books"></a>Read more books</h2><p>I have read only one book called <code>Quantitative Trading Strategies</code> by <em>LARS KESTNER</em>. The book does throw a lot of ideas and thoughts in my head. So I’m planning to spare more time to read in the next year.<br><img data-src="/2021/04/20/2021-04-20-annual-summary/book.png" class="" width="300"></p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>That’s all for the year.</p><p>My knee is still killing me. I have to lie in bed and spent 4+ hours per day for rehabilitation. I’m really looking forward to getting better and work more soon enough.</p>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/04/20/2021-04-20-annual-summary/cover.jpg&quot; class=&quot;&quot; width=&quot;600&quot;&gt;
&lt;p&gt;It’s almost been a year I started working as a self-employed quant trader. I’ve been learning, researching, and coding most of the work time, then I invest to the rest of my time to taking care of families and tried to have quality time with them during this COVID year. Even though I broke my knee ligament while playing basketball and rest on the bed for almost two months, I’m still coding and refactoring my automatic trading framework in order to ready to dry run my next ready-to-go strategy.&lt;/p&gt;
&lt;p&gt;However, I think I owe myself a transcript of the year to make sure I haven’t slacked off in this past year. Also, I need to set up a few goals in the new year.&lt;/p&gt;</summary>
    
    
    
    <category term="Readings" scheme="http://mikelhsia.github.io/categories/Readings/"/>
    
    
  </entry>
  
  <entry>
    <title>【Factor analysis】 Vol. 5. Performance analysis</title>
    <link href="http://mikelhsia.github.io/2021/03/02/2021-03-03-factor-analysis-5/"/>
    <id>http://mikelhsia.github.io/2021/03/02/2021-03-03-factor-analysis-5/</id>
    <published>2021-03-02T04:18:39.000Z</published>
    <updated>2021-06-18T09:44:13.998Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/03/02/2021-03-03-factor-analysis-5/cover.png" class="" width="500"><p>This is the finale of the【Factor analysis】 series. After all the things we have done: downloading the data, generating factor data, and conduct factor scoring, now we’re in the last part to evaluate whether our deeds are effective enough to profit.</p><p>Before analyzing anything, you need to have something to be analyzed. It’s unlikely that we’re going to buy all the good quality stocks, nor we’re able to define a fine line that above which score will make us money. So we have to build a strategy that we deem it’s profitable and then analyze the strategy against the benchmark portfolio, which is S&amp;P 500 index.<br><a id="more"></a></p><h1 id="Build-our-strategy"><a href="#Build-our-strategy" class="headerlink" title="Build our strategy"></a>Build our strategy</h1><p>Before building anything, let’s get to know what kind of index the S&amp;P 500 index is.</p><p>S&amp;P 500 index is a capital-weighted index that consists of the largest 500 companies in the United States. There are several criteria when the committee assesses the company to decide whether to add the company into the S&amp;P 500 index: <code>market capitalization</code>, <code>liquidity</code>, <code>domicile</code>, <code>public float</code>, <code>GlobalIndustry Classification Standard</code>, <code>financial viability</code>, and <code>representation of the industries in the economy of the United States</code>. Therefore, you can see S&amp;P 500 index as a very well-diversified portfolio.</p><p>Our strategy here would focus on tracking the movement of the S&amp;P 500 index by building a diversified portfolio with high-quality stocks that are already existed in the S&amp;P 500 index composition. We hope the diversified part would help us reduce the risk and the high-quality part would deliver the excess return if any.</p><h1 id="Performance-analysis"><a href="#Performance-analysis" class="headerlink" title="Performance analysis"></a>Performance analysis</h1><p>It’s always good to compare what you have found with something that has already built and testified by the public. So once we have built our strategy, we can start with analyzing the performance of our portfolio against the benchmark. There are several things that we can look into for us to make the judgment of whether this strategy fulfills our initial goal:</p><ol><li><strong>The amount of excess return</strong>:<ul><li>This could be the most important criteria or could be the least important one depends on what our ultimate goal when building this strategy. If you were to build a sustainable portfolio that prevents you from suffering the loss in the bearish market, then you can overlook this criterion. But remember, we’re using <code>log return</code> instead of <code>arithmetic average return</code>. So the actual return will be magnified no matter you make or lose money.</li></ul></li><li><strong>Sharpe ratio</strong>:<ul><li>It’s a standard ratio to evaluate how much excess return you can make out of one unit of risk you take.<script type="math/tex; mode=display">Sharpe\ ratio = \frac{Portfolio\ return\ -\ Benchmark\ return}{Portfolio\ standard deviation}</script></li></ul></li><li><strong>Win rate</strong>:<ul><li>Win rate indicating how often you can beat your benchmark portfolio.</li></ul></li></ol><p>Of course, there are more evaluations you can look into. But we can start with these three most simple ones.</p><p>Now let’s dive in and see how we can pull it off.</p><h1 id="Notebook-for-reference"><a href="#Notebook-for-reference" class="headerlink" title="Notebook for reference"></a>Notebook for reference</h1><iframe src="https://nbviewer.jupyter.org/github/mikelhsia/Python/blob/master/jupyter_notebook_for_blogs/vol_5_performance_analysis.ipynb" width="100%" height="1200" frameborder="0"></iframe>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/03/02/2021-03-03-factor-analysis-5/cover.png&quot; class=&quot;&quot; width=&quot;500&quot;&gt;
&lt;p&gt;This is the finale of the【Factor analysis】 series. After all the things we have done: downloading the data, generating factor data, and conduct factor scoring, now we’re in the last part to evaluate whether our deeds are effective enough to profit.&lt;/p&gt;
&lt;p&gt;Before analyzing anything, you need to have something to be analyzed. It’s unlikely that we’re going to buy all the good quality stocks, nor we’re able to define a fine line that above which score will make us money. So we have to build a strategy that we deem it’s profitable and then analyze the strategy against the benchmark portfolio, which is S&amp;amp;P 500 index.&lt;br&gt;</summary>
    
    
    
    <category term="Factor Analysis" scheme="http://mikelhsia.github.io/categories/Factor-Analysis/"/>
    
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>【Factor analysis】 Vol. 4. Factor score</title>
    <link href="http://mikelhsia.github.io/2021/02/27/2021-02-27-factor-analysis-4/"/>
    <id>http://mikelhsia.github.io/2021/02/27/2021-02-27-factor-analysis-4/</id>
    <published>2021-02-27T09:18:39.000Z</published>
    <updated>2021-09-08T09:19:44.922Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/02/27/2021-02-27-factor-analysis-4/cover.jpg" class="" width="500"><p><em>Previous reading</em></p><ul><li><a href="https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/"><em>【Factor analysis】 Vol. 1. Introduction the idea of factor analysis</em></a></li><li><a href="https://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/"><em>【Factor analysis】 Vol. 2. Get ready - preparing and cleaning data</em></a></li><li><a href="https://mikelhsia.github.io/2021/02/23/2021-02-11-factor-analysis-3/">【Factor analysis】 Vol. 3. Construct your own factor</a></li></ul><p>After we have collected all the fundamental data and have produced the factor data we need, how we can utilize them to compete with the market and to beat the benchmark return?</p><p>One of the common methods would be <strong>factor score</strong>. In this post, we’re going to describe and implement this factor score method to see how we can rate the stocks that have more potential to rise than the others in the future.<br><a id="more"></a></p><h1 id="What-is-factor-score"><a href="#What-is-factor-score" class="headerlink" title="What is factor score?"></a>What is factor score?</h1><p>The <strong>factor score</strong> is also called the <em>component score</em>. This method essentially uses the factors we have produced to score the quality of the stocks, based on the correlation between the individual factors and the next day’s return. <code>The higher the sum of the correlations of factors, the higher the tendency of the next day&#39;s return</code> is the central idea of using the factor score method to predict the future trend. Therefore, once we have done that for all the stocks that we’re monitoring in our candidate portfolio, we’ll be able to rank the stocks and buy the top N stocks that we perceive will generate a higher return than the others.</p><p>There are two ways of achieving this goal:</p><ol><li>Using linear regression</li><li>Using <a href="https://www.investopedia.com/terms/i/information-coefficient.asp">IC (Information Coefficient)</a> &amp; <a href="https://www.investopedia.com/terms/i/informationratio.asp">IR (Information Ratio)</a></li></ol><p>Linear regression is the most common way to be used in the factor score. However, there are many ways and theories to implement linear regression. Here, let’s use a much easier and simpler way to demonstrate the idea of the factor analysis. We are going to adopt IC/IR method as an example throughout this tutorial.</p><h1 id="Strategy-and-details"><a href="#Strategy-and-details" class="headerlink" title="Strategy and details"></a>Strategy and details</h1><p>Let’s start with detailing our strategy guidelines and define our question here. Using the composition of the S&amp;P 500 index as our candidates, we would like to build a portfolio that tracks the trend of S&amp;P 500, but in the meantime performs better than the S&amp;P 500 index. Here’s how to do it:</p><ol><li>Get the S&amp;P 500 index composition over time.</li><li>Select what factors we’re trying to exam against the score</li><li>Process the factor data.</li><li>Calculate the IC and IR to find out the relationship between the factors and dependent variables.</li><li>Calculate the factor scores</li><li>Check the results</li></ol><h2 id="Get-S-amp-P-500-index-composition-over-time"><a href="#Get-S-amp-P-500-index-composition-over-time" class="headerlink" title="Get S&amp;P 500 index composition over time."></a>Get S&amp;P 500 index composition over time.</h2><p>This part we have covered in <a href="https://mikelhsia.github.io/2021/02/15/2021-02-15-how2-snp500-historic-composition/">【How 2】 Vol. 4. How to produce the S&amp;P 500 Historical Components &amp; Changes</a></p><h2 id="Select-what-factors-we’re-trying-to-exam-against-the-score"><a href="#Select-what-factors-we’re-trying-to-exam-against-the-score" class="headerlink" title="Select what factors we’re trying to exam against the score"></a>Select what factors we’re trying to exam against the score</h2><p>Even though we have tones of factors in our arsenal, we’re not going to use them all.</p><p>Factors are simply objective data and they could have little or even zero correlation with the next day’s return. Just like in the happiness survey in our <a href="https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/">previous post</a>, that not every data in the survey would be highly related to the happiness of the people in the country. Probably the <code>Gender</code> column is meaningless as it’s not the major decisive factor whether people are happy or not. So selecting a defined factor set would be our fundamental assumption to interpret what factors really contribute to the next das return.</p><h2 id="Process-the-factor-data"><a href="#Process-the-factor-data" class="headerlink" title="Process the factor data"></a>Process the factor data</h2><p>Process the factor data to be used in the factor score. There are three steps to standardize our data:</p><h3 id="Winsorization-Removing-the-extreme-data"><a href="#Winsorization-Removing-the-extreme-data" class="headerlink" title="Winsorization (Removing the extreme data)"></a>Winsorization (Removing the extreme data)</h3><p>Winsorization would help us remove the extreme scenarios that affect our final ranking significantly. The blue dots over the line in the below diagram could be the results of unexpected incidents or news such as the <a href="https://smartasset.com/financial-advisor/gamestop-stock-price-wallstreetbets-reddit">GameStop short squeeze</a> incident not long ago. Therefore, we’d better remove them in order to better rank the stocks.<br><img data-src="/2021/02/27/2021-02-27-factor-analysis-4/ill1.png" class="" width="400"></p><h3 id="Industry-neutralization"><a href="#Industry-neutralization" class="headerlink" title="Industry neutralization"></a>Industry neutralization</h3><p>Industry neutralization removes the difference across industries. For example, the average market cap of the Technology industry in 2020 is around 1.24 billion, but the average market cap of the Energy industry is only 0.23 billion. Therefore, neutralize the industry impact would help us remove this inevitable biased data.</p><h3 id="Standardization"><a href="#Standardization" class="headerlink" title="Standardization"></a>Standardization</h3><p>When we investigate how does stock <code>abc</code> do on EPS 1.2 compares to the industry standard 0.8, which 0.4 difference. On the other hand, stock <code>xyz</code>‘s EPS 15.3 is 3.1 points away from its industry standard. Simply compare 0.4 with 3.1 will not be able to define how <code>abc</code> or <code>xyz</code> do in its own industry. So, Standardization meant to convert the raw data into standardized data.</p><div class="table-container"><table><thead><tr><th>-</th><th>abc</th><th>xyz</th></tr></thead><tbody><tr><td>EPS</td><td>1.2</td><td>15.3</td></tr><tr><td>Industry</td><td>Finance</td><td>Consumer goods</td></tr><tr><td>Industry EPS standard</td><td>0.8</td><td>12.2</td></tr><tr><td>Difference</td><td>+0.4</td><td>+3.1</td></tr><tr><td>Industry EPS standard deviation</td><td>0.2</td><td>2</td></tr><tr><td>Standardized score</td><td>0.4/0.2 = <strong>+2</strong></td><td>3.1/2 = <strong>+1.5</strong></td></tr></tbody></table></div><quote><center><i>So by looking at the standardized score, you can tell that actually stock `abc` does better than stock `xyz`</i></center></quote><h2 id="Calculate-the-IC-and-IR"><a href="#Calculate-the-IC-and-IR" class="headerlink" title="Calculate the IC and IR"></a>Calculate the IC and IR</h2><p><a href="https://www.investopedia.com/terms/i/information-coefficient.asp">Information coefficient</a> is to calculate the correlation between the factors and the next day’s return. Therefore, the higher the IC of the factor indicates that this factor would better help predict the next day’s return.</p><p><a href="https://www.investopedia.com/terms/i/informationratio.asp">Information Ratio</a> then stands for whether the IC is stable or not. If IR is high, then it means its IC is more stable and even better in terms of interpreting the change of the next day’s return.</p><script type="math/tex; mode=display">IR = \frac{IC}{standard\ deviation\ of\ IC}</script><p>The reason we calculating the IR is that we need to evaluate the impact on the factor to the next day’s price. So once we are able to get a series of IR, we calculate its weight among all IR in order to know whether this factor is strong and stable enough.</p><h2 id="Get-the-factor-scores"><a href="#Get-the-factor-scores" class="headerlink" title="Get the factor scores"></a>Get the factor scores</h2><p>By having the IR weight series, we can now multiply them with the factor itself, sum them up, and come out of a score to stand for the quality and traits of this stock.</p><h2 id="Check-the-results"><a href="#Check-the-results" class="headerlink" title="Check the results"></a>Check the results</h2><p>As our goal here in this post is to use the factor score to find out the profitable stocks among the S&amp;P 500 index composition stocks, we can examine how effective our factor score work by the following steps:</p><ol><li>Sort the stocks by factor score</li><li>Split the stocks into N groups that contain an equal number of stocks.</li><li>Add up the daily return in the same group and compare it to the other groups over time.</li></ol><p>If the factor set that we define is good, then we expect to see the trend of the accumulate daily return in each group diverge as much as possible as below line chart:<br><img data-src="/2021/02/27/2021-02-27-factor-analysis-4/good_result.png" class="" width="500"></p><p>On the other hand, if our factor set is not good enough to interpret the next day’s return, we’ll see the cumulated daily return of each group tangled together. This means that our factor set would not be able to separate the good stocks from bad stocks.<br><img data-src="/2021/02/27/2021-02-27-factor-analysis-4/bad_result.png" class="" width="500"></p><p>Finally, we might need to go through a various combinations of factors to find out what factor set possesses the capability to rate the stocks, we need to execute the steps from 3~6 multiple times. The effectiveness of the factors would also be voided due to the macroeconomic changes over time. Once we are able to find that factor set, then we can proceed to the next step to get more detail by comparing our portfolio performance against the benchmark portfolio performance.</p><h1 id="Notebook-for-reference"><a href="#Notebook-for-reference" class="headerlink" title="Notebook for reference"></a>Notebook for reference</h1><iframe src="https://nbviewer.jupyter.org/github/mikelhsia/Python/blob/master/jupyter_notebook_for_blogs/vol_4_factor_score.ipynb" width="100%" height="1200" frameborder="0"></iframe>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/02/27/2021-02-27-factor-analysis-4/cover.jpg&quot; class=&quot;&quot; width=&quot;500&quot;&gt;
&lt;p&gt;&lt;em&gt;Previous reading&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/&quot;&gt;&lt;em&gt;【Factor analysis】 Vol. 1. Introduction the idea of factor analysis&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/&quot;&gt;&lt;em&gt;【Factor analysis】 Vol. 2. Get ready - preparing and cleaning data&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mikelhsia.github.io/2021/02/23/2021-02-11-factor-analysis-3/&quot;&gt;【Factor analysis】 Vol. 3. Construct your own factor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After we have collected all the fundamental data and have produced the factor data we need, how we can utilize them to compete with the market and to beat the benchmark return?&lt;/p&gt;
&lt;p&gt;One of the common methods would be &lt;strong&gt;factor score&lt;/strong&gt;. In this post, we’re going to describe and implement this factor score method to see how we can rate the stocks that have more potential to rise than the others in the future.&lt;br&gt;</summary>
    
    
    
    <category term="Factor Analysis" scheme="http://mikelhsia.github.io/categories/Factor-Analysis/"/>
    
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>【Factor analysis】 Vol. 3. Construct your own factor</title>
    <link href="http://mikelhsia.github.io/2021/02/23/2021-02-11-factor-analysis-3/"/>
    <id>http://mikelhsia.github.io/2021/02/23/2021-02-11-factor-analysis-3/</id>
    <published>2021-02-23T12:04:16.000Z</published>
    <updated>2021-02-23T14:54:08.855Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/02/23/2021-02-11-factor-analysis-3/cover.jpg" class="" width="500"><p><em>Previous reading</em></p><ul><li><a href="https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/"><em>【Factor analysis】 Vol. 1. Introduction the idea of factor analysis</em></a></li><li><a href="https://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/"><em>【Factor analysis】 Vol. 2. Get ready - preparing and cleaning data</em></a></li></ul><p>After we got the fundamental data we needed from any data source you preferred or paid as in the previous post, we’re now going to generate <strong>factors</strong> to be used in the factor analysis.</p><a id="more"></a><h1 id="What-is-factor"><a href="#What-is-factor" class="headerlink" title="What is factor?"></a>What is factor?</h1><p>Do you still remember the survey data that was collected by the Minister in the story mentioned in our first post in the series?</p><div class="table-container"><table><thead><tr><th><strong>Degree of Happiness (0~100)</strong></th><th>Gender</th><th>Age</th><th>Occupation</th><th>Location</th><th>Income</th><th>Marital Status</th><th>Number of social gathering per week</th></tr></thead><tbody><tr><td>60</td><td>male</td><td>28</td><td>miner</td><td>village A</td><td>$2,000</td><td>single</td><td>2</td></tr><tr><td>80</td><td>female</td><td>32</td><td>housewife</td><td>village B</td><td>$100</td><td>married</td><td>5</td></tr><tr><td>77</td><td>male</td><td>63</td><td>retired</td><td>village C</td><td>$500</td><td>divorced</td><td>12</td></tr><tr><td>58</td><td>female</td><td>22</td><td>OL</td><td>village A</td><td>$1,300</td><td>in a relationship</td><td>7</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table></div><p>The objective we’re trying to solve here is to understand how happy the people in the country are. Then the other data such as <em>gender, age, occupation, location, …</em> are what we called <strong>factors</strong>. Factors are quantified traits that we use to describe the objective. Take the survey data above as an example, you might come to the conclusion that the people from a certain location would be happier than the people from another location, or people whose income level is higher tend to be happier than people whose income level is lower. By combining all the influences of all factors, then we’ll get this final formula as below:</p><script type="math/tex; mode=display">Degree\ of\ happiness = b_1 * Gender + b_2 * Age + b_3 * Occupation ... + b_n * Number\ of\ social\ gathering\ per\ week  + \alpha</script><p><em>where</em></p><ul><li><em>$b_1, b_2, … b_n$ are coefficients, could be any natural number (positive/negative)</em></li><li>*$\alpha$ stands for the part of degree of happiness that cannot be explained by given factors</li></ul><h1 id="Common-factors-in-the-stock-market"><a href="#Common-factors-in-the-stock-market" class="headerlink" title="Common factors in the stock market"></a>Common factors in the stock market</h1><p>The application of factor analysis to the stock market would be similar, and we have explained this in the <a href="https://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/">first post in this series</a>. The formula would look like this:</p><script type="math/tex; mode=display">today's price change(\%) = b_1 * yesterday\ close\ price + b_2 * yesterday\ trading\ volume + b_3 * yesterday\ ROE + ... + \alpha</script><p>The existing factors can be categorized but not limited to the below types:</p><ul><li>Fundamental factors<ul><li>Fundamental factors are extracted directly from the company report. They directly present how the company operates from the official accounting book.</li><li>Ex: <em>net working capital, total profit, EBIT, EBITDA, total asset, total debt, … etc.</em></li></ul></li><li>Quality factors<ul><li>Quality factors are derived from fundamental factors to represent the ability to make a profit for a company. The more profit a company can make, the better the quality of this company is the central assumption of this type of factors.</li><li>Ex: <em>net profit ratio, debt to equity ratio, net profit to operate revenue TTM, … etc.</em></li></ul></li><li>Momentum factors<ul><li>The momentum factors is a relatively new type of factor comparing to the rest. According to the explanation of financial behavior, the high and low of this factor are actually generated by the behavior of the majority of the investors at the moment. In other words, it implicitly explains the <strong>trend</strong> of the stock price.</li><li>Ex: <em>60-day price rate of change, turnover rate, … etc.</em></li></ul></li><li>Technical factors<ul><li>This type of factor is produced from technical analysis and theory from scholars. The <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/#more">MACD indicator</a> that we introduced before is also one of the technical factors.</li><li>MACD indicator, Bollinger bands, EMAC indicator, KDJ indicator, … etc.</li></ul></li><li>Alternative factors<ul><li>As the realm of machine learning started to thrive these years, there are more and more alternative data that we can utilize and analyze. From the area of the oilfield captured by satellite to every single tweet that tweets about certain stock on Twitter, they can all be captured and processed to quantified indicators to represent the change of emotion/economy over time.</li><li>Ex: <em>Twitter sentiment data</em></li></ul></li></ul><h1 id="How-we-can-get-the-factors-above"><a href="#How-we-can-get-the-factors-above" class="headerlink" title="How we can get the factors above?"></a>How we can get the factors above?</h1><ul><li>Quantitative platforms would provide their proprietary tool or service for professional investors to access.<ul><li><a href="https://www.joinquant.com/default/index/sdk">JQData</a> is a China-based service that allows you to download the local python package for you to fetch data over the internet.</li></ul></li><li>Paid data sources are also accountable services that provide a wild range of alternative data as well.<ul><li><a href="https://www.quandl.com/">Quandl</a> is famous for aggregating APIs from various data brokers.</li><li><a href="https://www.factset.com/">Factset</a> is a traditional data broker since 1978, and big companies such as <strong><em>Barclay</em></strong> and <strong><em>J.P Morgan</em></strong> are also using their service.</li></ul></li><li>Build one yourself. You can download the raw financial data from anywhere and build the factors upon it.</li></ul><p>Below, I’m going to quickly demonstrate the third way and build the factor data with the data we downloaded in <a href="https://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/">the previous post</a>.</p><h1 id="Notebook-Build-your-own-factors-from-the-downloaded-data"><a href="#Notebook-Build-your-own-factors-from-the-downloaded-data" class="headerlink" title="Notebook: Build your own factors from the downloaded data"></a>Notebook: Build your own factors from the downloaded data</h1><iframe src="https://nbviewer.jupyter.org/github/mikelhsia/Python/blob/master/jupyter_notebook_for_blogs/vol_3_construct_your_own_factors.ipynb" width="100%" height="1200" frameborder="0"></iframe>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/02/23/2021-02-11-factor-analysis-3/cover.jpg&quot; class=&quot;&quot; width=&quot;500&quot;&gt;
&lt;p&gt;&lt;em&gt;Previous reading&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/&quot;&gt;&lt;em&gt;【Factor analysis】 Vol. 1. Introduction the idea of factor analysis&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/&quot;&gt;&lt;em&gt;【Factor analysis】 Vol. 2. Get ready - preparing and cleaning data&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After we got the fundamental data we needed from any data source you preferred or paid as in the previous post, we’re now going to generate &lt;strong&gt;factors&lt;/strong&gt; to be used in the factor analysis.&lt;/p&gt;</summary>
    
    
    
    <category term="Factor Analysis" scheme="http://mikelhsia.github.io/categories/Factor-Analysis/"/>
    
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>【How 2】 Vol. 4. How to produce the S&amp;P 500 Historical Components &amp; Changes</title>
    <link href="http://mikelhsia.github.io/2021/02/15/2021-02-15-how2-snp500-historic-composition/"/>
    <id>http://mikelhsia.github.io/2021/02/15/2021-02-15-how2-snp500-historic-composition/</id>
    <published>2021-02-15T05:59:41.000Z</published>
    <updated>2021-06-18T09:54:10.646Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/02/15/2021-02-15-how2-snp500-historic-composition/cover.jpg" class="" width="250"><p>We’ve talked about the definition of <strong>survivor bias</strong> and the impact if we didn’t notice and resolve it in <a href="https://mikelhsia.github.io/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/">【How 2】 Vol. 3. How to produce a quality tradable securities for backtesting</a>. One of the most critical topics that we need to address is to get the accurate list of components of your target portfolio over time when developing your investing strategy. Therefore, I’m gonna use S&amp;P 500 Index as the example to go through this post, and we’re gonna use the result to the later series in <a href="https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/">【Factor analysis】 Vol. 1. Introduction the idea of factor analysis</a>.</p><a id="more"></a><iframe src="https://nbviewer.jupyter.org/github/mikelhsia/Python/blob/master/jupyter_notebook_for_blogs/S%26P500_history.ipynb" width="100%" height="1200" frameborder="0"></iframe>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/02/15/2021-02-15-how2-snp500-historic-composition/cover.jpg&quot; class=&quot;&quot; width=&quot;250&quot;&gt;
&lt;p&gt;We’ve talked about the definition of &lt;strong&gt;survivor bias&lt;/strong&gt; and the impact if we didn’t notice and resolve it in &lt;a href=&quot;https://mikelhsia.github.io/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/&quot;&gt;【How 2】 Vol. 3. How to produce a quality tradable securities for backtesting&lt;/a&gt;. One of the most critical topics that we need to address is to get the accurate list of components of your target portfolio over time when developing your investing strategy. Therefore, I’m gonna use S&amp;amp;P 500 Index as the example to go through this post, and we’re gonna use the result to the later series in &lt;a href=&quot;https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/&quot;&gt;【Factor analysis】 Vol. 1. Introduction the idea of factor analysis&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="How2" scheme="http://mikelhsia.github.io/categories/How2/"/>
    
    
    <category term="Backtesting" scheme="http://mikelhsia.github.io/tags/Backtesting/"/>
    
  </entry>
  
  <entry>
    <title>【Factor analysis】 Vol. 2. Get ready - preparing and cleaning data</title>
    <link href="http://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/"/>
    <id>http://mikelhsia.github.io/2021/02/08/2021-02-03-factor-analysis-factors/</id>
    <published>2021-02-08T12:04:16.000Z</published>
    <updated>2021-02-08T12:41:34.638Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/02/08/2021-02-03-factor-analysis-factors/cover.png" class="" width="400"><p>In the last post <a href="https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/#more">Vol. 1. Introduction the idea of factor analysis</a>, we have introduced the concept of factor analysis. There are various ways to implement the factor analysis against the problem you’re trying to resolve or explain. However, any of them would require proper data to be provisioned.</p><p>Just like the cover image that I used in this post implies. All the top-tiered chefs know how to make good dishes as their skills are polished and proficient. In the end, the quality of the ingredients matter. That’s why it’s essential to acquire the right data in the right way, and then you’ll have the solid foundation to proceed with the analysis.</p><a id="more"></a><p>I’m putting together the functions and processes in the below notebook. Hope this would help you understand what kind of data we need and what we need to pay attention to while fetching the data we need.</p><iframe src="https://nbviewer.jupyter.org/github/mikelhsia/Python/blob/master/jupyter_notebook_for_blogs/vol_2_preparing_data.ipynb" width="100%" height="1200" frameborder="0"></iframe>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/02/08/2021-02-03-factor-analysis-factors/cover.png&quot; class=&quot;&quot; width=&quot;400&quot;&gt;
&lt;p&gt;In the last post &lt;a href=&quot;https://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/#more&quot;&gt;Vol. 1. Introduction the idea of factor analysis&lt;/a&gt;, we have introduced the concept of factor analysis. There are various ways to implement the factor analysis against the problem you’re trying to resolve or explain. However, any of them would require proper data to be provisioned.&lt;/p&gt;
&lt;p&gt;Just like the cover image that I used in this post implies. All the top-tiered chefs know how to make good dishes as their skills are polished and proficient. In the end, the quality of the ingredients matter. That’s why it’s essential to acquire the right data in the right way, and then you’ll have the solid foundation to proceed with the analysis.&lt;/p&gt;</summary>
    
    
    
    <category term="Factor Analysis" scheme="http://mikelhsia.github.io/categories/Factor-Analysis/"/>
    
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>【Factor analysis】 Vol. 1. Introduction the idea of factor analysis</title>
    <link href="http://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/"/>
    <id>http://mikelhsia.github.io/2021/01/31/2021-01-31-factor-analysis/</id>
    <published>2021-01-31T02:04:16.000Z</published>
    <updated>2021-02-27T04:29:43.101Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2021/01/31/2021-01-31-factor-analysis/cover.jpeg" class="" width="400"><p>In previous posts, we’ve been talking about the <a href="https://www.investopedia.com/terms/m/momentum_investing.asp"><strong>momentum strategies</strong></a> like <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/#more">MACD strategy</a> and <a href="https://mikelhsia.github.io/2020/12/26/20202-12-26-turtle-strategy/#more">turtle strategy</a>. These are the standard strategies based on the hypothesis that when the environmental variables, such as price moving average, technical indicators, and other subjective numbers, meet certain requirements, the stock price would follow the trends and continue to go up/down. The scholars believe that the momentum would continue pushing the stock price further if such investor confidence has been established.</p><p>Other than that, there is also another methodology out there, called <strong>factor analysis</strong>. To explain this in detail, I’m going to separate this huge topic into several parts: <a id="more"></a></p><ol><li>Introduction of the idea of factor analysis</li><li>Get ready: preparing and cleaning data</li><li>Construct your own factors</li><li>Factor scores</li><li>Performance analysis</li></ol><h1 id="What-is-factor-analysis"><a href="#What-is-factor-analysis" class="headerlink" title="What is factor analysis"></a>What is factor analysis</h1><p>I’m not going to intimidate you with lengthy and smart-ass sentences with tons of big words. Otherwise, I’m going to drive away the last group of the audience that I have left. Let me try to tell you a story then you’ll get to know the objective of factor analysis.</p><h1 id="Story-starts-here"><a href="#Story-starts-here" class="headerlink" title="Story starts here"></a>Story starts here</h1><h2 id="Long-long-time-ago…"><a href="#Long-long-time-ago…" class="headerlink" title="Long long time ago…"></a>Long long time ago…</h2><blockquote><img data-src="/2021/01/31/2021-01-31-factor-analysis/kingdom.png" class="" width="300"><p>In a small country somewhere on the earth, there’s a king who is the kindest and the most merciful one this country ever had. The kind king has ruled this country for decades.<br>One day, an idea struck the king: after all the hard work my team and I have done, are my people feel happy about our doings? And how are we going to keep or improve the level of happiness of our people? So the king has assigned this task to the Minister of the Realm.</p><p>Easy enough, the Minister has designed a survey to investigate the degree of happiness of the people. They have collected the following information of every individual in the realm: <strong>gender, age, occupation, location, income, marital status, and the number of social gatherings per week</strong>. At the bottom of the survey, the Minister also requests each individual to evaluate the degree of happiness of himself/herself. He used Excel to put together all the survey and would like to present this sheet to the king. Here’s how this excel sheet looks like:</p><div class="table-container"><table><thead><tr><th><strong>Degree of Happiness (0~100)</strong></th><th>Gender</th><th>Age</th><th>Occupation</th><th>Location</th><th>Income</th><th>Marital Status</th><th>Number of social gathering per week</th></tr></thead><tbody><tr><td>60</td><td>male</td><td>28</td><td>miner</td><td>village A</td><td>$2,000</td><td>single</td><td>2</td></tr><tr><td>80</td><td>female</td><td>32</td><td>housewife</td><td>village B</td><td>$100</td><td>married</td><td>5</td></tr><tr><td>77</td><td>male</td><td>63</td><td>retired</td><td>village C</td><td>$500</td><td>divorced</td><td>12</td></tr><tr><td>58</td><td>female</td><td>22</td><td>OL</td><td>village A</td><td>$1,300</td><td>in a relationship</td><td>7</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table></div><img data-src="/2021/01/31/2021-01-31-factor-analysis/queue.png" class="" width="500"></blockquote><p><br><br>This is what we called <strong>“data collection”</strong>. We collect abundant data regarding a question or a specific phenomenon that we’re trying to understand and explain. So here the question we’re trying to understand is that how happy the people in the country are, and how we can further increase the satisfaction of the people by increasing income level, promoting more social events among people, or even by adding a moat. All we need to do is to dig into the data and discover valuable and meaningful interpretation.<br><br></p><h2 id="The-next-step…"><a href="#The-next-step…" class="headerlink" title="The next step…"></a>The next step…</h2><blockquote><p><em>At the home of the Minister…</em></p><p>Minister: Ummmm….<br><img data-src="/2021/01/31/2021-01-31-factor-analysis/thinker.jpg" class="" width="250"></p><p>The Minister was contemplating how to put together an actionable plan and to present this to the king. He can calculate the average degree of happiness of everyone and tell the king how happy his people are? That probably gonna cost him his job if he presents this sloppy report. But what else could he get from this sheet full of numbers?</p><p>The son of the Minister, who majored in statistics in college, happened to hear his father’s moaning. He patted on his father’s shoulder and told his father that two magic words would save his brain juice: <strong>“Factor Analysis”</strong></p></blockquote><p>The foundation of the factor analysis is simple and can be summarized into this one-line formula:</p><script type="math/tex; mode=display">y = b_1x_1 + b_2x_2 + ... + b_nx_n + \alpha</script><p>This is the formula that we all are acquainted with when we’re in junior and senior high. But now we’re giving the actual meaning to this formula. The degree of happiness is the <strong>dependent variable</strong>, and the rest are <strong>independent variables</strong> or <strong>“factors”</strong>. After mapping the terminology, it would make this formula more sense to you:</p><script type="math/tex; mode=display">Degree\ of\ happiness = b_1 * Gender + b_2 * Age + b_3 * Occupation ... + b_n * Number\ of\ social\ gathering\ per\ week  + \alpha</script><p><em>where</em></p><ul><li><em>$b_1, b_2, … b_n$ are coefficients, could be any natural number (positive/negative)</em></li><li><em>$\alpha$ stands for the part of degree of happiness that cannot be explained by given factors</em></li></ul><p>Therefore, if we can decipher these coefficients in the formula, we’re able to find out which factor contributes the most to the level of happiness of the people in this country. For example, let’s assume the coefficient of income level is 0.008. This indicating that for every $1,000 extra income you gain, your degree of happiness gain 8 points.<br><br></p><h2 id="More-work-to-do-then-the-happy-ending"><a href="#More-work-to-do-then-the-happy-ending" class="headerlink" title="More work to do, then the happy ending"></a>More work to do, then the happy ending</h2><blockquote><p>Minister: Cool! Finally, my money paid off….., I mean, finally you’ve learned something useful. But here comes the question, how can we get those coefficients from the data we have collected from the survey?<br><img data-src="/2021/01/31/2021-01-31-factor-analysis/edu.jpg" class="" width="350"></p><p>The son of the Minister showed him several matured tools existing in the market. They fed the data into the program and get the approximated numbers of those coefficients. The Minister is very happy to present this new finding to the king…</p></blockquote><p>That’s the end of the story. After all, we’re not writing a novel here. At least we get the general idea of what factor analysis and usage from the story, hopefully.</p><h1 id="Factor-analysis-application-of-stock-market"><a href="#Factor-analysis-application-of-stock-market" class="headerlink" title="Factor analysis application of stock market"></a>Factor analysis application of stock market</h1><p>Factor analysis not only can be applied to survey analysis, but also to the post-marketing campaign, financial model, business plan, online ads traffic, and even the mobile app traffic analysis. As these events and incidents have the tendency of having one major objective and collecting lots of data according to the inputs and outputs, they would be the perfect subjects to apply factor analysis and understand what happened after the program launched. Once we would be able to condense into the formula as we described above, it would give us the knowledge to interpret the collected data and probability to predict the future.</p><p>Let’s step back and take a look at what would happen if we apply factor analysis to the stock market. We now use daily return as our dependent variable, and we get to choose any indicator that could potentially contribute to the stock growth or decline of the stock price. In a nutshell, we’re trying to understand how much of the price change of today can be explained by the picked factors yesterday(stock price, trading volume, or company-wise fundamental…). So in the end, the formula would look like this:</p><script type="math/tex; mode=display">today's price change(in\ \%) = b_1 * yesterday\ close\ price + b_2 * yesterday\ trading\ volume + b_3 * yesterday\ ROE + \alpha</script><p>By having this formula as the result of you performing factor analysis, you’ll be able to:</p><ul><li>explain the historic price movement of the stock market and become a famous scholar.</li><li>or predict tomorrow’s stock price using historic data and make a profit out of it.</li></ul><p>How exciting this could be!! But be aware, that factor analysis itself is merely deducting and extrapolating the coefficients through the data we’ve been given. There are pitfalls we need to pay attention to, such as</p><ol><li>biased data were provided</li><li>duplicated data or missing data</li><li>false assumption</li><li>overfitting to an optimal situation to maximize the return</li><li>simply luck</li></ol><p>So don’t get too excited when you achieved a good result after performing factor analysis. You need to further exam each step over and over again until you inspect this model from all angles.</p><hr><h1 id="That’s-all"><a href="#That’s-all" class="headerlink" title="That’s all"></a>That’s all</h1><p>That’s pretty much about the introduction of what factor analysis. I hope I make it clear enough, and we’ll start walking through the implementation step-by-step starting the next series.</p>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2021/01/31/2021-01-31-factor-analysis/cover.jpeg&quot; class=&quot;&quot; width=&quot;400&quot;&gt;
&lt;p&gt;In previous posts, we’ve been talking about the &lt;a href=&quot;https://www.investopedia.com/terms/m/momentum_investing.asp&quot;&gt;&lt;strong&gt;momentum strategies&lt;/strong&gt;&lt;/a&gt; like &lt;a href=&quot;https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/#more&quot;&gt;MACD strategy&lt;/a&gt; and &lt;a href=&quot;https://mikelhsia.github.io/2020/12/26/20202-12-26-turtle-strategy/#more&quot;&gt;turtle strategy&lt;/a&gt;. These are the standard strategies based on the hypothesis that when the environmental variables, such as price moving average, technical indicators, and other subjective numbers, meet certain requirements, the stock price would follow the trends and continue to go up/down. The scholars believe that the momentum would continue pushing the stock price further if such investor confidence has been established.&lt;/p&gt;
&lt;p&gt;Other than that, there is also another methodology out there, called &lt;strong&gt;factor analysis&lt;/strong&gt;. To explain this in detail, I’m going to separate this huge topic into several parts:</summary>
    
    
    
    <category term="Factor Analysis" scheme="http://mikelhsia.github.io/categories/Factor-Analysis/"/>
    
    
    <category term="Research" scheme="http://mikelhsia.github.io/tags/Research/"/>
    
  </entry>
  
  <entry>
    <title>Experiment of Turtle trading strategy</title>
    <link href="http://mikelhsia.github.io/2020/12/26/2020-12-26-turtle-strategy/"/>
    <id>http://mikelhsia.github.io/2020/12/26/2020-12-26-turtle-strategy/</id>
    <published>2020-12-26T05:11:59.000Z</published>
    <updated>2021-08-27T17:23:33.509Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Last post in 2020. See you, 2020. See you, in 2021.</p></blockquote><img data-src="/2020/12/26/2020-12-26-turtle-strategy/cover.jpg" class="" width="400"><p>The Turtle Traders experiment was conducted in the early 1980s by <strong>Richard Dennis</strong> and <strong>William Eckhardt</strong> to see whether anyone could be taught how to make money in trading. Therefore, the trading strategy that has been taught to these apprentices is named after this experiment as “<strong>Turtle Strategy</strong>“.</p><p>In this post, we’re going to quickly go through the turtle strategy itself, and I’m going to experiment with a few things against the backtesting platform that I’m checking out recently: <a href="https://joinquant.com"><strong>JoinQuant</strong></a>.</p><a id="more"></a><p>This post will be split into below sections:</p><ul><li>Quick intro</li><li>Objectives</li><li>Backtesting</li><li>Summary</li><li>Reference</li><li>Code Reference</li></ul><p>Here is the Chinese version of this post in case anyone is interested: <a href="https://www.joinquant.com/view/community/detail/30796">经典海龟策略-股票多标的-短线趋势长线追击双系统</a>.</p><h1 id="Quick-intro"><a href="#Quick-intro" class="headerlink" title="Quick intro"></a>Quick intro</h1><p>I’m going to piggyback the existing posts so I don’t have to repeat the lengthy history of turtle experiment here. You can quickly read through the below posts to get an idea of what turtle strategy is about:</p><ul><li><a href="https://analyzingalpha.com/turtle-trading">Analyzing alpha - turtle trading</a></li><li><a href="https://medium.com/datadriveninvestor/making-money-with-algo-trading-for-dummies-the-turtle-trading-agent-3b1febe685df">Medium reading - turtle trading</a></li></ul><p>In short, the turtle strategy is a momentum strategy that uses the <a href="https://www.investopedia.com/terms/d/donchianchannels.asp"><strong>Donchian channel</strong></a> as the indicator to buy when we spotted the bullish trend and to sell when the trend goes bearish. Turtle strategy also builds two similar systems to capture both strong and weak movements, along with an internal mechanism to manage the risk of loss of capital to 2% in one trading day.</p><h1 id="Objectives"><a href="#Objectives" class="headerlink" title="Objectives"></a>Objectives</h1><p>Implementing the turtle strategy is not a new thing to the quant industry. Therefore, I would like to instead experiment with a few additional things that might benefit the process of the quant research:</p><ul><li>Most of the quant strategies that you can see in the quant-trading backtest platforms scattered their function definitions and variables all over the places. I’m gonna adopt the <code>object-oriented programming</code> concept in this implementation to increase the reusability and readability of the code.</li><li>By instantiating the instance of <code>class TurtleSystemManager()</code>, we persist the data in this instance across the entire backtesting time span.</li><li>To decrease the complexity of the positions, capital, and available cash of these two systems in one algorithm trading script, we use <code>context.subportfolios</code> in JoinQuant to simplify the logic and codes.</li></ul><h1 id="Backtesting"><a href="#Backtesting" class="headerlink" title="Backtesting"></a>Backtesting</h1><p>The setup in my version of implementation are:</p><ul><li>Run every 15 minutes to calculate and inspect the trading signals</li><li>The stock pool updates each month with the latest fundamental data</li><li>The trading target in the original turtle strategy is the stock futures, but we’re looking at the stocks in China stock market. So we need to make several adjustments accordingly:<ul><li><strong>risk_ratio</strong><ul><li>The leverage_ratio in original turtle strategy is 10 while trading stock futures. Here we make it <strong>0.1</strong> so that our greatest loss per day is limited to 0.1%, and also we’re able to buy more stocks.</li></ul></li><li><strong>capacity_per_system</strong><ul><li>The stock pool that we update each month contains more than 20 stocks. As turtle strategy is about buying positions at several prices along with the price soar (vise versa in the sell/short side), we place a limit of maximum of 8 stocks per system to make sure we place our capital in the stocks we preferred other than spreading the capital in dozens of stocks.</li></ul></li></ul></li><li>We use <code>40-day moving average &gt; 200-day moving average</code> as the secondary trading signal to confirm the bullish trend.</li><li>Apply <a href="https://medium.com/@Weeknight_BTC/donchian-channels-catching-the-trend-with-the-four-week-rule-77032c6a2155">Donchian middle line</a> to replace the Donchian low watermark as the new exit signal.</li><li>As the China stock market policy prevents us from selling the positions that we buy on the same day, we apply another rule in our strategy that we need to hold the stock at least till the next available bar (which is the next day). See detail in <a href="https://www.joinquant.com/view/community/detail/b4843ea0026a466190f6f58b50eae50c">海龟策略应用在中国A股（股票）里的缺陷讨论（按分钟回测）</a>.</li></ul><p>And here are the results of the backtesting of the turtle strategy:</p><h2 id="Backtest-1"><a href="#Backtest-1" class="headerlink" title="Backtest 1"></a>Backtest 1</h2><p><strong>Setup:</strong><br>Run the strategy once per day, and no specific sorting rules in the stock pool.</p><p><strong>Result:</strong><br><img data-src="/2020/12/26/2020-12-26-turtle-strategy/daily.png" class="" width="600"></p><p><strong>Comment:</strong><br>Ummm… The performance is fairly poor but expected. We trade only once per day on the signal without monitoring the price movement for the rest of the day. It is pretty much like you buy a stock when you see the right price on the TV, and then you go play with your cats and dogs until the next day. If any trader can make money like this, anyone on earth can be a trader and no one lose money in the market.</p><h2 id="Backtest-2"><a href="#Backtest-2" class="headerlink" title="Backtest 2"></a>Backtest 2</h2><p><strong>Setup:</strong><br>Run every 15 minutes, no specific sorting rules in the stock pool, and use <code>daily</code> close price to build the 40-day and 200-day moving average.</p><p><strong>Result:</strong><br><img data-src="/2020/12/26/2020-12-26-turtle-strategy/15m+40MA&200MA(daily).png" class="" width="600"></p><p><strong>Comment:</strong><br>The risk control is stronger when you monitor the stock movements every 15 minutes, and you’ll be able to control the daily loss within <code>2N</code> as instructed in the turtle experiment. As for the upward trend, the 15-minute interval also helps the program more accurately capture the entry signal to gain profit. However, the log messages also reveal that there are several times that you won’t be able to close your positions on the day. This represents that your position is exposed outside the risk control management system, causing a tremendous loss when the stock price dropping.</p><h2 id="Backtest-3"><a href="#Backtest-3" class="headerlink" title="Backtest 3"></a>Backtest 3</h2><p><strong>Setup:</strong><br>Run every 15 minutes, no specific sorting rules in the stock pool, and use <code>15-minute</code> close price to build the 40-day and 200-day moving average.</p><p><strong>Result:</strong><br><img data-src="/2020/12/26/2020-12-26-turtle-strategy/15m+40MA&200MA(15minutes).png" class="" width="600"></p><p><strong>Comment:</strong><br>Urgh….. I thought if I increase the granularity of the secondary indicator (40MA &gt; 200MA) from 1 day to 15 minutes, the more accurate entry signals and more profit would be generated. By looking at the diagrams below, more signals do generate as the available cash is lower in the 15-minute scenario.<br><img data-src="/2020/12/26/2020-12-26-turtle-strategy/day_and_min_compare.png" class="" width="600"><br>However, from the log messages you’ll notice that due to the limitation of the China stock market mentioned above, that there are risks that you buy the stock in the morning but things turned sour in the afternoon. Then all you can do is to look at the price go south and sweating all over your face. So we can kind of concluding that using <code>daily</code> close price would be a mean of <strong>smoothing</strong> the data to avoid the zig-zag on price movement.</p><h2 id="Backtest-4"><a href="#Backtest-4" class="headerlink" title="Backtest 4"></a>Backtest 4</h2><p><strong>Setup:</strong><br>Run every 15 minutes, sort and rank the stock pool monthly, and use <code>daily</code> close price to build the 40-day and 200-day moving average.</p><p><strong>Result:</strong><br><img data-src="/2020/12/26/2020-12-26-turtle-strategy/15m+40MA&200MA(daily)+stockpicking.png" class="" width="600"></p><p><strong>Comment:</strong><br>According to what has been described in the book of turtle strategy and the characteristics of volatility of future itself, I sorted and ranked the stocks in Shanghai Shenzhen 300 index in order to identify the stocks that have higher profitability than the others. The rules and the factors that I used are as follow:</p><ul><li><strong>goods_sale_and_service_to_revenue</strong>: Of course the sales revenue should represent a higher percentage in the total revenue income, indicating the major business is doing great.</li><li><strong>peg_ratio</strong>: A ratio to replace the traditional pe_ratio as Peter Lynch suggested. We’re looking at under-estimated stocks(omitting the stocks that peg_ratio is negative).</li><li><strong>debt_to_equity_ratio</strong>: The less debt the better.</li><li><strong>FCF (Free Cash Flow)</strong>: The more free cash flow the better.</li><li><strong>turnover_ratio</strong>: Turtle strategy suggests us to target the markets that have a higher turnover ratio as in essence, turtle strategy is still a momentum strategy that looks for stocks that have high liquidity.</li><li><strong>pb_ratio</strong>: Also, we need to find stocks that are underestimated.</li></ul><p>I was hoping that my petty trick would work and make the portfolio return better off. Sadly, it didn’t.</p><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>Even though the backtesting results above are not promising nor profitable for us to proceed to live trading, the objectives of this experiment have been achieved. We can use an object-oriented programming way of coding style inside these backtesting platforms. By doing so, the code can be reused when we implement our own automatic trading script later, reducing the time to rewrite everything the second time.</p><p>Other than that, we have also identified some limitations of running turtle strategy in the China stock market:</p><ol><li>The China stock market has the policy that restricts day-trading (selling the stocks that you purchased that day), leaving the risk of our positions uncontrolled.</li><li>One lot in China stock market represents 100 shares. Any number of shares that are under 100 are not able to be purchased. This would raise the bar of purchasing stocks whose price are higher as we need to relocate our capital to several stocks in the strategy.</li><li>Monitoring and trading several stocks in one turtle strategy is not preferable since it increases the complexity of managing positions during both bullish and bearish trend.</li></ol><p>But there are other thoughts that we still can extend and develop upon the turtle strategy we built:</p><ol><li>We can see that the Donchian channel in turtle strategy is a lag indicator, meaning the momentum might have already passed when our indicators tell us to buy or sell. Therefore we might be able to switch to another indicator such as MACD or RSI so that we can spot the buy/sell opportunities in a quicker fashion.</li><li>We can also reverse the signals to buy when we see sell signals and to sell when we see buy signals. This means that we’re going to use the turtle strategy as a <code>mean reversion strategy</code> instead of the original <code>momentum strategy</code>.</li></ol><p>To summarize, this strategy is not going toward the live trading stage in the short run. The code can only be used as a template or reference for anyone here to implement their version of the turtle system by overwriting the detail in each class function.</p><p>Enjoy! Cheers!</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul><li><a href="https://www.joinquant.com/post/1401">【量化课堂】海龟策略</a></li><li><a href="https://www.joinquant.com/view/community/detail/284a9688a58e0112b3bad8c1283548bc">海龟策略精讲</a></li><li><a href="https://github.com/mikelhsia/quantitative-research/files/5650936/the_original_turtle_trading_rules.pdf">The Original Turtle Trading Rules</a></li><li><a href="https://www.businessinsider.com/turtle-trading-rules-trend-following-investing-based-on-20-amp-55-day-highs-2011-8">Turtle trading rules trend-following investing based on 20 amp 55-day highs</a></li><li><a href="https://baijiahao.baidu.com/s?id=1672154028841339288&amp;wfr=spider&amp;for=pc">唐奇安通道</a></li><li><a href="https://zhuanlan.zhihu.com/p/99266983">增强版唐奇安通道策略</a></li></ul><h1 id="Code-Reference"><a href="#Code-Reference" class="headerlink" title="Code Reference"></a>Code Reference</h1><details>    <summary>Click here if you want to checkout the source code</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inspired from: https://www.joinquant.com/post/1401</span></span><br><span class="line"><span class="comment">#                and https://www.joinquant.com/view/community/detail/284a9688a58e0112b3bad8c1283548bc</span></span><br><span class="line"><span class="comment"># 标题：Turtle Strategy that monitors multiple stocks</span></span><br><span class="line"><span class="comment"># 作者：Michael Hsia</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> talib</span><br><span class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"></span><br><span class="line">enable_profile()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChinaMarketHelper</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">normalize_position</span>(<span class="params">self, position</span>):</span></span><br><span class="line">        <span class="keyword">return</span> int(position / <span class="number">100</span>) * <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TurtleSystemManager</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, short_in_date=<span class="number">20</span>, short_out_date=<span class="number">10</span>, long_in_date=<span class="number">55</span>, long_out_date=<span class="number">20</span></span>):</span></span><br><span class="line">        self.system = [</span><br><span class="line">            TurtleSystem(short_in_date, short_out_date, <span class="literal">True</span>),</span><br><span class="line">            TurtleSystem(long_in_date, long_out_date, <span class="literal">False</span>)</span><br><span class="line">        ]</span><br><span class="line">        <span class="comment"># Capacity in portfolio</span></span><br><span class="line">        self.capacity_per_system = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_turtle_params</span>(<span class="params">self, context</span>):</span></span><br><span class="line">        <span class="keyword">for</span> pindex <span class="keyword">in</span> range(len(context.subportfolios)):</span><br><span class="line">            total_value = context.subportfolios[pindex].total_value</span><br><span class="line">            <span class="keyword">for</span> symbol <span class="keyword">in</span> context.subportfolios[pindex].long_positions.keys():</span><br><span class="line">                self.system[pindex].update_turtle_params_by_symbol(symbol, total_value)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_running</span>(<span class="params">self, context, symbol, current_price</span>):</span></span><br><span class="line">        <span class="keyword">for</span> pindex <span class="keyword">in</span> range(len(context.subportfolios)):</span><br><span class="line">            total_value = context.subportfolios[pindex].total_value</span><br><span class="line">            donchian_high_price = max(attribute_history(symbol, self.system[pindex].in_date, <span class="string">&#x27;1d&#x27;</span>, (<span class="string">&#x27;high&#x27;</span>, <span class="string">&#x27;close&#x27;</span>))[<span class="string">&#x27;close&#x27;</span>])</span><br><span class="line">            donchian_low_price = min(attribute_history(symbol, self.system[pindex].out_date, <span class="string">&#x27;1d&#x27;</span>, (<span class="string">&#x27;low&#x27;</span>, <span class="string">&#x27;close&#x27;</span>))[<span class="string">&#x27;close&#x27;</span>])</span><br><span class="line">            donchian_mid_price = (donchian_high_price + donchian_low_price) / <span class="number">2</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> symbol <span class="keyword">not</span> <span class="keyword">in</span> context.subportfolios[pindex].long_positions.keys():</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Limit the number of assets in our portfolio to make sure we&#x27;re able to invest enough money to complete one turtle strategy cycle</span></span><br><span class="line">                <span class="keyword">if</span> len(context.subportfolios[pindex].long_positions) &gt;= self.capacity_per_system:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                ma_40 = mean(attribute_history(symbol, <span class="number">40</span>, <span class="string">&#x27;1d&#x27;</span>, (<span class="string">&#x27;close&#x27;</span>))[<span class="string">&#x27;close&#x27;</span>])</span><br><span class="line">                ma_200 = mean(attribute_history(symbol, <span class="number">200</span>, <span class="string">&#x27;1d&#x27;</span>, (<span class="string">&#x27;close&#x27;</span>))[<span class="string">&#x27;close&#x27;</span>])</span><br><span class="line"></span><br><span class="line">                self.system[pindex].update_turtle_params_by_symbol(symbol, total_value)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (current_price &gt; donchian_high_price) <span class="keyword">and</span> (ma_40 &gt; ma_200):</span><br><span class="line">                    <span class="keyword">if</span> pindex == <span class="number">1</span>:</span><br><span class="line">                        <span class="comment"># Reset previous_state_winning status</span></span><br><span class="line">                        self.system[<span class="number">0</span>].previous_state_winning.discard(symbol)</span><br><span class="line"></span><br><span class="line">                    self.system[pindex].market_in(</span><br><span class="line">                        symbol,</span><br><span class="line">                        pindex</span><br><span class="line">                    )</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                avg_cost = context.subportfolios[pindex].long_positions[symbol].acc_avg_cost</span><br><span class="line">                previous_purchased_price = self.system[pindex].get_previous_purchased_price_by_symbol(symbol)</span><br><span class="line">                system_N = self.system[pindex].get_N_from_turtle_params_by_symbol(symbol)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># The reason to add this block has been described in this article</span></span><br><span class="line">                <span class="comment"># https://www.joinquant.com/view/community/detail/30694</span></span><br><span class="line">                <span class="comment"># Clean up the remaining position in the next possible bar</span></span><br><span class="line">                current_position = context.subportfolios[pindex].long_positions[symbol].total_amount + context.subportfolios[pindex].long_positions[symbol].locked_amount</span><br><span class="line">                <span class="keyword">if</span> (current_position != <span class="number">0</span>) <span class="keyword">and</span> (self.system[pindex].system_positions[symbol][<span class="string">&#x27;unit&#x27;</span>] == <span class="number">0</span>):</span><br><span class="line">                    order_target(symbol, <span class="number">0</span>, style=MarketOrderStyle(), pindex=pindex)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 每上涨0.5N，加仓一个单元</span></span><br><span class="line">                <span class="keyword">if</span> current_price &gt;= (previous_purchased_price + <span class="number">0.5</span> * system_N):</span><br><span class="line">                    <span class="keyword">if</span> pindex == <span class="number">1</span>:</span><br><span class="line">                        <span class="comment"># Reset previous_state_winning status if system 2 market in or market add</span></span><br><span class="line">                        self.system[<span class="number">0</span>].previous_state_winning.discard(symbol)</span><br><span class="line"></span><br><span class="line">                    self.system[pindex].market_add(</span><br><span class="line">                        symbol,</span><br><span class="line">                        pindex</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 若当前价格低于前out_date天的收盘价的最小值, 则卖掉所有持仓</span></span><br><span class="line">                <span class="keyword">if</span> current_price &lt; donchian_mid_price:</span><br><span class="line">                    ret = self.system[pindex].market_out(</span><br><span class="line">                        symbol,</span><br><span class="line">                        pindex</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> ret == <span class="literal">True</span>:</span><br><span class="line">                        <span class="keyword">if</span> current_price &gt;= avg_cost:</span><br><span class="line">                            self.system[pindex].previous_state_winning.add(symbol)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            self.system[pindex].previous_state_winning.discard(symbol)</span><br><span class="line">                        <span class="comment"># Don&#x27;t need to run stop loss as this position has already been removed</span></span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 若当前价格低于 2N，则开始止损</span></span><br><span class="line">                <span class="keyword">if</span> (current_price - previous_purchased_price) &lt; (<span class="number">-2</span> * system_N):</span><br><span class="line">                    ret = self.system[pindex].market_stop_loss(</span><br><span class="line">                        symbol,</span><br><span class="line">                        pindex</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> ret == <span class="literal">True</span>:</span><br><span class="line">                        self.system[pindex].previous_state_winning.discard(symbol)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TurtleSystem</span>():</span></span><br><span class="line">    TURTLE_N = <span class="string">&#x27;N&#x27;</span></span><br><span class="line">    TURTLE_DOLLAR_VOLATILITY = <span class="string">&#x27;DOLLAR_VOLATILITY&#x27;</span></span><br><span class="line">    TURTLE_UNIT = <span class="string">&#x27;UNIT&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, in_date, out_date, ignore_state=False</span>):</span></span><br><span class="line">        self.in_date = in_date</span><br><span class="line">        self.out_date = out_date</span><br><span class="line">        self.ignore_state = ignore_state</span><br><span class="line">        self.system_positions = &#123;&#125;</span><br><span class="line">        self.turtle_params = &#123;&#125;</span><br><span class="line">        self.previous_state_winning = set()</span><br><span class="line">        self.ignore_state = <span class="literal">True</span></span><br><span class="line">        self.dollars_per_share = <span class="number">1</span>          <span class="comment"># dollars_per_share是标的股票每波动一个最小单位，1手股票的总价格变化量。</span></span><br><span class="line">                                            <span class="comment"># 在国内最小变化量是0.01元，所以就是0.01 × 100=1</span></span><br><span class="line">        self.number_days = <span class="number">20</span>               <span class="comment"># 计算N值的天数</span></span><br><span class="line">        self.unit_limit = <span class="number">4</span>                 <span class="comment"># 4 for the lnog direction</span></span><br><span class="line">        self.risk_ratio = <span class="number">0.1</span>               <span class="comment"># 为了尽量买到更多股票，我把风险比率设为了0.1（因为海龟原</span></span><br><span class="line">                                            <span class="comment"># 来是应用在美国的期货上的，10倍杠杆，A股没杠杆，所以把风</span></span><br><span class="line">                                            <span class="comment"># 险比率设为0.1，这样用于单个品种的买卖资金就和期货一样了），</span></span><br><span class="line">                                            <span class="comment"># 也就是说，按照平均波动幅度的每天最大亏损是0.1%</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">market_in</span>(<span class="params">self, symbol, pindex</span>):</span></span><br><span class="line">        <span class="comment"># System 1 breakout entry signals would be ignored if the last breakout would have resulted in a winning trade</span></span><br><span class="line">        <span class="comment"># All breakouts for System 2 would be taken whether the previous breakout had been a winner or not.</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">not</span> self.ignore_state) <span class="keyword">and</span> (symbol <span class="keyword">in</span> self.previous_state_winning):</span><br><span class="line">            <span class="comment"># 假如是系统1，就要看之前的trade是win的话，本次就不进入市场了</span></span><br><span class="line">            self.remove_turtle_params_by_symbol(symbol)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;[System &#123;&#125;] - [&#123;&#125;] - 入仓&quot;</span>.format(pindex, symbol))</span><br><span class="line">        self.add_position_by_symbol(</span><br><span class="line">            symbol,</span><br><span class="line">            pindex</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">market_add</span>(<span class="params">self, symbol, pindex</span>):</span></span><br><span class="line">        log.info(<span class="string">&quot;[System &#123;&#125;] - [&#123;&#125;] - 加仓&quot;</span>.format(pindex, symbol))</span><br><span class="line">        self.add_position_by_symbol(symbol, pindex)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">market_out</span>(<span class="params">self, symbol, pindex</span>):</span></span><br><span class="line">        log.info(<span class="string">&quot;[System &#123;&#125;] - [&#123;&#125;] - 减仓&quot;</span>.format(pindex, symbol))</span><br><span class="line">        <span class="keyword">return</span> self.reduce_position_by_symbol(</span><br><span class="line">            symbol,</span><br><span class="line">            pindex</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">market_stop_loss</span>(<span class="params">self, symbol, pindex</span>):</span></span><br><span class="line">        log.debug(<span class="string">&#x27;[System &#123;&#125;] - [&#123;&#125;] 开始止损&#x27;</span>.format(pindex, symbol))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.reduce_position_by_symbol(</span><br><span class="line">            symbol,</span><br><span class="line">            pindex</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_position_by_symbol</span>(<span class="params">self, symbol, pindex</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.system_positions.get(symbol, <span class="literal">None</span>) == <span class="literal">None</span>:</span><br><span class="line">            self.system_positions[symbol] = &#123;&#125;</span><br><span class="line">            self.system_positions[symbol][<span class="string">&#x27;unit&#x27;</span>] = <span class="number">0</span></span><br><span class="line">            self.system_positions[symbol][<span class="string">&#x27;previous_purchased_price&#x27;</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.system_positions[symbol][<span class="string">&#x27;unit&#x27;</span>] &gt;= self.unit_limit:</span><br><span class="line">            <span class="comment"># Reaching unit limit</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        position = self.get_unit_from_turtle_params_by_symbol(symbol)</span><br><span class="line">        position = ChinaMarketHelper.normalize_position(position * self.risk_ratio)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> position &lt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        res = order(symbol, position, style=MarketOrderStyle(), pindex=pindex)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> res <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> res.status <span class="keyword">not</span> <span class="keyword">in</span> [OrderStatus.canceled, OrderStatus.rejected]:</span><br><span class="line">                self.system_positions[symbol][<span class="string">&#x27;unit&#x27;</span>] += <span class="number">1</span></span><br><span class="line">                self.system_positions[symbol][<span class="string">&#x27;previous_purchased_price&#x27;</span>] = res.price</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                log.warning(<span class="string">&#x27;[System &#123;&#125;] - [&#123;&#125;] order failed: &#123;&#125;.&#x27;</span>.format(pindex, symbol, res))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reduce_position_by_symbol</span>(<span class="params">self, symbol, pindex</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.system_positions.get(symbol, <span class="literal">None</span>) == <span class="literal">None</span>:</span><br><span class="line">            log.warning(<span class="string">&#x27;Reduce position failed. It does not exist&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        res = order_target(symbol, <span class="number">0</span>, style=MarketOrderStyle(), pindex=pindex)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> res <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> res.status <span class="keyword">not</span> <span class="keyword">in</span> [OrderStatus.canceled, OrderStatus.rejected]:</span><br><span class="line">                self.system_positions[symbol][<span class="string">&#x27;unit&#x27;</span>] = <span class="number">0</span></span><br><span class="line">                <span class="comment"># https://www.joinquant.com/view/community/detail/30694</span></span><br><span class="line">                <span class="comment"># self.remove_position_by_symbol_if_empty(symbol)</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                log.warning(<span class="string">&#x27;[System &#123;&#125;] - [&#123;&#125;] order failed: &#123;&#125;.&#x27;</span>.format(pindex, symbol, res))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_position_by_symbol_if_empty</span>(<span class="params">self, symbol</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.system_positions.get(symbol, <span class="literal">None</span>) == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.system_positions[symbol][<span class="string">&#x27;unit&#x27;</span>] == <span class="number">0</span>:</span><br><span class="line">            self.system_positions.pop(symbol)</span><br><span class="line">            self.remove_turtle_params_by_symbol(symbol)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        log.warning(<span class="string">&#x27;Unit of [&#123;&#125;] is not empty&#x27;</span>.format(symbol))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_previous_purchased_price_by_symbol</span>(<span class="params">self, symbol</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.system_positions.get(symbol, <span class="literal">None</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27; [&#123;&#125;] - System position param does not exist&#x27;</span>.format(symbol))</span><br><span class="line">        <span class="keyword">if</span> self.system_positions[symbol].get(<span class="string">&#x27;previous_purchased_price&#x27;</span>, <span class="literal">None</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;[&#123;&#125;] - N does not exist&#x27;</span>.format(symbol))</span><br><span class="line">        <span class="keyword">return</span> self.system_positions[symbol][<span class="string">&#x27;previous_purchased_price&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_turtle_params_by_symbol</span>(<span class="params">self, symbol, account_value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.is_turtle_params_existed_by_symbol(symbol):</span><br><span class="line">            self.turtle_params[symbol] = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        df = attribute_history(</span><br><span class="line">            count=self.number_days + <span class="number">1</span>,</span><br><span class="line">            unit=<span class="string">&#x27;1d&#x27;</span>,</span><br><span class="line">            fields=[<span class="string">&#x27;low&#x27;</span>, <span class="string">&#x27;close&#x27;</span>, <span class="string">&#x27;high&#x27;</span>],</span><br><span class="line">            security=symbol,</span><br><span class="line">            df=<span class="literal">True</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        df[<span class="string">&#x27;pdc&#x27;</span>] = df[<span class="string">&#x27;close&#x27;</span>].shift(<span class="number">1</span>)</span><br><span class="line">        df[<span class="string">&#x27;h_l&#x27;</span>] = (df[<span class="string">&#x27;high&#x27;</span>] - df[<span class="string">&#x27;low&#x27;</span>]).abs()</span><br><span class="line">        df[<span class="string">&#x27;h_pdc&#x27;</span>] = (df[<span class="string">&#x27;high&#x27;</span>] - df[<span class="string">&#x27;pdc&#x27;</span>]).abs()</span><br><span class="line">        df[<span class="string">&#x27;pdc_l&#x27;</span>] = (df[<span class="string">&#x27;pdc&#x27;</span>] - df[<span class="string">&#x27;low&#x27;</span>]).abs()</span><br><span class="line">        N = df[[<span class="string">&#x27;h_l&#x27;</span>, <span class="string">&#x27;h_pdc&#x27;</span>, <span class="string">&#x27;pdc_l&#x27;</span>]].max(axis=<span class="number">1</span>)[<span class="number">1</span>:].mean()</span><br><span class="line"></span><br><span class="line">        high = df[<span class="string">&#x27;high&#x27;</span>]</span><br><span class="line">        low = df[<span class="string">&#x27;low&#x27;</span>]</span><br><span class="line">        pdc = df[<span class="string">&#x27;close&#x27;</span>]</span><br><span class="line">        <span class="keyword">del</span> df</span><br><span class="line"></span><br><span class="line">        self.turtle_params[symbol][self.TURTLE_N] = talib.ATR(high, low, pdc, timeperiod=self.number_days)[<span class="number">-1</span>]</span><br><span class="line">        self.turtle_params[symbol][self.TURTLE_DOLLAR_VOLATILITY] = self.dollars_per_share * self.turtle_params[symbol][self.TURTLE_N]</span><br><span class="line">        self.turtle_params[symbol][self.TURTLE_UNIT] = (account_value * <span class="number">0.01</span>) / self.turtle_params[symbol][self.TURTLE_DOLLAR_VOLATILITY]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_N_from_turtle_params_by_symbol</span>(<span class="params">self, symbol</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.is_turtle_params_existed_by_symbol(symbol):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;N of [&#123;&#125;] does not exist&#x27;</span>.format(symbol))</span><br><span class="line">        <span class="keyword">if</span> self.turtle_params[symbol].get(self.TURTLE_N, <span class="literal">None</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;N of [&#123;&#125;] does not exist&#x27;</span>.format(symbol))</span><br><span class="line">        <span class="keyword">return</span> self.turtle_params[symbol][self.TURTLE_N]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_unit_from_turtle_params_by_symbol</span>(<span class="params">self, symbol</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.is_turtle_params_existed_by_symbol(symbol):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;N of [&#123;&#125;] does not exist&#x27;</span>.format(symbol))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.turtle_params[symbol][self.TURTLE_UNIT]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_turtle_params_existed_by_symbol</span>(<span class="params">self, symbol</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.turtle_params.get(symbol, <span class="literal">None</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove_turtle_params_by_symbol</span>(<span class="params">self, symbol</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.is_turtle_params_existed_by_symbol(symbol):</span><br><span class="line">            self.turtle_params.pop(symbol)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">总体回测前</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize</span>(<span class="params">context</span>):</span></span><br><span class="line">    g.security = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    set_benchmark(<span class="string">&#x27;000300.XSHG&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    set_option(<span class="string">&#x27;use_real_price&#x27;</span>,<span class="literal">True</span>) <span class="comment">#用真实价格交易</span></span><br><span class="line">    set_option(<span class="string">&quot;avoid_future_data&quot;</span>, <span class="literal">True</span>) <span class="comment">#避免使用未来数据</span></span><br><span class="line">    log.set_level(<span class="string">&#x27;order&#x27;</span>,<span class="string">&#x27;error&#x27;</span>) <span class="comment"># 设置报错等级</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># System 1 cash</span></span><br><span class="line">    ratio_system1 = <span class="number">0.8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Set up two separate systems:</span></span><br><span class="line">    <span class="comment"># subportfolios[0] is system 1 in the turtle strategy</span></span><br><span class="line">    <span class="comment"># and subportfolios[1] is the system 2</span></span><br><span class="line">    set_subportfolios(</span><br><span class="line">        [SubPortfolioConfig(cash=context.portfolio.starting_cash * ratio_system1, type=<span class="string">&#x27;stock&#x27;</span>),</span><br><span class="line">        SubPortfolioConfig(cash=context.portfolio.starting_cash * (<span class="number">1</span> - ratio_system1), type=<span class="string">&#x27;stock&#x27;</span>)]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    SHORT_IN_DATE = <span class="number">20</span></span><br><span class="line">    SHORT_OUT_DATE = <span class="number">10</span></span><br><span class="line">    LONG_IN_DATE = <span class="number">55</span></span><br><span class="line">    LONG_OUT_DATE = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    g.turtle = TurtleSystemManager(</span><br><span class="line">        SHORT_IN_DATE,</span><br><span class="line">        SHORT_OUT_DATE,</span><br><span class="line">        LONG_IN_DATE,</span><br><span class="line">        LONG_OUT_DATE,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">每天开盘前</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">before_trading_start</span>(<span class="params">context</span>):</span></span><br><span class="line">    set_slip_fee(context)</span><br><span class="line">    set_tradable_stocks(context)</span><br><span class="line">    g.turtle.update_turtle_params(context)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_slip_fee</span>(<span class="params">context</span>):</span></span><br><span class="line">    set_slippage(FixedSlippage(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    set_order_cost(OrderCost(open_tax=<span class="number">0</span>, close_tax=<span class="number">0.001</span>, open_commission=<span class="number">0.0003</span>, close_commission=<span class="number">0.0003</span>, close_today_commission=<span class="number">0</span>, min_commission=<span class="number">5</span>), type=<span class="string">&#x27;stock&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_tradable_stocks</span>(<span class="params">context</span>):</span></span><br><span class="line">    <span class="comment"># Run every month</span></span><br><span class="line">    <span class="keyword">if</span> context.current_dt.day == <span class="number">1</span> <span class="keyword">or</span> g.security <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Test one scenario</span></span><br><span class="line">        test = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> test:</span><br><span class="line">            <span class="comment"># 上证50</span></span><br><span class="line">            g.security = get_index_stocks(<span class="string">&#x27;000016.XSHG&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># Get yesterday&#x27;s datetime string</span></span><br><span class="line">            date = (context.current_dt - timedelta(days=<span class="number">1</span>)).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            sh300 = get_index_stocks(normalize_code(<span class="string">&#x27;000300.sh&#x27;</span>))</span><br><span class="line"></span><br><span class="line">            sh300_df = get_fundamentals(</span><br><span class="line">                query(</span><br><span class="line">                    valuation.code,</span><br><span class="line">                    valuation.pe_ratio,</span><br><span class="line">                    valuation.turnover_ratio,</span><br><span class="line">                    balance.total_owner_equities,</span><br><span class="line">                    balance.total_sheet_owner_equities,</span><br><span class="line">                    cash_flow.cash_equivalent_increase,</span><br><span class="line">                    cash_flow.cash_equivalents_at_beginning,</span><br><span class="line">                    cash_flow.cash_and_equivalents_at_end,</span><br><span class="line">                    indicator.goods_sale_and_service_to_revenue,</span><br><span class="line">                    indicator.inc_net_profit_year_on_year,</span><br><span class="line">                    valuation.pb_ratio,</span><br><span class="line">                ).filter(</span><br><span class="line">                    valuation.code.in_(sh300),</span><br><span class="line">                    valuation.pe_ratio &gt; <span class="number">0</span>,</span><br><span class="line">                    indicator.inc_net_profit_year_on_year &gt; <span class="number">0</span></span><br><span class="line">                ),</span><br><span class="line">                date=date</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            sh300_df = sh300_df.dropna()</span><br><span class="line">            sh300_df[<span class="string">&#x27;peg_ratio&#x27;</span>] = sh300_df.pe_ratio / sh300_df.inc_net_profit_year_on_year</span><br><span class="line">            sh300_df[<span class="string">&#x27;debt_to_equity_ratio&#x27;</span>] = ((sh300_df.total_sheet_owner_equities - sh300_df.total_owner_equities)/sh300_df.total_owner_equities)</span><br><span class="line">            sh300_df[<span class="string">&#x27;FCF&#x27;</span>] = (sh300_df.cash_and_equivalents_at_end - sh300_df.cash_equivalents_at_beginning)</span><br><span class="line"></span><br><span class="line">            cols = [<span class="string">&#x27;goods_sale_and_service_to_revenue&#x27;</span>, <span class="string">&#x27;peg_ratio&#x27;</span>, <span class="string">&#x27;debt_to_equity_ratio&#x27;</span>, <span class="string">&#x27;FCF&#x27;</span>, <span class="string">&#x27;turnover_ratio&#x27;</span>, <span class="string">&#x27;pb_ratio&#x27;</span>]</span><br><span class="line">            sh300_df.index = sh300_df.code</span><br><span class="line">            sh300_df.index.name = <span class="string">&#x27;Symbol&#x27;</span></span><br><span class="line">            sh300_df = sh300_df[cols]</span><br><span class="line"></span><br><span class="line">            sh300_df[<span class="string">&#x27;goods_sale_and_service_to_revenue&#x27;</span>] = sh300_df[<span class="string">&#x27;goods_sale_and_service_to_revenue&#x27;</span>].rank(ascending=<span class="literal">False</span>)</span><br><span class="line">            sh300_df[<span class="string">&#x27;peg_ratio&#x27;</span>] = sh300_df[<span class="string">&#x27;peg_ratio&#x27;</span>].rank(ascending=<span class="literal">True</span>)</span><br><span class="line">            sh300_df[<span class="string">&#x27;debt_to_equity_ratio&#x27;</span>] = sh300_df[<span class="string">&#x27;debt_to_equity_ratio&#x27;</span>].rank(ascending=<span class="literal">True</span>)</span><br><span class="line">            sh300_df[<span class="string">&#x27;FCF&#x27;</span>] = sh300_df[<span class="string">&#x27;FCF&#x27;</span>].rank(ascending=<span class="literal">False</span>)</span><br><span class="line">            sh300_df[<span class="string">&#x27;turnover_ratio&#x27;</span>] = sh300_df[<span class="string">&#x27;turnover_ratio&#x27;</span>].rank(ascending=<span class="literal">False</span>)</span><br><span class="line">            sh300_df[<span class="string">&#x27;pb_ratio&#x27;</span>] = sh300_df[<span class="string">&#x27;pb_ratio&#x27;</span>].rank(ascending=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            zscore = sh300_df.sum(axis=<span class="number">1</span>).sort_values(ascending=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            g.security = zscore.index.tolist()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> pindex <span class="keyword">in</span> range(len(context.subportfolios)):</span><br><span class="line">            g.security += context.subportfolios[pindex].long_positions.keys()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Remove duplicated positions from the list</span></span><br><span class="line">        g.security = list(set(g.security))</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">每天交易时</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 按分钟回测</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_data</span>(<span class="params">context, data</span>):</span></span><br><span class="line">    <span class="comment"># 15 minutes timer</span></span><br><span class="line">    timer = <span class="number">15</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> context.current_dt.minute % timer != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">elif</span> (context.current_dt.hour == <span class="number">9</span>) <span class="keyword">and</span> (context.current_dt.minute == <span class="number">30</span>):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sec <span class="keyword">in</span> g.security:</span><br><span class="line">        current_data = get_current_data()</span><br><span class="line">        <span class="keyword">if</span> current_data[sec].paused <span class="keyword">or</span> current_data[sec].is_st:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        current_price = data[sec].price</span><br><span class="line">        g.turtle.start_running(context, sec, current_price)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">每天收盘后</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">after_trading_end</span>(<span class="params">context</span>):</span></span><br><span class="line">    <span class="keyword">for</span> pindex <span class="keyword">in</span> range(len(context.subportfolios)):</span><br><span class="line">        <span class="keyword">if</span> pindex == <span class="number">0</span>:</span><br><span class="line">            record(cash1=context.subportfolios[pindex].available_cash)</span><br><span class="line">            record(value1=context.subportfolios[pindex].total_value)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record(cash2=context.subportfolios[pindex].available_cash)</span><br><span class="line">            record(value2=context.subportfolios[pindex].total_value)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">策略结束后</span></span><br><span class="line"><span class="string">================================================================================</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_strategy_end</span>(<span class="params">context</span>):</span></span><br><span class="line">    x = PrettyTable([<span class="string">&#x27;System&#x27;</span>, <span class="string">&#x27;TotalValue&#x27;</span>, <span class="string">&#x27;Avail Cash&#x27;</span>, <span class="string">&#x27;Number of positions&#x27;</span>])</span><br><span class="line">    <span class="keyword">for</span> pindex <span class="keyword">in</span> range(len(context.subportfolios)):</span><br><span class="line">        x.add_row([</span><br><span class="line">            <span class="string">f&#x27;System <span class="subst">&#123;pindex&#125;</span>&#x27;</span>,</span><br><span class="line">            context.subportfolios[pindex].total_value,</span><br><span class="line">            context.subportfolios[pindex].available_cash,</span><br><span class="line">            len(context.subportfolios[pindex].long_positions)</span><br><span class="line">        ])</span><br></pre></td></tr></table></figure></details>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Last post in 2020. See you, 2020. See you, in 2021.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&quot;/2020/12/26/2020-12-26-turtle-strategy/cover.jpg&quot; class=&quot;&quot; width=&quot;400&quot;&gt;
&lt;p&gt;The Turtle Traders experiment was conducted in the early 1980s by &lt;strong&gt;Richard Dennis&lt;/strong&gt; and &lt;strong&gt;William Eckhardt&lt;/strong&gt; to see whether anyone could be taught how to make money in trading. Therefore, the trading strategy that has been taught to these apprentices is named after this experiment as “&lt;strong&gt;Turtle Strategy&lt;/strong&gt;“.&lt;/p&gt;
&lt;p&gt;In this post, we’re going to quickly go through the turtle strategy itself, and I’m going to experiment with a few things against the backtesting platform that I’m checking out recently: &lt;a href=&quot;https://joinquant.com&quot;&gt;&lt;strong&gt;JoinQuant&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="Quantitative Trading" scheme="http://mikelhsia.github.io/categories/Quantitative-Trading/"/>
    
    
    <category term="Momentum" scheme="http://mikelhsia.github.io/tags/Momentum/"/>
    
    <category term="Strategy" scheme="http://mikelhsia.github.io/tags/Strategy/"/>
    
    <category term="Backtesting" scheme="http://mikelhsia.github.io/tags/Backtesting/"/>
    
  </entry>
  
  <entry>
    <title>【Cont.】 MACD strategy follow up report</title>
    <link href="http://mikelhsia.github.io/2020/12/12/2020-12-12-macd-strategy-follow-up-report/"/>
    <id>http://mikelhsia.github.io/2020/12/12/2020-12-12-macd-strategy-follow-up-report/</id>
    <published>2020-12-12T02:23:14.000Z</published>
    <updated>2020-12-13T02:38:57.978Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2020/12/12/2020-12-12-macd-strategy-follow-up-report/cover_perf.png" class="" width="400"><p>The above line chart shows how we have been doing on the <strong>enhanced</strong> <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/#more"><strong>MACD strategy</strong></a> as of today (2020/12/11 EST).</p><p>It’s been 19 trading days since we’ve launched our automatic trading script to trade on TD Ameritrade on 2020/11/17. So far, we have accumulated ~6% of the total investment even with a huge dip on Dec 9th.</p><a id="more"></a><h1 id="MACD-strategy-performance-report-as-of-today"><a href="#MACD-strategy-performance-report-as-of-today" class="headerlink" title="MACD strategy performance report as of today"></a>MACD strategy performance report as of today</h1><div class="table-container"><table><thead><tr><th>-</th><th>Number</th></tr></thead><tbody><tr><td>Current position</td><td>10</td></tr><tr><td>Positive opening position</td><td>7 (out of 10)</td></tr><tr><td>Negative opening position</td><td>3 (out of 10)</td></tr><tr><td>Closed trade</td><td>1</td></tr><tr><td>Current portfolio total return</td><td>6.13%</td></tr></tbody></table></div><p> From the line chart below, you can tell the portfolio trend that we constructed is quite correlated with the trend of the <a href="https://www.nasdaq.com/solutions/nasdaq-index-data-cns">Nasdaq index (.IXIC)</a>. Meaning, we have a quite correlation with the Nasdaq index.</p><img data-src="/2020/12/12/2020-12-12-macd-strategy-follow-up-report/w_nasdaq.png" class="" width="400"><p>In the meantime, if you look at the Dow Jones Index and S&amp;P 500 Index, you’ll see we’re actually doubled in return as of today.<br><img data-src="/2020/12/12/2020-12-12-macd-strategy-follow-up-report/w_djia.png" class="" width="400"><br><img data-src="/2020/12/12/2020-12-12-macd-strategy-follow-up-report/w_s&p.png" class="" width="400"></p><p>Hence, I think we’re doing pretty good so far. Even though the market is still tumbling and the US government hesitated to pull up the economy stimulation for COVID-19, our MACD strategy is still doing ok. Stay tuned for the follow-up report on more detailed analysis until we get enough data to analyze.</p><h1 id="What-I-did"><a href="#What-I-did" class="headerlink" title="What I did"></a>What I did</h1><p>As we all know in <a href="https://mikelhsia.github.io/2020/11/10/2020-11-08-macd-strategy-implementation/#more">my previous article</a>, that Quantopian has disabled their entire service and switched their business to serve enterprise customers (<a href="https://factset.quantopian.com/">as in here</a>), I’ve been struggling to find a good substitution in my backtesting process.</p><p><strong>QuantConnect</strong> seems pretty solid and reliable, and its API documentation is very clear. Even though the way to use their APIs is very different from Quantopian and not intuitive to my sense, but it’s still ok to cope with. However, I’ve been spent days trying to run backtesting on QuantConnect, the speed is insanely slow even with VPN. In the end, I have to give up on it.</p><p>Then I see people also talking about <a href="https://www.quantrocket.com/"><strong>QuantRocket</strong></a>. It’s essentially a python library run inside docker. To run backtesting, you need to spin up this docker image on your local PC or laptop and connect to the docker container. I simply don’t like how it works and complicated. Plus I didn’t find useful API documentation on their website. So again, I gave it up.</p><p><strong>Python backtrader package</strong><br>This looks to me is the most promising solution that I can find so far. It is very flexible and easy to use. If you know python and happen to be a former Quantopian user, you’ll find a sense of familiarity with this python package. The <code>broker</code>, <code>strategy</code>, <code>data</code>, <code>analyzer</code>, <code>indicators</code> modules are very well written and easy to inherit then build upon it. Nevertheless, one single and the most crucial issue that I can’t resolve by myself, where it’s also not one of the issues that <code>backtrader</code> tries to solve: <strong>data source</strong>.</p><p>Several issues spotted during the exploration <code>backtrader</code> module and I still yet to be able to address regarding ingesting data feed in backtrader:</p><ol><li>How to handle stocks that are delisted for good?</li><li>How to handle stocks that are delisted temporarily due to SEC’s command?</li><li>How to merge multiple stock pricing data that are different in the start and end date?</li></ol><p>I’ve been spending ~2 weeks but the progress is limited. Therefore, I turned to the local quantitative platform again since they’ve been existed for years: <a href="https://www.joinquant.com">JoinQuant</a>. This also means, now I’m switching back to China stock market and need to find another broker that has API supports. Maybe <a href="https://openapi.futunn.com/futu-api-doc/intro/opend.html#%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D">Futuniuniu</a> in the near future.</p><h1 id="What-I’m-doing"><a href="#What-I’m-doing" class="headerlink" title="What I’m doing"></a>What I’m doing</h1><p>Right now I’m working on one of the conventional trading strategies from history on JoinQuant: <strong>Turtle strategy</strong>.</p><p>Here are a few articles about <strong>Turtle strategy</strong> itself and the history of it:</p><ul><li><a href="https://analyzingalpha.com/turtle-trading">Turtle Trading: History, Strategy &amp; Complete Rules</a></li><li><a href="https://www.businessinsider.com/turtle-trading-rules-trend-following-investing-based-on-20-amp-55-day-highs-2011-8">Turtle trading rules trend-following investing based on 20 amp 55-day highs</a></li></ul><p>It’s an interesting story and fun to read. Also, I believe there’s a lot of things that I can learn from rebuilding this strategy and put them into practice. Hopefully, I can present you with a turtle strategy that looks like:<br><img data-src="/2020/12/12/2020-12-12-macd-strategy-follow-up-report/turtle1.jpg" class="" width="250"></p><p>and not like:<br><img data-src="/2020/12/12/2020-12-12-macd-strategy-follow-up-report/turtle2.jpg" class="" width="250"></p><p>Cheers.</p>]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2020/12/12/2020-12-12-macd-strategy-follow-up-report/cover_perf.png&quot; class=&quot;&quot; width=&quot;400&quot;&gt;
&lt;p&gt;The above line chart shows how we have been doing on the &lt;strong&gt;enhanced&lt;/strong&gt; &lt;a href=&quot;https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy/#more&quot;&gt;&lt;strong&gt;MACD strategy&lt;/strong&gt;&lt;/a&gt; as of today (2020/12/11 EST).&lt;/p&gt;
&lt;p&gt;It’s been 19 trading days since we’ve launched our automatic trading script to trade on TD Ameritrade on 2020/11/17. So far, we have accumulated ~6% of the total investment even with a huge dip on Dec 9th.&lt;/p&gt;</summary>
    
    
    
    <category term="Quantitative Trading" scheme="http://mikelhsia.github.io/categories/Quantitative-Trading/"/>
    
    
    <category term="Momentum" scheme="http://mikelhsia.github.io/tags/Momentum/"/>
    
    <category term="Strategy" scheme="http://mikelhsia.github.io/tags/Strategy/"/>
    
  </entry>
  
  <entry>
    <title>【How 2】 Vol. 3. How to produce a quality tradable securities for backtesting</title>
    <link href="http://mikelhsia.github.io/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/"/>
    <id>http://mikelhsia.github.io/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/</id>
    <published>2020-11-26T08:55:13.000Z</published>
    <updated>2021-06-18T09:54:10.645Z</updated>
    
    <content type="html"><![CDATA[<p><code>Tradable securities</code> are the securities that are available to be traded on the market that day. Each security could be either add into or remove from this tradable set such as <a href="https://www.merriam-webster.com/dictionary/delist">delisted</a>, company bankrupt, and so on. It’s important for us to obtain this list before we place the order on the day, otherwise, we’re probably going to buy or sell the securities that are not available on the market.</p><p>In this article, I’m going to talk about how I built mine by <strong>reverse engineering</strong> what I have in order to build this tradable securities list. Even though it’s probably not the most accurate one, but could be a start for those who don’t have enough resources to get these tradable securities from elsewhere.</p><a id="more"></a><h1 id="Why-we-need-this-list"><a href="#Why-we-need-this-list" class="headerlink" title="Why we need this list?"></a>Why we need this list?</h1><p>You may ask, what do we need the list for? We could simply use all the stock symbols available on the list in the article <a href="https://mikelhsia.github.io/2020/10/19/2020-10-19-get-all-tradable-tickers/#more">【How 2】 Vol. 1. How 2 get all tradable tickers in US markets</a>, right?</p><p>No. There is one common bias here that needs to be avoided or mitigated to a certain degree:</p><h2 id="Survivor-bias"><a href="#Survivor-bias" class="headerlink" title="Survivor bias"></a>Survivor bias</h2><p>This bias indicates that the result we’re looking at today, actually already went through a series of selection, competition, or elimination.</p><p>For example, we’re analyzing a two-day lookback period and deduced that all the stocks whose symbols start with “A” will very likely to make a positive return this year. When we look back 2 days from <strong>2014-01-09</strong>, we don’t know the existence of stock “AAZ”. The stocks we’re looking at are the <code>survivors</code> from the market competition, inducing us to come to this false conclusion. Hence, on the next day of 2014-01-09, a new stock “ABZ” come to the market. You are very likely to lose more money on the stock as it has “Z” at the end of its symbol that is actually not a good stock, just like the previous market loser “AAZ”.</p><img data-src="/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/survivor_bias.png" class="" width="500"><p>So using the tradable securities of today to backtest against the historic pricing data would not help us to better predict the future, because we’re looking at the past data through a filtering glasses called “future”.</p><p>You must be smart enough and be able to figure out the data format we need to represent the stocks that are available each historic day on the market by now:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;2014-11-03&#x27;</span>: [ <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;aacg&#x27;</span>, <span class="string">&#x27;aaic&#x27;</span>, <span class="string">&#x27;aal&#x27;</span>, ... ],</span><br><span class="line">    <span class="string">&#x27;2014-11-04&#x27;</span>: [ <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;aacg&#x27;</span>, <span class="string">&#x27;aal&#x27;</span>, ... ],</span><br><span class="line">    <span class="string">&#x27;2014-11-05&#x27;</span>: [ <span class="string">&#x27;a&#x27;</span>, ... ],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Then-the-problem-is-…"><a href="#Then-the-problem-is-…" class="headerlink" title="Then, the problem is …"></a>Then, the problem is …</h1><p>The problem is, I haven’t seen any public data out there that are provided except the dataset <code>QTradableStocksUS()</code> on Quantopian. Also, we can’t use data provided by NASDAQ or NYSE, as this data is not going to help us waiving the <strong>survivor bias</strong> that we mentioned above. Then, how do we produce a somewhat quality tradable stocks set for backtesting?</p><h1 id="Methodology-and-thoughts"><a href="#Methodology-and-thoughts" class="headerlink" title="Methodology and thoughts"></a>Methodology and thoughts</h1><p>I’m going to quickly explain how I built the tradable stocks set based on what I have. If you’re not interested, you can directly go to the bottom of the article to download the tradable stock set since 2014-11-03. If you still have the last piece of conscience in you, please bear with me and read this through …</p><h2 id="Reverse-engineering"><a href="#Reverse-engineering" class="headerlink" title="Reverse-engineering"></a>Reverse-engineering</h2><p>Since there is no public data for the historic tradable stock symbols, I’m thinking maybe we can somewhat confirm the fact that the stock traded publicly on the market that day is included in the tradable securities. So we can say, <strong><em>if a stock has a close price and trading volume that is not zero, this stock must be included in the tradable securities</em></strong>. Therefore, here’s what I’m going to do:</p><h3 id="1-Download-the-historic-price-of-all-stocks-that-I-can-find"><a href="#1-Download-the-historic-price-of-all-stocks-that-I-can-find" class="headerlink" title="1. Download the historic price of all stocks that I can find."></a>1. Download the historic price of all stocks that I can find.</h3><p>Use the below code to download all necessary stock historic daily prices from Tiingo. And, I use <code>multiprocessing</code> package to speed up this process.<br><img data-src="/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/step1.png" class="" width="800"></p><h3 id="2-Combine-these-historic-prices-on-the-key-“date”-into-one-big-table"><a href="#2-Combine-these-historic-prices-on-the-key-“date”-into-one-big-table" class="headerlink" title="2. Combine these historic prices on the key “date” into one big table."></a>2. Combine these historic prices on the key “date” into one big table.</h3><p>By following the below process, you can get a big table that has the date on the index and the stock symbol in the column.<br><img data-src="/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/step2-1.png" class="" width="800"><br>The result will look like the table below:<br><img data-src="/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/step2-2.png" class="" width="800"></p><p>Then one important step that we need to do is to look at the data and see how many data were missing from the source provided. By using the <code>seaborn.heatmap()</code> to visualize the data and find the gap. We’re not going to check all the stocks as there are 14k stocks on my list. So I’m going to inspect stock No. 2000~3000. Here’s the data from 1989 to 2020-11-23:<br><img data-src="/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/step2-3.png" class="" width="500"></p><p>It seems a lot of data was missing from the beginning. As my backtest won’t include the datetime this long ago, I’m targeting to get data from 2014-11-03 to 2020-11-23. Now the diagram looks like this:<br><img data-src="/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/step2-4.png" class="" width="500"></p><p>Um… It’s better now. Let’s use this as a base to move on.</p><h3 id="3-Go-through-this-big-table-by-day-and-mark-the-stock-that-has-“Close”-price-and-“Volume”-is-not-zero-as-true"><a href="#3-Go-through-this-big-table-by-day-and-mark-the-stock-that-has-“Close”-price-and-“Volume”-is-not-zero-as-true" class="headerlink" title="3. Go through this big table by day, and mark the stock that has “Close” price and “Volume” is not zero as true."></a>3. Go through this big table by day, and mark the stock that has “Close” price and “Volume” is not zero as true.</h3><p>Here we’re going to produce the positive mark for each stock to see whether we’re going to include it into the tradable securities or not. There is one more thing that needs to be paid attention to: <strong>Data missing rate</strong>. We’re not going to pick the stock that misses daily ‘Close’ price data more than 10% of the time. Because the stock could be delisted for a while due to several reasons. But missing data 10% of the entire time is not normal from what I see.</p><p>So here’s what I do:<br><img data-src="/2020/11/26/2020-11-28-how-to-produce-a-quality-tradable-stock-set-for-backtesting/step3.png" class="" width="800"></p><p>Of course, the <code>missing_rate_threshold</code> can be adjusted as your need. For now, I’m going to keep it to <strong>90</strong> as <strong>90%</strong> of the entire time we observed from 2014-11-03 to 2020-11-23.</p><h3 id="4-Generate-tradable-stock-symbols-by-Timestamp"><a href="#4-Generate-tradable-stock-symbols-by-Timestamp" class="headerlink" title="4. Generate tradable stock symbols by Timestamp"></a>4. Generate tradable stock symbols by Timestamp</h3><p>To get the tradable securities on the day of 2014-11-03, let’s first transform this <code>pd.DataFrame</code> into a listed dictionary. After getting our <code>final_dict</code>, we then generate the <code>pd.Timestamp</code> as an index to retrieve the symbols we need. Lastly, we remove the Nan and Null data with <code>pd.isna()</code> function. Then we’ll get the tradable securities on the day of 2014-11-03.<br></p><h1 id="To-conclude"><a href="#To-conclude" class="headerlink" title="To conclude"></a>To conclude</h1><p>Now we’ve come to the end of this article. I hope putting my train of thought here would make it easier for you to understand. Or leave your comments and let me know where I can explain better. Hope this helps people who are on the same road as I am.</p><hr><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Attach-the-entire-code-here"><a href="#Attach-the-entire-code-here" class="headerlink" title="Attach the entire code here"></a>Attach the entire code here</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> multiprocessing</span><br><span class="line"><span class="keyword">import</span> sys, os</span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment"># Global variables</span></span><br><span class="line">NUM_OF_PROCESSORS = <span class="number">200</span></span><br><span class="line">STOCK_PRICE_DATA_PATH = <span class="string">&#x27;/Users/michael/Desktop/stocks/&#x27;</span></span><br><span class="line">META_JSON_FILE_PATH = <span class="string">&#x27;[FILE_WHERE_YOUR_STORE_YOUR_TIINGO_META_DATA]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment"># Get all symbols provided in the meta.json from Tiingo website</span></span><br><span class="line"><span class="keyword">with</span> open(META_JSON_FILE_PATH, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    content = fp.read()</span><br><span class="line">content = json.loads(content)</span><br><span class="line">df = pd.json_normalize(content)</span><br><span class="line">stock_symbol_set = df.ticker.to_list()</span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment"># Create a table to keep track of which stock has been up to date</span></span><br><span class="line">init_datetime = pd.to_datetime(<span class="number">0</span>)</span><br><span class="line">update_table = pd.Series(</span><br><span class="line">    [init_datetime]*len(stock_symbol_set),</span><br><span class="line">    index=stock_symbol_set</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment"># Multiprocessing Pool to download pricing data from Tiingo</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_historic_price_by_symbol</span>(<span class="params">symbol: str</span>) -&gt; bool:</span></span><br><span class="line">    <span class="keyword">global</span> update_table</span><br><span class="line">    now = datetime.now()</span><br><span class="line">    until_today=now.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(os.path.join(STOCK_PRICE_DATA_PATH, f&#x27;&#123;symbol&#125;.csv&#x27;))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(os.path.join(STOCK_PRICE_DATA_PATH, <span class="string">f&#x27;<span class="subst">&#123;symbol&#125;</span>.csv&#x27;</span>)):</span><br><span class="line">        json = requests.get([YOUR_TIINGO_REQUEST_URL_WITH_SYMBOL_AND_TOKEN])</span><br><span class="line">        <span class="keyword">if</span> json == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        pd.json_normalize(json).to_csv(</span><br><span class="line">            os.path.join(</span><br><span class="line">                STOCK_PRICE_DATA_PATH,</span><br><span class="line">                <span class="string">f&#x27;<span class="subst">&#123;symbol&#125;</span>.csv&#x27;</span></span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">        update_table[symbol] = now</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> multiprocessing.Pool(NUM_OF_PROCESSORS) <span class="keyword">as</span> pool:</span><br><span class="line">    results = []</span><br><span class="line">    <span class="keyword">for</span> symbol <span class="keyword">in</span> stock_symbol_set:</span><br><span class="line">        results.append(</span><br><span class="line">            pool.apply_async(</span><br><span class="line">                download_historic_price_by_symbol,</span><br><span class="line">                args=(</span><br><span class="line">                    symbol,</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line"></span><br><span class="line">    result_list = [res.get() <span class="keyword">for</span> res <span class="keyword">in</span> results]</span><br><span class="line"></span><br><span class="line">update_table.to_csv(os.path.join(STOCK_PRICE_DATA_PATH, <span class="string">&#x27;.update_table.csv&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment"># Combine these csv into one big sheet on key &#x27;date&#x27;</span></span><br><span class="line"><span class="comment"># Screen out the stocks that has no data in the csv</span></span><br><span class="line"><span class="comment"># Place the symbol only if it has pricing data,</span></span><br><span class="line"><span class="comment"># and also when it&#x27;s trading volume is greater than 0</span></span><br><span class="line">result_df = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">path = <span class="string">&#x27;/Users/michael/Desktop/stocks&#x27;</span></span><br><span class="line">files = os.listdir(path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        df = pd.read_csv(os.path.join(path, f))</span><br><span class="line">        <span class="keyword">if</span> len(df) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        df = df[df.volume &gt; <span class="number">0</span>]</span><br><span class="line">        df[<span class="string">&#x27;ticker&#x27;</span>] = f.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        df = df.loc[:, [<span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;ticker&#x27;</span>]]</span><br><span class="line"><span class="comment">#         print(df)</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(f, e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> result_df <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        result_df = df</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result_df = pd.merge(result_df, df, on=<span class="string">&#x27;date&#x27;</span>, how=<span class="string">&#x27;outer&#x27;</span>)</span><br><span class="line"></span><br><span class="line">result_df.sort_values(<span class="string">&#x27;date&#x27;</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">result_df.index = result_df.date.values</span><br><span class="line">result_df.drop(<span class="string">&#x27;date&#x27;</span>, axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">result_df.to_csv(<span class="string">&#x27;/Users/michael/Desktop/big_sheet.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment"># Producing preliminary tradable stock set</span></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;/Users/michael/Desktop/big_sheet.csv&#x27;</span>)</span><br><span class="line">df.index = pd.to_datetime(df.date.values)</span><br><span class="line"></span><br><span class="line"><span class="comment"># This means starting from 2014-11-03</span></span><br><span class="line">num = <span class="number">13300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure we don&#x27;t erase the stocks that</span></span><br><span class="line"><span class="comment"># delisted during our time span in tradable set</span></span><br><span class="line">missing_rate_threshold = <span class="number">90</span></span><br><span class="line"></span><br><span class="line">total_row = df[num:].shape[<span class="number">0</span>]</span><br><span class="line">missing_row = df[num:].isnull().sum()</span><br><span class="line">rate_of_missing = (total_row - missing_row)/total_row * <span class="number">100</span></span><br><span class="line">final_df = df.loc[:, rate_of_missing &gt; missing_rate_threshold]</span><br><span class="line">final_df = final_df[num:]</span><br><span class="line"></span><br><span class="line">final_df.to_csv(<span class="string">&#x27;/Users/michael/Desktop/tradable_set.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># final_df = pd.read_csv(&#x27;/Users/michael/Desktop/tradable_set.csv&#x27;)</span></span><br><span class="line"><span class="comment"># final_dict = final_df.T.to_dict(&#x27;list&#x27;)</span></span><br><span class="line"><span class="comment"># d = pd.Timestamp(&#x27;2014-11-03&#x27;, tz=&#x27;UTC&#x27;)</span></span><br><span class="line"><span class="comment"># tradable = [s for s in final_df[d if not pd.isna(s)]</span></span><br></pre></td></tr></table></figure><h2 id="Download-the-tradable-securities-set-here"><a href="#Download-the-tradable-securities-set-here" class="headerlink" title="Download the tradable securities set here"></a>Download the tradable securities set here</h2><p>Click <a href="20141103_tradable_set.csv.zip" title="20141103_tradable_set.csv.zip">here</a> to download the file for tradable stock set since <u>2014-11-03</u></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;code&gt;Tradable securities&lt;/code&gt; are the securities that are available to be traded on the market that day. Each security could be either add into or remove from this tradable set such as &lt;a href=&quot;https://www.merriam-webster.com/dictionary/delist&quot;&gt;delisted&lt;/a&gt;, company bankrupt, and so on. It’s important for us to obtain this list before we place the order on the day, otherwise, we’re probably going to buy or sell the securities that are not available on the market.&lt;/p&gt;
&lt;p&gt;In this article, I’m going to talk about how I built mine by &lt;strong&gt;reverse engineering&lt;/strong&gt; what I have in order to build this tradable securities list. Even though it’s probably not the most accurate one, but could be a start for those who don’t have enough resources to get these tradable securities from elsewhere.&lt;/p&gt;</summary>
    
    
    
    <category term="How2" scheme="http://mikelhsia.github.io/categories/How2/"/>
    
    
    <category term="Backtesting" scheme="http://mikelhsia.github.io/tags/Backtesting/"/>
    
  </entry>
  
  <entry>
    <title>【Cont.】 How to save your silver bullets with MACD strategy?</title>
    <link href="http://mikelhsia.github.io/2020/11/21/2020-11-17-launch-of-macd-strategy/"/>
    <id>http://mikelhsia.github.io/2020/11/21/2020-11-17-launch-of-macd-strategy/</id>
    <published>2020-11-21T15:14:21.000Z</published>
    <updated>2020-11-21T03:52:46.596Z</updated>
    
    <content type="html"><![CDATA[<p>At the beginning of this week (2020-Nov-16th), I have launched my script and traded live on the stock market. Again, having a professional habit of a project manager, I’m here to report how the project goes and what has been done. <a id="more"></a></p><h1 id="Project-brief-and-setup"><a href="#Project-brief-and-setup" class="headerlink" title="Project brief and setup"></a>Project brief and setup</h1><div class="table-container"><table><thead><tr><th>Launch date</th><th>Go live date</th><th>Initial portfolio value</th><th>Cost of time</th><th>Cost of dollars</th></tr></thead><tbody><tr><td>2020/09/18</td><td>2020/11/16</td><td>$42,523.13 (USD)</td><td>1. One week of studying <br> 2. One month of research on Quantopian <br> 3. Three weeks of building the framework and trading script <br> 4. One week of QA and dry run</td><td>$198.00 for one-year <a href="https://api.tiingo.com/">Tiingo data</a></td></tr></tbody></table></div><h1 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h1><img data-src="/2020/11/21/2020-11-17-launch-of-macd-strategy/return.png" class="" width="800"><h1 id="Take-away-from-QA-and-dry-run"><a href="#Take-away-from-QA-and-dry-run" class="headerlink" title="Take away from QA and dry run"></a>Take away from QA and dry run</h1><ol><li><p>I’ve found out that there’re scenarios that the order placed couldn’t be fulfilled while using the <code>limit order</code>. Therefore, the cash just sitting there doing nothing until triggering another trade, and see we can catch up with another wave. My take here is, since we’re implementing the momentum strategy, meaning the stocks in the list you’re holding should look promising in the short-run. If you’re using the <code>limit order</code> in order to make sure you’re not buying at a higher price, you might miss the chance to stand on the wave and surf. So, I switched to the <code>market order</code>.</p><img data-src="/2020/11/21/2020-11-17-launch-of-macd-strategy/surf.jpg" class="" width="400"></li><li><p>While I’m using <code>apscheduler</code> python library to manage the jobs to be run as cron job, I’m generating the <code>buy_list</code> and <code>sell_list</code> to see what stocks need to be traded every day before the market open. These two lists were passed between jobs as a form of parameters, which I found it’s not ideal as the action buy and sell rely on getting proper return values of another isolated job. Therefore I’m thinking of persisting the results so that the other two jobs will always get the data, even it’s outdated.</p></li></ol><blockquote><p>Just doesn’t seem right to generate public variables and have several jobs to access them without knowing the status of these public variables.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  buy_list = []</span><br><span class="line">  sell_list = []</span><br><span class="line">...</span><br><span class="line">  <span class="comment"># job to process data and generates buy and sell lists</span></span><br><span class="line">  __scheduler.add_job(</span><br><span class="line">      before_trade,</span><br><span class="line">      <span class="string">&#x27;cron&#x27;</span>,</span><br><span class="line">      args=[buy_list, sell_list],</span><br><span class="line">      day_of_week=<span class="string">&#x27;mon-fri&#x27;</span>,</span><br><span class="line">      hour=<span class="number">9</span>,</span><br><span class="line">      minute=<span class="number">0</span>,</span><br><span class="line">      timezone=__est</span><br><span class="line">  )</span><br><span class="line">  <span class="comment"># job to perform buy action according to buy_list</span></span><br><span class="line">  __scheduler.add_job(</span><br><span class="line">      trade_create_open,</span><br><span class="line">      <span class="string">&#x27;cron&#x27;</span>,</span><br><span class="line">      args=[buy_list],</span><br><span class="line">      day_of_week=<span class="string">&#x27;mon-fri&#x27;</span>,</span><br><span class="line">      hour=<span class="number">9</span>,</span><br><span class="line">      minute=<span class="number">35</span>,</span><br><span class="line">      timezone=__est</span><br><span class="line">  )</span><br><span class="line">  <span class="comment"># job to perform sell action according to sell_list</span></span><br><span class="line">  __scheduler.add_job(</span><br><span class="line">      trade_monitor_exit,</span><br><span class="line">      <span class="string">&#x27;cron&#x27;</span>,</span><br><span class="line">      args=[sell_list],</span><br><span class="line">      day_of_week=<span class="string">&#x27;mon-fri&#x27;</span>,</span><br><span class="line">      hour=<span class="number">9</span>,</span><br><span class="line">      minute=<span class="number">30</span>,</span><br><span class="line">      timezone=__est</span><br><span class="line">  )</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>I wouldn’t say the project is a success after 5 days of launching only. Anyone who has made their effort in the stock market would know the fact that, you could lose every penny you have earned for a long time in one single trading day. So instead of calling this project case close, I would rather continue reporting how this strategy goes and perform in the market from time to time.</p><p>But I have to admit that, it does feel good and satisfied to see the portfolio value went up while doing nothing much in the past week. I have fixed a few tiny bugs in the code, looking for my next target strategy, and watched a couple of movies. Also found out my wife was addicted to an old TV show called <a href="https://www.imdb.com/title/tt3228420/"><strong>「You’re the Worst」</strong></a>, which talking about the romance (or say drama…) between a British guy and an American woman. I have watched it with my wife for 10 minutes or so and then thinking …, I probably would have watched it with her if I’m 10 years younger than I am now.<br><img data-src="/2020/11/21/2020-11-17-launch-of-macd-strategy/youre_the_worst.jpg" class="" width="350"></p><p>Further down the road, I’m thinking of adding more tracking stats in the script so that I can capture more detailed information to analyze the performance, risk, exposures, win rate (hit rate), and alpha later on. Please stay tuned and we’ll see.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;At the beginning of this week (2020-Nov-16th), I have launched my script and traded live on the stock market. Again, having a professional habit of a project manager, I’m here to report how the project goes and what has been done.</summary>
    
    
    
    <category term="Quantitative Trading" scheme="http://mikelhsia.github.io/categories/Quantitative-Trading/"/>
    
    
    <category term="Momentum" scheme="http://mikelhsia.github.io/tags/Momentum/"/>
    
    <category term="Strategy" scheme="http://mikelhsia.github.io/tags/Strategy/"/>
    
  </entry>
  
  <entry>
    <title>【How 2】 Vol. 2. How to build an automated stock trading script</title>
    <link href="http://mikelhsia.github.io/2020/11/10/2020-11-08-macd-strategy-implementation/"/>
    <id>http://mikelhsia.github.io/2020/11/10/2020-11-08-macd-strategy-implementation/</id>
    <published>2020-11-09T18:35:54.000Z</published>
    <updated>2021-07-24T08:52:18.565Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2020/11/10/2020-11-08-macd-strategy-implementation/cover.png" class="" width="500"><h1 id="Quick-words"><a href="#Quick-words" class="headerlink" title="Quick words"></a>Quick words</h1><p>This is the Vol. 2 of the <strong>【How 2】 column</strong>.<br>It has been 3 weeks since my previous post. As my <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy">MACD strategy</a> automated trading script is almost completed, I would like to share this article to document my current research methodology and workflow that I used to capture the new idea from the internet. Hopefully, this can help anyone who’s doing the same as I am doing now, and I can review this in the future to improve my workflow.</p><a id="more"></a><h1 id="Automated-trading-script-project-detail-and-setup-introduction"><a href="#Automated-trading-script-project-detail-and-setup-introduction" class="headerlink" title="Automated trading script project detail and setup introduction"></a>Automated trading script project detail and setup introduction</h1><p>I’ve been learning algo-trading and building my own algo-trading framework (both workflow-wise and coding-wise) for the past 4-5 months. While researching and backtesting the MACD strategy that I posted <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy">here</a>, I finally gain the confidence to proceed to code and build the automated trading script. In these 3 weeks or so, I’ve tried my best to organize the thoughts and produce a workflow that I think it’s reasonable and efficient that can apply to beginners like me (it’s an occupational habit for a project manager to produce a workflow for everything … :)). There are several stages that I have put together so far:</p><h2 id="1-Tones-of-readings"><a href="#1-Tones-of-readings" class="headerlink" title="1. Tones of readings"></a>1. Tones of readings</h2><p>This is the part that probably consumes the most time. First I’ve been spending time reading articles in the forum, quant platform, and also blogs to gain exotic thoughts that are potential enough to be transformed into code. There are several places that I checked out to find out new thoughts:</p><ul><li><a href="https://analyzingalpha.com/"><strong>analyzingalpha.com</strong></a><ul><li>It’s a blog I like a lot which talks about quant trading and data analysis. Even though it published a new article every two to four weeks, the content usually gives me new thoughts that I can put into my quant strategy.</li></ul></li><li><a href="https://tradingsim.com/blog/category/day-trading/">tradingsim.com</a><ul><li>It’s a blog that talks about trading strategy, especially technical analysis. The <a href="https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy">MACD strategy</a> is originated from here.</li></ul></li><li><a href="https://medium.com/"><strong>medium</strong></a><ul><li>It’s a very well-known media platform that touches everything, from politics to economic or from mental health care to physical training. Even though it doesn’t illustrate the algo-trading strategy in a specific way, it does have tones of materials to read and reflect upon.</li></ul></li><li><a href="https://www.quantopian.com/posts"><strong>Quantopian forum</strong></a> (<em>It’s going to be shut down on Nov, 14th, 2020</em>)<ul><li>It’s probably one of the most well-known quant platforms in recent years. Quantopian backtest platform covers testing data for people to access during backtesting, a full set of web-based backtesting tools, and also a thriving community for professional and non-professional quants to discuss drafted strategy and pick each other’s brain. <strong>And it’s is free!</strong> What else you can ask for more? Sadly, at the end of last week, Quantopian announced the news that it’s going to close down everything by Nov 14th, 2020. There’s no specific reason stated why so, but it is what it is.</li></ul></li><li><a href="https://www.quantconnect.com/forum/"><strong>QuantConnect forum</strong></a> (<em>It’s an alternative after Quantopian is closing</em>)<ul><li>It’s an alternative 3rd party quant platform that I’ve found. It seems good and provides tools for Quantopian users to import their code into their platform. I’m still walking through all tools provided. One thing that I need to vent it out is that their UI/UX in the boot camp and projects is a bit difficult for former Quantopian users like me to comprehend. Still exploring at the moment.</li></ul></li></ul><img data-src="/2020/11/10/2020-11-08-macd-strategy-implementation/reading.jpg" class="" width="400"><h2 id="2-Research-and-backtesting-on-3rd-party-platform"><a href="#2-Research-and-backtesting-on-3rd-party-platform" class="headerlink" title="2. Research and backtesting on 3rd party platform"></a>2. Research and backtesting on 3rd party platform</h2><p>This is the most crucial part of all the stages. You need to transform the ideas into code. <a href="https://www.quantopian.com/">Quantopian</a> and <a href="https://www.quantconnect.com">QuantConnect</a> are the 3rd party platforms that help you to backtest and adjust the params in your algo. In these platforms, you can backtest your algo strategy against the historic pricing data provided, and the backtest will give you a simulated return over the time frame you specified.</p><p>In my experience, the backtest framework is consist of several parts:</p><ul><li>A <strong>stock universe screener</strong> that contains selected stocks, such as high-quality stocks that have high ROE or highly leveraged stocks that have high debt to equity ratio.</li><li><strong>Trading signal generation module</strong> that processes data periodically in order to generate trading signals.</li><li><strong>Trading execution module</strong> that picks the right timing to place buy/sell orders based on the signals generated from the above module.</li><li><strong>Risk management module</strong> (or a <strong>portfolio weight distributor</strong>) that helps manage the risk in various ways: allocating your cash to your target stock by market value, cutting losses if the stock plummeting than expected, … etc..</li></ul><p>Also in this stage, you will accumulate abundant pseudocode and code snippets in <a href="http://ipython.org/notebook.html">Jupyter notebook</a> as part of your research. These snippets can be reused while you’re building your automated script later and can save more time.</p><h2 id="3-Analyze-the-backtest-result-and-optimize"><a href="#3-Analyze-the-backtest-result-and-optimize" class="headerlink" title="3. Analyze the backtest result and optimize"></a>3. Analyze the backtest result and optimize</h2><p>Here are a few major indexes that you need to pay attention to while reviewing your algo results:</p><ul><li>Returns: The final return of the algorithm at the end of the backtest date</li><li>Alpha: Excess market-neutral return that is generated by this strategy</li><li>Beta: Represents an individual stock’s returns against those of the market as a whole</li><li>Sharpe: How much returns can we get if we take one more unit of risk</li><li>Drawdown: Maximum lost in a continuous period</li></ul><p>Therefore, you’re trying to look for a strategy that could give you 1. high return, 2. high alpha, 3. high Sharpe ratio, 4. low beta (not necessary), 5. small drawdown.</p><p>Other than these indexes, one thing you might also need to watch out as well: <strong>win rate</strong>. There’s no formal way of calculating the win rate as far as I know. It basically indicates how effective your strategy compares to the benchmark, usually an index ETF like SPY.</p><div class="table-container"><table><thead><tr><th>Scenario 1</th><th>Scenario 2</th></tr></thead><tbody><tr><td><img data-src="/2020/11/10/2020-11-08-macd-strategy-implementation/win-rate-high.png" class="" width="300"></td><td><img data-src="/2020/11/10/2020-11-08-macd-strategy-implementation/win-rate-low.png" class="" width="300"></td></tr></tbody></table></div><p>In the above example, two scenarios have similar total returns and Sharpe ratios. However, if you look into the diagram, that scenario 1 tends to outperform the benchmark constantly, meaning the portfolio in scenario 1 better hedge the downward risk than the portfolio in scenario 2. This is more of an objective method to compare among portfolios and to find a better strategy that hedges market risk.</p><h2 id="4-Write-a-blog-to-review-the-result"><a href="#4-Write-a-blog-to-review-the-result" class="headerlink" title="4. Write a blog to review the result"></a>4. Write a blog to review the result</h2><p>As a former senior project manager, one thing that I learned from experience is that documentation and records are the most valuable assets in a project. Therefore I’m writing blogs as a means to preserve the documentation. There’s no technical detail in the blog, and they are left in the code and Github, but the background stories and reasoning of decision making can be preserved better in this way. This is not a necessary step in the research workflow.</p><h2 id="5-QA-and-dry-run"><a href="#5-QA-and-dry-run" class="headerlink" title="5. QA and dry run"></a>5. QA and dry run</h2><p>By saying QA or dry run your algo, it means that you have to release your algo into the market and let it run without the actual trading, namely <strong>“paper trading”</strong>. Unfortunately, Quantopian doesn’t provide this service as a tool. There are alternatives that you can try out:</p><ul><li><a href="https://app.alpaca.markets/login">Alpaca</a> is famous for paper trading, and you can build your script on your local machine and connect to Alpaca to perform paper trading. If you want to dry run your algo without committing to any specific platform, this is definitely your choice.</li><li><a href="https://www.quantconnect.com/docs/live-trading/paper-trading">QuantConnect</a> provides a service for paper trading. However, you need to first construct your strategy on their platform using functions and APIs the platform provided.</li></ul><img data-src="/2020/11/10/2020-11-08-macd-strategy-implementation/alpaca_dashboard.png" class="" width="600"><p align="center"><quote><i>Alpaca dashboard</i></quote></p><h2 id="6-Automated-trading-script-It’s-the-real-deal"><a href="#6-Automated-trading-script-It’s-the-real-deal" class="headerlink" title="6. Automated trading script. It’s the real deal!"></a>6. Automated trading script. It’s the real deal!</h2><p>Ok, we’ve been messing around with all the tools/services provided to build our trading strategy that seems profitable. Now it’s time to get your hands dirty and to make something yourself from scratch.</p><p>When building your own automated trading script, there are two major topics that you have to addressed beforehand:</p><ol><li><strong>Does your broker provide external API provisioned for you to call in your script?</strong><ul><li><a href="https://secure.tdameritrade.com/"><strong>TD Ameritrade</strong></a> does have APIs provided and a <a href="https://developer.tdameritrade.com/">developer website</a>. However, I’ve been told that their APIs are not user-friendly enough and the documentation is poorly written. Thankfully, there’s an open-source library <a href="https://github.com/alexgolec/tda-api">tda-api</a> that really helps me out here. This library is still being maintained actively and it does have a small group of contributors helping to improve this library. So I do recommend you look into this library if your broker is TD Ameritrade.</li><li>Another broker is <a href="https://openapi.futunn.com/futu-api-doc/intro/opend.html"><strong>Futuniuniu</strong></a>. It’s a Hong Kong-based broker that allows you to buy/sell stocks traded in the US, HK, and China. Their <a href="https://futunnopen.github.io/futu-api-doc/cpp/trd.html">API document</a> is quite detailed and clear.</li></ul></li><li><strong>Where are you going to get your historic data from?</strong><ul><li>There are tones of free and paid 3rd-party data providers out there such as <em><a href="https://www.quandl.com/">Quandl</a></em>, <em><a href="https://pypi.org/project/yfinance/">yfinance</a></em>, <em><a href="https://iexcloud.io/">IEX Cloud</a></em>, …. I’m using <a href="https://api.tiingo.com/account/api/usage">Tiingo</a> as the price is more approachable for me as a beginner ($99/year for stock pricing and another $99/year for all fundamental data).</li><li><em>PS. Of course, as a professional skinflint, I have tried <a href="https://pypi.org/project/yfinance/">yfinance</a> for a week but finally quit. <a href="https://pypi.org/project/yfinance/">yfinance</a> is essentially a scraper that scrapes the data from <a href="https://finance.yahoo.com/">Yahoo Finance!</a> in realtime. However, I’m requesting fundamental data for over 2000 stocks. Once I got ~2000+ API successful responses, then my IP got blacklisted by <a href="https://finance.yahoo.com/">Yahoo Finance!</a>. So if you’re not requesting thousands of API calls in a short period of time, then <a href="https://pypi.org/project/yfinance/">yfinance</a> is still probably your best choice.</em></li></ul></li></ol><p>After you are able to resolve these two major topics, then you can move on to building your automated trading script.</p><p>I’m choosing <code>python</code> over C, as <code>pandas</code> is still one of the essential libraries to relieve me from managing the data analyzing and transforming. Here’s my setup for my project:</p><ul><li><code>APScheduler</code>: To run scheduled <strong>jobs</strong> such as buy stocks and sell stocks in a specific time in <code>cron</code> format.</li><li><code>multiprocessing</code>: To spawn numerous threads in order to fetch stocks data simultaneously, reducing the total time spent on fetching data.</li><li><code>pandas</code>: To batch-process the data fetched.</li><li><code>datetime</code>, <code>pytz</code>: To control datetime and timezone.</li><li><code>requests</code>: To manage API calls.</li></ul><p>The code was too complex and huge so I won’t post it here. You can comment below if you are interested in a specific part of the code, and I can show you how I do it.</p><h1 id="Final-words"><a href="#Final-words" class="headerlink" title="Final words"></a>Final words</h1><p>These are pretty much what I’ve been doing in these three weeks. At the moment, I’m dry-running my script in the live environment and see if there are any bugs that I can capture before I put this script into practice. I’m also going to open another column to present the results of this automated trading script that I built. Fingers crossed.</p><img data-src="/2020/11/10/2020-11-08-macd-strategy-implementation/fingers_crossed.jpg" class="" width="500">]]></content>
    
    
    <summary type="html">&lt;img data-src=&quot;/2020/11/10/2020-11-08-macd-strategy-implementation/cover.png&quot; class=&quot;&quot; width=&quot;500&quot;&gt;
&lt;h1 id=&quot;Quick-words&quot;&gt;&lt;a href=&quot;#Quick-words&quot; class=&quot;headerlink&quot; title=&quot;Quick words&quot;&gt;&lt;/a&gt;Quick words&lt;/h1&gt;&lt;p&gt;This is the Vol. 2 of the &lt;strong&gt;【How 2】 column&lt;/strong&gt;.&lt;br&gt;It has been 3 weeks since my previous post. As my &lt;a href=&quot;https://mikelhsia.github.io/2020/10/10/2020-10-10-macd-strategy&quot;&gt;MACD strategy&lt;/a&gt; automated trading script is almost completed, I would like to share this article to document my current research methodology and workflow that I used to capture the new idea from the internet. Hopefully, this can help anyone who’s doing the same as I am doing now, and I can review this in the future to improve my workflow.&lt;/p&gt;</summary>
    
    
    
    <category term="How2" scheme="http://mikelhsia.github.io/categories/How2/"/>
    
    
    <category term="How2" scheme="http://mikelhsia.github.io/tags/How2/"/>
    
    <category term="Momentum" scheme="http://mikelhsia.github.io/tags/Momentum/"/>
    
  </entry>
  
</feed>
